// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_write_results (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        page_entry_num_dout,
        page_entry_num_num_data_valid,
        page_entry_num_fifo_cap,
        page_entry_num_empty_n,
        page_entry_num_read,
        page_pair_num_loc_dout,
        page_pair_num_loc_num_data_valid,
        page_pair_num_loc_fifo_cap,
        page_pair_num_loc_empty_n,
        page_pair_num_loc_read,
        s_join_finish_dout,
        s_join_finish_num_data_valid,
        s_join_finish_fifo_cap,
        s_join_finish_empty_n,
        s_join_finish_read,
        s_result_pair_dout,
        s_result_pair_num_data_valid,
        s_result_pair_fifo_cap,
        s_result_pair_empty_n,
        s_result_pair_read,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RFIFONUM,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        out_intersect_dout,
        out_intersect_num_data_valid,
        out_intersect_fifo_cap,
        out_intersect_empty_n,
        out_intersect_read,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 76'd1;
parameter    ap_ST_fsm_state2 = 76'd2;
parameter    ap_ST_fsm_state3 = 76'd4;
parameter    ap_ST_fsm_state4 = 76'd8;
parameter    ap_ST_fsm_state5 = 76'd16;
parameter    ap_ST_fsm_state6 = 76'd32;
parameter    ap_ST_fsm_state7 = 76'd64;
parameter    ap_ST_fsm_state8 = 76'd128;
parameter    ap_ST_fsm_state9 = 76'd256;
parameter    ap_ST_fsm_state10 = 76'd512;
parameter    ap_ST_fsm_state11 = 76'd1024;
parameter    ap_ST_fsm_state12 = 76'd2048;
parameter    ap_ST_fsm_state13 = 76'd4096;
parameter    ap_ST_fsm_state14 = 76'd8192;
parameter    ap_ST_fsm_state15 = 76'd16384;
parameter    ap_ST_fsm_state16 = 76'd32768;
parameter    ap_ST_fsm_state17 = 76'd65536;
parameter    ap_ST_fsm_state18 = 76'd131072;
parameter    ap_ST_fsm_state19 = 76'd262144;
parameter    ap_ST_fsm_state20 = 76'd524288;
parameter    ap_ST_fsm_state21 = 76'd1048576;
parameter    ap_ST_fsm_state22 = 76'd2097152;
parameter    ap_ST_fsm_state23 = 76'd4194304;
parameter    ap_ST_fsm_state24 = 76'd8388608;
parameter    ap_ST_fsm_state25 = 76'd16777216;
parameter    ap_ST_fsm_state26 = 76'd33554432;
parameter    ap_ST_fsm_state27 = 76'd67108864;
parameter    ap_ST_fsm_state28 = 76'd134217728;
parameter    ap_ST_fsm_state29 = 76'd268435456;
parameter    ap_ST_fsm_state30 = 76'd536870912;
parameter    ap_ST_fsm_state31 = 76'd1073741824;
parameter    ap_ST_fsm_state32 = 76'd2147483648;
parameter    ap_ST_fsm_state33 = 76'd4294967296;
parameter    ap_ST_fsm_state34 = 76'd8589934592;
parameter    ap_ST_fsm_state35 = 76'd17179869184;
parameter    ap_ST_fsm_state36 = 76'd34359738368;
parameter    ap_ST_fsm_state37 = 76'd68719476736;
parameter    ap_ST_fsm_state38 = 76'd137438953472;
parameter    ap_ST_fsm_state39 = 76'd274877906944;
parameter    ap_ST_fsm_state40 = 76'd549755813888;
parameter    ap_ST_fsm_state41 = 76'd1099511627776;
parameter    ap_ST_fsm_state42 = 76'd2199023255552;
parameter    ap_ST_fsm_state43 = 76'd4398046511104;
parameter    ap_ST_fsm_state44 = 76'd8796093022208;
parameter    ap_ST_fsm_state45 = 76'd17592186044416;
parameter    ap_ST_fsm_state46 = 76'd35184372088832;
parameter    ap_ST_fsm_state47 = 76'd70368744177664;
parameter    ap_ST_fsm_state48 = 76'd140737488355328;
parameter    ap_ST_fsm_state49 = 76'd281474976710656;
parameter    ap_ST_fsm_state50 = 76'd562949953421312;
parameter    ap_ST_fsm_state51 = 76'd1125899906842624;
parameter    ap_ST_fsm_state52 = 76'd2251799813685248;
parameter    ap_ST_fsm_state53 = 76'd4503599627370496;
parameter    ap_ST_fsm_state54 = 76'd9007199254740992;
parameter    ap_ST_fsm_state55 = 76'd18014398509481984;
parameter    ap_ST_fsm_state56 = 76'd36028797018963968;
parameter    ap_ST_fsm_state57 = 76'd72057594037927936;
parameter    ap_ST_fsm_state58 = 76'd144115188075855872;
parameter    ap_ST_fsm_state59 = 76'd288230376151711744;
parameter    ap_ST_fsm_state60 = 76'd576460752303423488;
parameter    ap_ST_fsm_state61 = 76'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 76'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 76'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 76'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 76'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 76'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 76'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 76'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 76'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 76'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 76'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 76'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 76'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 76'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 76'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 76'd37778931862957161709568;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] page_entry_num_dout;
input  [1:0] page_entry_num_num_data_valid;
input  [1:0] page_entry_num_fifo_cap;
input   page_entry_num_empty_n;
output   page_entry_num_read;
input  [31:0] page_pair_num_loc_dout;
input  [1:0] page_pair_num_loc_num_data_valid;
input  [1:0] page_pair_num_loc_fifo_cap;
input   page_pair_num_loc_empty_n;
output   page_pair_num_loc_read;
input  [31:0] s_join_finish_dout;
input  [1:0] s_join_finish_num_data_valid;
input  [1:0] s_join_finish_fifo_cap;
input   s_join_finish_empty_n;
output   s_join_finish_read;
input  [63:0] s_result_pair_dout;
input  [9:0] s_result_pair_num_data_valid;
input  [9:0] s_result_pair_fifo_cap;
input   s_result_pair_empty_n;
output   s_result_pair_read;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [63:0] m_axi_gmem2_AWADDR;
output  [0:0] m_axi_gmem2_AWID;
output  [31:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [0:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [63:0] m_axi_gmem2_WDATA;
output  [7:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [0:0] m_axi_gmem2_WID;
output  [0:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [63:0] m_axi_gmem2_ARADDR;
output  [0:0] m_axi_gmem2_ARID;
output  [31:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [0:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [63:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [0:0] m_axi_gmem2_RID;
input  [8:0] m_axi_gmem2_RFIFONUM;
input  [0:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [0:0] m_axi_gmem2_BID;
input  [0:0] m_axi_gmem2_BUSER;
input  [63:0] out_intersect_dout;
input  [2:0] out_intersect_num_data_valid;
input  [2:0] out_intersect_fifo_cap;
input   out_intersect_empty_n;
output   out_intersect_read;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg page_entry_num_read;
reg page_pair_num_loc_read;
reg s_join_finish_read;
reg s_result_pair_read;
reg m_axi_gmem2_AWVALID;
reg[63:0] m_axi_gmem2_AWADDR;
reg[0:0] m_axi_gmem2_AWID;
reg[31:0] m_axi_gmem2_AWLEN;
reg[2:0] m_axi_gmem2_AWSIZE;
reg[1:0] m_axi_gmem2_AWBURST;
reg[1:0] m_axi_gmem2_AWLOCK;
reg[3:0] m_axi_gmem2_AWCACHE;
reg[2:0] m_axi_gmem2_AWPROT;
reg[3:0] m_axi_gmem2_AWQOS;
reg[3:0] m_axi_gmem2_AWREGION;
reg[0:0] m_axi_gmem2_AWUSER;
reg m_axi_gmem2_WVALID;
reg[63:0] m_axi_gmem2_WDATA;
reg[7:0] m_axi_gmem2_WSTRB;
reg m_axi_gmem2_WLAST;
reg[0:0] m_axi_gmem2_WID;
reg[0:0] m_axi_gmem2_WUSER;
reg m_axi_gmem2_BREADY;
reg out_intersect_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [75:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    page_entry_num_blk_n;
reg    page_pair_num_loc_blk_n;
reg    s_join_finish_blk_n;
wire    ap_CS_fsm_state7;
reg   [0:0] icmp_ln1073_reg_231;
reg   [0:0] targetBlock6_reg_235;
reg    gmem2_blk_n_AW;
reg    gmem2_blk_n_W;
wire    ap_CS_fsm_state8;
reg    gmem2_blk_n_B;
wire    ap_CS_fsm_state76;
reg    out_intersect_blk_n;
reg  signed [31:0] page_pair_num_loc_read_reg_199;
reg   [63:0] out_intersect_read_reg_204;
reg  signed [31:0] page_entry_num_read_reg_210;
wire  signed [63:0] sext_ln260_fu_149_p1;
reg  signed [63:0] sext_ln260_reg_215;
wire    ap_CS_fsm_state2;
wire  signed [63:0] mul_ln232_fu_155_p2;
reg  signed [63:0] mul_ln232_reg_220;
wire   [63:0] max_write_num_fu_161_p2;
reg   [63:0] max_write_num_reg_225;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1073_fu_165_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_return;
wire    ap_CS_fsm_state6;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_done;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_idle;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_ready;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_s_join_finish_read;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_s_result_pair_read;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_ext_blocking_n;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_str_blocking_n;
wire    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_int_blocking_n;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_done;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_idle;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_ready;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_s_result_pair_read;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWVALID;
wire   [63:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWADDR;
wire   [0:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWID;
wire   [31:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWLEN;
wire   [2:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWSIZE;
wire   [1:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWBURST;
wire   [1:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWLOCK;
wire   [3:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWCACHE;
wire   [2:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWPROT;
wire   [3:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWQOS;
wire   [3:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWREGION;
wire   [0:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWUSER;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WVALID;
wire   [63:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WDATA;
wire   [7:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WSTRB;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WLAST;
wire   [0:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WID;
wire   [0:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WUSER;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARVALID;
wire   [63:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARADDR;
wire   [0:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARID;
wire   [31:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARLEN;
wire   [2:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARSIZE;
wire   [1:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARBURST;
wire   [1:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARLOCK;
wire   [3:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARCACHE;
wire   [2:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARPROT;
wire   [3:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARQOS;
wire   [3:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARREGION;
wire   [0:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARUSER;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_RREADY;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_BREADY;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_s_join_finish_read;
wire   [63:0] grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_i_V_out;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_i_V_out_ap_vld;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_ext_blocking_n;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_str_blocking_n;
wire    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_int_blocking_n;
reg   [63:0] total_intersect_count_V_reg_116;
reg    ap_predicate_op103_read_state7;
reg    ap_block_state7;
reg    grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start_reg;
reg    grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start_reg;
wire    ap_CS_fsm_state5;
reg   [63:0] i_V_loc_fu_72;
wire  signed [63:0] sext_ln119_fu_182_p1;
reg    ap_block_state1;
wire  signed [31:0] max_write_num_fu_161_p1;
wire   [60:0] trunc_ln1_fu_173_p4;
reg   [75:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
reg    ap_ST_fsm_state76_blk;
wire    ap_ext_blocking_cur_n;
wire    ap_int_blocking_cur_n;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
reg    ap_condition_352;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 76'd1;
#0 grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start_reg = 1'b0;
#0 grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start_reg = 1'b0;
end

vadd_write_results_Pipeline_VITIS_LOOP_101_1 grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start),
    .ap_done(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_done),
    .ap_idle(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_idle),
    .ap_ready(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_ready),
    .s_join_finish_dout(s_join_finish_dout),
    .s_join_finish_num_data_valid(2'd0),
    .s_join_finish_fifo_cap(2'd0),
    .s_join_finish_empty_n(s_join_finish_empty_n),
    .s_join_finish_read(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_s_join_finish_read),
    .s_result_pair_dout(s_result_pair_dout),
    .s_result_pair_num_data_valid(10'd0),
    .s_result_pair_fifo_cap(10'd0),
    .s_result_pair_empty_n(s_result_pair_empty_n),
    .s_result_pair_read(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_s_result_pair_read),
    .ap_ext_blocking_n(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_str_blocking_n),
    .ap_int_blocking_n(grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_int_blocking_n)
);

vadd_write_results_Pipeline_VITIS_LOOP_104_2 grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start),
    .ap_done(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_done),
    .ap_idle(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_idle),
    .ap_ready(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_ready),
    .max_write_num(max_write_num_reg_225),
    .s_result_pair_dout(s_result_pair_dout),
    .s_result_pair_num_data_valid(10'd0),
    .s_result_pair_fifo_cap(10'd0),
    .s_result_pair_empty_n(s_result_pair_empty_n),
    .s_result_pair_read(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_s_result_pair_read),
    .out_intersect_load(out_intersect_read_reg_204),
    .m_axi_gmem2_AWVALID(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWVALID),
    .m_axi_gmem2_AWREADY(m_axi_gmem2_AWREADY),
    .m_axi_gmem2_AWADDR(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWADDR),
    .m_axi_gmem2_AWID(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWID),
    .m_axi_gmem2_AWLEN(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWLEN),
    .m_axi_gmem2_AWSIZE(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWSIZE),
    .m_axi_gmem2_AWBURST(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWBURST),
    .m_axi_gmem2_AWLOCK(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWLOCK),
    .m_axi_gmem2_AWCACHE(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWCACHE),
    .m_axi_gmem2_AWPROT(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWPROT),
    .m_axi_gmem2_AWQOS(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWQOS),
    .m_axi_gmem2_AWREGION(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWREGION),
    .m_axi_gmem2_AWUSER(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWUSER),
    .m_axi_gmem2_WVALID(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WVALID),
    .m_axi_gmem2_WREADY(m_axi_gmem2_WREADY),
    .m_axi_gmem2_WDATA(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WDATA),
    .m_axi_gmem2_WSTRB(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WSTRB),
    .m_axi_gmem2_WLAST(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WLAST),
    .m_axi_gmem2_WID(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WID),
    .m_axi_gmem2_WUSER(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WUSER),
    .m_axi_gmem2_ARVALID(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARVALID),
    .m_axi_gmem2_ARREADY(1'b0),
    .m_axi_gmem2_ARADDR(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARADDR),
    .m_axi_gmem2_ARID(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARID),
    .m_axi_gmem2_ARLEN(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARLEN),
    .m_axi_gmem2_ARSIZE(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARSIZE),
    .m_axi_gmem2_ARBURST(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARBURST),
    .m_axi_gmem2_ARLOCK(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARLOCK),
    .m_axi_gmem2_ARCACHE(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARCACHE),
    .m_axi_gmem2_ARPROT(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARPROT),
    .m_axi_gmem2_ARQOS(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARQOS),
    .m_axi_gmem2_ARREGION(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARREGION),
    .m_axi_gmem2_ARUSER(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_ARUSER),
    .m_axi_gmem2_RVALID(1'b0),
    .m_axi_gmem2_RREADY(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_RREADY),
    .m_axi_gmem2_RDATA(64'd0),
    .m_axi_gmem2_RLAST(1'b0),
    .m_axi_gmem2_RID(1'd0),
    .m_axi_gmem2_RFIFONUM(9'd0),
    .m_axi_gmem2_RUSER(1'd0),
    .m_axi_gmem2_RRESP(2'd0),
    .m_axi_gmem2_BVALID(m_axi_gmem2_BVALID),
    .m_axi_gmem2_BREADY(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_BREADY),
    .m_axi_gmem2_BRESP(m_axi_gmem2_BRESP),
    .m_axi_gmem2_BID(m_axi_gmem2_BID),
    .m_axi_gmem2_BUSER(m_axi_gmem2_BUSER),
    .s_join_finish_dout(s_join_finish_dout),
    .s_join_finish_num_data_valid(2'd0),
    .s_join_finish_fifo_cap(2'd0),
    .s_join_finish_empty_n(s_join_finish_empty_n),
    .s_join_finish_read(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_s_join_finish_read),
    .i_V_out(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_i_V_out),
    .i_V_out_ap_vld(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_i_V_out_ap_vld),
    .ap_return(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_return),
    .ap_ext_blocking_n(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_str_blocking_n),
    .ap_int_blocking_n(grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_int_blocking_n)
);

vadd_mul_32s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32s_32s_64_1_1_U85(
    .din0(page_entry_num_read_reg_210),
    .din1(page_pair_num_loc_read_reg_199),
    .dout(mul_ln232_fu_155_p2)
);

vadd_mul_64s_32s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_1_1_U86(
    .din0(mul_ln232_reg_220),
    .din1(max_write_num_fu_161_p1),
    .dout(max_write_num_fu_161_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state76) & (m_axi_gmem2_BVALID == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start_reg <= 1'b1;
        end else if ((grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_ready == 1'b1)) begin
            grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_ready == 1'b1)) begin
            grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_352)) begin
        if (((targetBlock6_reg_235 == 1'd1) | (icmp_ln1073_reg_231 == 1'd1))) begin
            total_intersect_count_V_reg_116 <= 64'd0;
        end else if (((targetBlock6_reg_235 == 1'd0) & (icmp_ln1073_reg_231 == 1'd0))) begin
            total_intersect_count_V_reg_116 <= i_V_loc_fu_72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_i_V_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_V_loc_fu_72 <= grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_i_V_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln1073_reg_231 <= icmp_ln1073_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        max_write_num_reg_225 <= max_write_num_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln232_reg_220 <= mul_ln232_fu_155_p2;
        sext_ln260_reg_215 <= sext_ln260_fu_149_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        out_intersect_read_reg_204 <= out_intersect_dout;
        page_entry_num_read_reg_210 <= page_entry_num_dout;
        page_pair_num_loc_read_reg_199 <= page_pair_num_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        targetBlock6_reg_235 <= grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_return;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (out_intersect_empty_n == 1'b0) | (page_pair_num_loc_empty_n == 1'b0) | (page_entry_num_empty_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem2_BVALID == 1'b0)) begin
        ap_ST_fsm_state76_blk = 1'b1;
    end else begin
        ap_ST_fsm_state76_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem2_AWREADY == 1'b0) | ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0)))) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem2_WREADY == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & (m_axi_gmem2_BVALID == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & (m_axi_gmem2_BVALID == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state3 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state6 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        gmem2_blk_n_AW = m_axi_gmem2_AWREADY;
    end else begin
        gmem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        gmem2_blk_n_B = m_axi_gmem2_BVALID;
    end else begin
        gmem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        gmem2_blk_n_W = m_axi_gmem2_WREADY;
    end else begin
        gmem2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((~((m_axi_gmem2_AWREADY == 1'b0) | ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem2_AWADDR = sext_ln119_fu_182_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWADDR = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWADDR;
    end else begin
        m_axi_gmem2_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWBURST = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWBURST;
    end else begin
        m_axi_gmem2_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWCACHE = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWCACHE;
    end else begin
        m_axi_gmem2_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWID = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWID;
    end else begin
        m_axi_gmem2_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((~((m_axi_gmem2_AWREADY == 1'b0) | ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem2_AWLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWLEN = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWLEN;
    end else begin
        m_axi_gmem2_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWLOCK = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWLOCK;
    end else begin
        m_axi_gmem2_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWPROT = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWPROT;
    end else begin
        m_axi_gmem2_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWQOS = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWQOS;
    end else begin
        m_axi_gmem2_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWREGION = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWREGION;
    end else begin
        m_axi_gmem2_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWSIZE = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWSIZE;
    end else begin
        m_axi_gmem2_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWUSER = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWUSER;
    end else begin
        m_axi_gmem2_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((~((m_axi_gmem2_AWREADY == 1'b0) | ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem2_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_AWVALID = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_AWVALID;
    end else begin
        m_axi_gmem2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & (m_axi_gmem2_BVALID == 1'b1))) begin
        m_axi_gmem2_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_BREADY = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_BREADY;
    end else begin
        m_axi_gmem2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        m_axi_gmem2_WDATA = total_intersect_count_V_reg_116;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_WDATA = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WDATA;
    end else begin
        m_axi_gmem2_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_WID = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WID;
    end else begin
        m_axi_gmem2_WID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_WLAST = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WLAST;
    end else begin
        m_axi_gmem2_WLAST = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        m_axi_gmem2_WSTRB = 8'd255;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_WSTRB = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WSTRB;
    end else begin
        m_axi_gmem2_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_WUSER = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WUSER;
    end else begin
        m_axi_gmem2_WUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (m_axi_gmem2_WREADY == 1'b1))) begin
        m_axi_gmem2_WVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_gmem2_WVALID = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_m_axi_gmem2_WVALID;
    end else begin
        m_axi_gmem2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_intersect_blk_n = out_intersect_empty_n;
    end else begin
        out_intersect_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (out_intersect_empty_n == 1'b0) | (page_pair_num_loc_empty_n == 1'b0) | (page_entry_num_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_intersect_read = 1'b1;
    end else begin
        out_intersect_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        page_entry_num_blk_n = page_entry_num_empty_n;
    end else begin
        page_entry_num_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (out_intersect_empty_n == 1'b0) | (page_pair_num_loc_empty_n == 1'b0) | (page_entry_num_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        page_entry_num_read = 1'b1;
    end else begin
        page_entry_num_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        page_pair_num_loc_blk_n = page_pair_num_loc_empty_n;
    end else begin
        page_pair_num_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (out_intersect_empty_n == 1'b0) | (page_pair_num_loc_empty_n == 1'b0) | (page_entry_num_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        page_pair_num_loc_read = 1'b1;
    end else begin
        page_pair_num_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (targetBlock6_reg_235 == 1'd0) & (icmp_ln1073_reg_231 == 1'd0))) begin
        s_join_finish_blk_n = s_join_finish_empty_n;
    end else begin
        s_join_finish_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((m_axi_gmem2_AWREADY == 1'b0) | ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0))) & (ap_predicate_op103_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        s_join_finish_read = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_join_finish_read = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_s_join_finish_read;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        s_join_finish_read = grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_s_join_finish_read;
    end else begin
        s_join_finish_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        s_result_pair_read = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_s_result_pair_read;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        s_result_pair_read = grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_s_result_pair_read;
    end else begin
        s_result_pair_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (out_intersect_empty_n == 1'b0) | (page_pair_num_loc_empty_n == 1'b0) | (page_entry_num_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln1073_fu_165_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((m_axi_gmem2_AWREADY == 1'b0) | ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (m_axi_gmem2_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (m_axi_gmem2_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (out_intersect_empty_n == 1'b0) | (page_pair_num_loc_empty_n == 1'b0) | (page_entry_num_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_352 = (~((m_axi_gmem2_AWREADY == 1'b0) | ((ap_predicate_op103_read_state7 == 1'b1) & (s_join_finish_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state7));
end

assign ap_ext_blocking_cur_n = (gmem2_blk_n_W & gmem2_blk_n_B & gmem2_blk_n_AW);

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & ap_ext_blocking_cur_n);

assign ap_int_blocking_cur_n = (s_join_finish_blk_n & page_pair_num_loc_blk_n & page_entry_num_blk_n & out_intersect_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & ap_int_blocking_cur_n);

always @ (*) begin
    ap_predicate_op103_read_state7 = ((targetBlock6_reg_235 == 1'd0) & (icmp_ln1073_reg_231 == 1'd0));
end

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start = grp_write_results_Pipeline_VITIS_LOOP_101_1_fu_128_ap_start_reg;

assign grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start = grp_write_results_Pipeline_VITIS_LOOP_104_2_fu_136_ap_start_reg;

assign icmp_ln1073_fu_165_p2 = ((max_write_num_reg_225 == 64'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem2_ARADDR = 64'd0;

assign m_axi_gmem2_ARBURST = 2'd0;

assign m_axi_gmem2_ARCACHE = 4'd0;

assign m_axi_gmem2_ARID = 1'd0;

assign m_axi_gmem2_ARLEN = 32'd0;

assign m_axi_gmem2_ARLOCK = 2'd0;

assign m_axi_gmem2_ARPROT = 3'd0;

assign m_axi_gmem2_ARQOS = 4'd0;

assign m_axi_gmem2_ARREGION = 4'd0;

assign m_axi_gmem2_ARSIZE = 3'd0;

assign m_axi_gmem2_ARUSER = 1'd0;

assign m_axi_gmem2_ARVALID = 1'b0;

assign m_axi_gmem2_RREADY = 1'b0;

assign max_write_num_fu_161_p1 = sext_ln260_reg_215;

assign sext_ln119_fu_182_p1 = $signed(trunc_ln1_fu_173_p4);

assign sext_ln260_fu_149_p1 = page_entry_num_read_reg_210;

assign trunc_ln1_fu_173_p4 = {{out_intersect_read_reg_204[63:3]}};

endmodule //vadd_write_results
