// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_query_vector_dispatcher_Pipeline_VITIS_LOOP_92_4_VITIS_LOOP_93_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_sub_query_vectors_i_14_din,
        s_sub_query_vectors_i_14_num_data_valid,
        s_sub_query_vectors_i_14_fifo_cap,
        s_sub_query_vectors_i_14_full_n,
        s_sub_query_vectors_i_14_write,
        s_sub_query_vectors_i_13_din,
        s_sub_query_vectors_i_13_num_data_valid,
        s_sub_query_vectors_i_13_fifo_cap,
        s_sub_query_vectors_i_13_full_n,
        s_sub_query_vectors_i_13_write,
        s_sub_query_vectors_i_12_din,
        s_sub_query_vectors_i_12_num_data_valid,
        s_sub_query_vectors_i_12_fifo_cap,
        s_sub_query_vectors_i_12_full_n,
        s_sub_query_vectors_i_12_write,
        s_sub_query_vectors_i_11_din,
        s_sub_query_vectors_i_11_num_data_valid,
        s_sub_query_vectors_i_11_fifo_cap,
        s_sub_query_vectors_i_11_full_n,
        s_sub_query_vectors_i_11_write,
        s_sub_query_vectors_i_10_din,
        s_sub_query_vectors_i_10_num_data_valid,
        s_sub_query_vectors_i_10_fifo_cap,
        s_sub_query_vectors_i_10_full_n,
        s_sub_query_vectors_i_10_write,
        s_sub_query_vectors_i_9_din,
        s_sub_query_vectors_i_9_num_data_valid,
        s_sub_query_vectors_i_9_fifo_cap,
        s_sub_query_vectors_i_9_full_n,
        s_sub_query_vectors_i_9_write,
        s_sub_query_vectors_i_8_din,
        s_sub_query_vectors_i_8_num_data_valid,
        s_sub_query_vectors_i_8_fifo_cap,
        s_sub_query_vectors_i_8_full_n,
        s_sub_query_vectors_i_8_write,
        s_sub_query_vectors_i_7_din,
        s_sub_query_vectors_i_7_num_data_valid,
        s_sub_query_vectors_i_7_fifo_cap,
        s_sub_query_vectors_i_7_full_n,
        s_sub_query_vectors_i_7_write,
        s_sub_query_vectors_i_6_din,
        s_sub_query_vectors_i_6_num_data_valid,
        s_sub_query_vectors_i_6_fifo_cap,
        s_sub_query_vectors_i_6_full_n,
        s_sub_query_vectors_i_6_write,
        s_sub_query_vectors_i_5_din,
        s_sub_query_vectors_i_5_num_data_valid,
        s_sub_query_vectors_i_5_fifo_cap,
        s_sub_query_vectors_i_5_full_n,
        s_sub_query_vectors_i_5_write,
        s_sub_query_vectors_i_4_din,
        s_sub_query_vectors_i_4_num_data_valid,
        s_sub_query_vectors_i_4_fifo_cap,
        s_sub_query_vectors_i_4_full_n,
        s_sub_query_vectors_i_4_write,
        s_sub_query_vectors_i_3_din,
        s_sub_query_vectors_i_3_num_data_valid,
        s_sub_query_vectors_i_3_fifo_cap,
        s_sub_query_vectors_i_3_full_n,
        s_sub_query_vectors_i_3_write,
        s_sub_query_vectors_i_2_din,
        s_sub_query_vectors_i_2_num_data_valid,
        s_sub_query_vectors_i_2_fifo_cap,
        s_sub_query_vectors_i_2_full_n,
        s_sub_query_vectors_i_2_write,
        s_sub_query_vectors_i_1_din,
        s_sub_query_vectors_i_1_num_data_valid,
        s_sub_query_vectors_i_1_fifo_cap,
        s_sub_query_vectors_i_1_full_n,
        s_sub_query_vectors_i_1_write,
        s_sub_query_vectors_i_0_din,
        s_sub_query_vectors_i_0_num_data_valid,
        s_sub_query_vectors_i_0_fifo_cap,
        s_sub_query_vectors_i_0_full_n,
        s_sub_query_vectors_i_0_write,
        s_sub_query_vectors_i_15_din,
        s_sub_query_vectors_i_15_num_data_valid,
        s_sub_query_vectors_i_15_fifo_cap,
        s_sub_query_vectors_i_15_full_n,
        s_sub_query_vectors_i_15_write,
        query_vector_buffer_address0,
        query_vector_buffer_ce0,
        query_vector_buffer_q0,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] s_sub_query_vectors_i_14_din;
input  [1:0] s_sub_query_vectors_i_14_num_data_valid;
input  [1:0] s_sub_query_vectors_i_14_fifo_cap;
input   s_sub_query_vectors_i_14_full_n;
output   s_sub_query_vectors_i_14_write;
output  [31:0] s_sub_query_vectors_i_13_din;
input  [1:0] s_sub_query_vectors_i_13_num_data_valid;
input  [1:0] s_sub_query_vectors_i_13_fifo_cap;
input   s_sub_query_vectors_i_13_full_n;
output   s_sub_query_vectors_i_13_write;
output  [31:0] s_sub_query_vectors_i_12_din;
input  [1:0] s_sub_query_vectors_i_12_num_data_valid;
input  [1:0] s_sub_query_vectors_i_12_fifo_cap;
input   s_sub_query_vectors_i_12_full_n;
output   s_sub_query_vectors_i_12_write;
output  [31:0] s_sub_query_vectors_i_11_din;
input  [1:0] s_sub_query_vectors_i_11_num_data_valid;
input  [1:0] s_sub_query_vectors_i_11_fifo_cap;
input   s_sub_query_vectors_i_11_full_n;
output   s_sub_query_vectors_i_11_write;
output  [31:0] s_sub_query_vectors_i_10_din;
input  [1:0] s_sub_query_vectors_i_10_num_data_valid;
input  [1:0] s_sub_query_vectors_i_10_fifo_cap;
input   s_sub_query_vectors_i_10_full_n;
output   s_sub_query_vectors_i_10_write;
output  [31:0] s_sub_query_vectors_i_9_din;
input  [1:0] s_sub_query_vectors_i_9_num_data_valid;
input  [1:0] s_sub_query_vectors_i_9_fifo_cap;
input   s_sub_query_vectors_i_9_full_n;
output   s_sub_query_vectors_i_9_write;
output  [31:0] s_sub_query_vectors_i_8_din;
input  [1:0] s_sub_query_vectors_i_8_num_data_valid;
input  [1:0] s_sub_query_vectors_i_8_fifo_cap;
input   s_sub_query_vectors_i_8_full_n;
output   s_sub_query_vectors_i_8_write;
output  [31:0] s_sub_query_vectors_i_7_din;
input  [1:0] s_sub_query_vectors_i_7_num_data_valid;
input  [1:0] s_sub_query_vectors_i_7_fifo_cap;
input   s_sub_query_vectors_i_7_full_n;
output   s_sub_query_vectors_i_7_write;
output  [31:0] s_sub_query_vectors_i_6_din;
input  [1:0] s_sub_query_vectors_i_6_num_data_valid;
input  [1:0] s_sub_query_vectors_i_6_fifo_cap;
input   s_sub_query_vectors_i_6_full_n;
output   s_sub_query_vectors_i_6_write;
output  [31:0] s_sub_query_vectors_i_5_din;
input  [1:0] s_sub_query_vectors_i_5_num_data_valid;
input  [1:0] s_sub_query_vectors_i_5_fifo_cap;
input   s_sub_query_vectors_i_5_full_n;
output   s_sub_query_vectors_i_5_write;
output  [31:0] s_sub_query_vectors_i_4_din;
input  [1:0] s_sub_query_vectors_i_4_num_data_valid;
input  [1:0] s_sub_query_vectors_i_4_fifo_cap;
input   s_sub_query_vectors_i_4_full_n;
output   s_sub_query_vectors_i_4_write;
output  [31:0] s_sub_query_vectors_i_3_din;
input  [1:0] s_sub_query_vectors_i_3_num_data_valid;
input  [1:0] s_sub_query_vectors_i_3_fifo_cap;
input   s_sub_query_vectors_i_3_full_n;
output   s_sub_query_vectors_i_3_write;
output  [31:0] s_sub_query_vectors_i_2_din;
input  [1:0] s_sub_query_vectors_i_2_num_data_valid;
input  [1:0] s_sub_query_vectors_i_2_fifo_cap;
input   s_sub_query_vectors_i_2_full_n;
output   s_sub_query_vectors_i_2_write;
output  [31:0] s_sub_query_vectors_i_1_din;
input  [1:0] s_sub_query_vectors_i_1_num_data_valid;
input  [1:0] s_sub_query_vectors_i_1_fifo_cap;
input   s_sub_query_vectors_i_1_full_n;
output   s_sub_query_vectors_i_1_write;
output  [31:0] s_sub_query_vectors_i_0_din;
input  [1:0] s_sub_query_vectors_i_0_num_data_valid;
input  [1:0] s_sub_query_vectors_i_0_fifo_cap;
input   s_sub_query_vectors_i_0_full_n;
output   s_sub_query_vectors_i_0_write;
output  [31:0] s_sub_query_vectors_i_15_din;
input  [1:0] s_sub_query_vectors_i_15_num_data_valid;
input  [1:0] s_sub_query_vectors_i_15_fifo_cap;
input   s_sub_query_vectors_i_15_full_n;
output   s_sub_query_vectors_i_15_write;
output  [8:0] query_vector_buffer_address0;
output   query_vector_buffer_ce0;
input  [31:0] query_vector_buffer_q0;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg s_sub_query_vectors_i_14_write;
reg s_sub_query_vectors_i_13_write;
reg s_sub_query_vectors_i_12_write;
reg s_sub_query_vectors_i_11_write;
reg s_sub_query_vectors_i_10_write;
reg s_sub_query_vectors_i_9_write;
reg s_sub_query_vectors_i_8_write;
reg s_sub_query_vectors_i_7_write;
reg s_sub_query_vectors_i_6_write;
reg s_sub_query_vectors_i_5_write;
reg s_sub_query_vectors_i_4_write;
reg s_sub_query_vectors_i_3_write;
reg s_sub_query_vectors_i_2_write;
reg s_sub_query_vectors_i_1_write;
reg s_sub_query_vectors_i_0_write;
reg s_sub_query_vectors_i_15_write;
reg query_vector_buffer_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [3:0] trunc_ln174_reg_428;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln92_fu_265_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    s_sub_query_vectors_i_0_blk_n;
wire    ap_block_pp0_stage0;
reg    s_sub_query_vectors_i_1_blk_n;
reg    s_sub_query_vectors_i_2_blk_n;
reg    s_sub_query_vectors_i_3_blk_n;
reg    s_sub_query_vectors_i_4_blk_n;
reg    s_sub_query_vectors_i_5_blk_n;
reg    s_sub_query_vectors_i_6_blk_n;
reg    s_sub_query_vectors_i_7_blk_n;
reg    s_sub_query_vectors_i_8_blk_n;
reg    s_sub_query_vectors_i_9_blk_n;
reg    s_sub_query_vectors_i_10_blk_n;
reg    s_sub_query_vectors_i_11_blk_n;
reg    s_sub_query_vectors_i_12_blk_n;
reg    s_sub_query_vectors_i_13_blk_n;
reg    s_sub_query_vectors_i_14_blk_n;
reg    s_sub_query_vectors_i_15_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] trunc_ln174_fu_354_p1;
wire   [63:0] zext_ln96_fu_349_p1;
reg   [6:0] m_fu_110;
wire   [6:0] add_ln93_fu_358_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_m_load;
reg   [2:0] i_fu_114;
wire   [2:0] select_ln92_1_fu_303_p3;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [8:0] indvar_flatten_fu_118;
wire   [8:0] add_ln92_fu_271_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] bitcast_ln174_fu_379_p1;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln93_fu_283_p2;
wire   [2:0] add_ln92_1_fu_297_p2;
wire   [6:0] select_ln92_fu_289_p3;
wire   [5:0] empty_323_fu_315_p1;
wire   [6:0] empty_324_fu_327_p2;
wire   [8:0] p_shl_fu_319_p3;
wire   [8:0] p_shl1_cast_fu_333_p1;
wire   [8:0] empty_325_fu_337_p2;
wire   [8:0] zext_ln92_fu_311_p1;
wire   [8:0] add_ln96_fu_343_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln92_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_114 <= select_ln92_1_fu_303_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_114 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln92_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_118 <= add_ln92_fu_271_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_118 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln92_fu_265_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            m_fu_110 <= add_ln93_fu_358_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m_fu_110 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_fu_265_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln174_reg_428 <= trunc_ln174_fu_354_p1;
    end
end

always @ (*) begin
    if (((icmp_ln92_fu_265_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_114;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_118;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m_load = 7'd0;
    end else begin
        ap_sig_allocacmp_m_load = m_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        query_vector_buffer_ce0 = 1'b1;
    end else begin
        query_vector_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_0_blk_n = s_sub_query_vectors_i_0_full_n;
    end else begin
        s_sub_query_vectors_i_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_0_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_10_blk_n = s_sub_query_vectors_i_10_full_n;
    end else begin
        s_sub_query_vectors_i_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_10_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_10_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_11_blk_n = s_sub_query_vectors_i_11_full_n;
    end else begin
        s_sub_query_vectors_i_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_11_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_11_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_12_blk_n = s_sub_query_vectors_i_12_full_n;
    end else begin
        s_sub_query_vectors_i_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_12_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_12_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_13_blk_n = s_sub_query_vectors_i_13_full_n;
    end else begin
        s_sub_query_vectors_i_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_13_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_13_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_14_blk_n = s_sub_query_vectors_i_14_full_n;
    end else begin
        s_sub_query_vectors_i_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_14_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_14_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_15_blk_n = s_sub_query_vectors_i_15_full_n;
    end else begin
        s_sub_query_vectors_i_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_15_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_15_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_1_blk_n = s_sub_query_vectors_i_1_full_n;
    end else begin
        s_sub_query_vectors_i_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_1_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_2_blk_n = s_sub_query_vectors_i_2_full_n;
    end else begin
        s_sub_query_vectors_i_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_2_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_3_blk_n = s_sub_query_vectors_i_3_full_n;
    end else begin
        s_sub_query_vectors_i_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_3_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_4_blk_n = s_sub_query_vectors_i_4_full_n;
    end else begin
        s_sub_query_vectors_i_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_4_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_5_blk_n = s_sub_query_vectors_i_5_full_n;
    end else begin
        s_sub_query_vectors_i_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_5_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_6_blk_n = s_sub_query_vectors_i_6_full_n;
    end else begin
        s_sub_query_vectors_i_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_6_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_7_blk_n = s_sub_query_vectors_i_7_full_n;
    end else begin
        s_sub_query_vectors_i_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_7_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_8_blk_n = s_sub_query_vectors_i_8_full_n;
    end else begin
        s_sub_query_vectors_i_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_8_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_9_blk_n = s_sub_query_vectors_i_9_full_n;
    end else begin
        s_sub_query_vectors_i_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln174_reg_428 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_query_vectors_i_9_write = 1'b1;
    end else begin
        s_sub_query_vectors_i_9_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln92_1_fu_297_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln92_fu_271_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln93_fu_358_p2 = (select_ln92_fu_289_p3 + 7'd1);

assign add_ln96_fu_343_p2 = (empty_325_fu_337_p2 + zext_ln92_fu_311_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((s_sub_query_vectors_i_9_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd9)) | ((s_sub_query_vectors_i_10_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd10)) | ((s_sub_query_vectors_i_11_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd11)) | ((s_sub_query_vectors_i_12_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd12)) | ((s_sub_query_vectors_i_13_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd13)) | ((trunc_ln174_reg_428 == 4'd14) & (s_sub_query_vectors_i_14_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd15) & (s_sub_query_vectors_i_15_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd0) & (s_sub_query_vectors_i_0_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd1) & (s_sub_query_vectors_i_1_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd2) & (s_sub_query_vectors_i_2_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd3) & (s_sub_query_vectors_i_3_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd4) & (s_sub_query_vectors_i_4_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd5) & (s_sub_query_vectors_i_5_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd6) & (s_sub_query_vectors_i_6_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd7) & (s_sub_query_vectors_i_7_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd8) & (s_sub_query_vectors_i_8_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((s_sub_query_vectors_i_9_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd9)) | ((s_sub_query_vectors_i_10_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd10)) | ((s_sub_query_vectors_i_11_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd11)) | ((s_sub_query_vectors_i_12_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd12)) | ((s_sub_query_vectors_i_13_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd13)) | ((trunc_ln174_reg_428 == 4'd14) & (s_sub_query_vectors_i_14_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd15) & (s_sub_query_vectors_i_15_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd0) & (s_sub_query_vectors_i_0_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd1) & (s_sub_query_vectors_i_1_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd2) & (s_sub_query_vectors_i_2_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd3) & (s_sub_query_vectors_i_3_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd4) & (s_sub_query_vectors_i_4_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd5) & (s_sub_query_vectors_i_5_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd6) & (s_sub_query_vectors_i_6_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd7) & (s_sub_query_vectors_i_7_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd8) & (s_sub_query_vectors_i_8_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((s_sub_query_vectors_i_9_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd9)) | ((s_sub_query_vectors_i_10_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd10)) | ((s_sub_query_vectors_i_11_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd11)) | ((s_sub_query_vectors_i_12_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd12)) | ((s_sub_query_vectors_i_13_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd13)) | ((trunc_ln174_reg_428 == 4'd14) & (s_sub_query_vectors_i_14_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd15) & (s_sub_query_vectors_i_15_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd0) & (s_sub_query_vectors_i_0_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd1) & (s_sub_query_vectors_i_1_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd2) & (s_sub_query_vectors_i_2_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd3) & (s_sub_query_vectors_i_3_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd4) & (s_sub_query_vectors_i_4_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd5) & (s_sub_query_vectors_i_5_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd6) & (s_sub_query_vectors_i_6_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd7) & (s_sub_query_vectors_i_7_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd8) & (s_sub_query_vectors_i_8_full_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((s_sub_query_vectors_i_9_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd9)) | ((s_sub_query_vectors_i_10_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd10)) | ((s_sub_query_vectors_i_11_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd11)) | ((s_sub_query_vectors_i_12_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd12)) | ((s_sub_query_vectors_i_13_full_n == 1'b0) & (trunc_ln174_reg_428 == 4'd13)) | ((trunc_ln174_reg_428 == 4'd14) & (s_sub_query_vectors_i_14_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd15) & (s_sub_query_vectors_i_15_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd0) & (s_sub_query_vectors_i_0_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd1) & (s_sub_query_vectors_i_1_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd2) & (s_sub_query_vectors_i_2_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd3) & (s_sub_query_vectors_i_3_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd4) & (s_sub_query_vectors_i_4_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd5) & (s_sub_query_vectors_i_5_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd6) & (s_sub_query_vectors_i_6_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd7) & (s_sub_query_vectors_i_7_full_n == 1'b0)) | ((trunc_ln174_reg_428 == 4'd8) & (s_sub_query_vectors_i_8_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (s_sub_query_vectors_i_9_blk_n & s_sub_query_vectors_i_8_blk_n & s_sub_query_vectors_i_7_blk_n & s_sub_query_vectors_i_6_blk_n & s_sub_query_vectors_i_5_blk_n & s_sub_query_vectors_i_4_blk_n & s_sub_query_vectors_i_3_blk_n & s_sub_query_vectors_i_2_blk_n & s_sub_query_vectors_i_1_blk_n & s_sub_query_vectors_i_15_blk_n & s_sub_query_vectors_i_14_blk_n & s_sub_query_vectors_i_13_blk_n & s_sub_query_vectors_i_12_blk_n & s_sub_query_vectors_i_11_blk_n & s_sub_query_vectors_i_10_blk_n & s_sub_query_vectors_i_0_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign bitcast_ln174_fu_379_p1 = query_vector_buffer_q0;

assign empty_323_fu_315_p1 = select_ln92_fu_289_p3[5:0];

assign empty_324_fu_327_p2 = select_ln92_fu_289_p3 << 7'd1;

assign empty_325_fu_337_p2 = (p_shl_fu_319_p3 - p_shl1_cast_fu_333_p1);

assign icmp_ln92_fu_265_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd384) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_283_p2 = ((ap_sig_allocacmp_m_load == 7'd64) ? 1'b1 : 1'b0);

assign p_shl1_cast_fu_333_p1 = empty_324_fu_327_p2;

assign p_shl_fu_319_p3 = {{empty_323_fu_315_p1}, {3'd0}};

assign query_vector_buffer_address0 = zext_ln96_fu_349_p1;

assign s_sub_query_vectors_i_0_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_10_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_11_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_12_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_13_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_14_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_15_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_1_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_2_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_3_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_4_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_5_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_6_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_7_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_8_din = bitcast_ln174_fu_379_p1;

assign s_sub_query_vectors_i_9_din = bitcast_ln174_fu_379_p1;

assign select_ln92_1_fu_303_p3 = ((icmp_ln93_fu_283_p2[0:0] == 1'b1) ? add_ln92_1_fu_297_p2 : ap_sig_allocacmp_i_load);

assign select_ln92_fu_289_p3 = ((icmp_ln93_fu_283_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_m_load);

assign trunc_ln174_fu_354_p1 = select_ln92_fu_289_p3[3:0];

assign zext_ln92_fu_311_p1 = select_ln92_1_fu_303_p3;

assign zext_ln96_fu_349_p1 = add_ln96_fu_343_p2;

endmodule //vadd_query_vector_dispatcher_Pipeline_VITIS_LOOP_92_4_VITIS_LOOP_93_5
