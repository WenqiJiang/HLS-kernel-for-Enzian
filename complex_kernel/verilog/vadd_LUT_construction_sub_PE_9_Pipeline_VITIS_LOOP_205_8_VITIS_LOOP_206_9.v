// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_LUT_construction_sub_PE_9_Pipeline_VITIS_LOOP_205_8_VITIS_LOOP_206_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_sub_center_vectors_i_9_dout,
        s_sub_center_vectors_i_9_num_data_valid,
        s_sub_center_vectors_i_9_fifo_cap,
        s_sub_center_vectors_i_9_empty_n,
        s_sub_center_vectors_i_9_read,
        sub_residual_vector_47,
        sub_residual_vector_46,
        sub_residual_vector_45,
        sub_residual_vector_44,
        sub_residual_vector_43,
        sub_residual_vector_42,
        sub_residual_vector_41,
        sub_residual_vector_40,
        sub_residual_vector_39,
        sub_residual_vector_38,
        sub_residual_vector_37,
        sub_residual_vector_36,
        sub_residual_vector_35,
        sub_residual_vector_34,
        sub_residual_vector_33,
        sub_residual_vector_32,
        sub_residual_vector_31,
        sub_residual_vector_30,
        sub_residual_vector_29,
        sub_residual_vector_28,
        sub_residual_vector_27,
        sub_residual_vector_26,
        sub_residual_vector_25,
        sub_residual_vector_24,
        sub_query_vector_local_24_reload,
        sub_query_vector_local_25_reload,
        sub_query_vector_local_26_reload,
        sub_query_vector_local_27_reload,
        sub_query_vector_local_28_reload,
        sub_query_vector_local_29_reload,
        sub_query_vector_local_30_reload,
        sub_query_vector_local_31_reload,
        sub_query_vector_local_32_reload,
        sub_query_vector_local_33_reload,
        sub_query_vector_local_34_reload,
        sub_query_vector_local_35_reload,
        sub_query_vector_local_36_reload,
        sub_query_vector_local_37_reload,
        sub_query_vector_local_38_reload,
        sub_query_vector_local_39_reload,
        sub_query_vector_local_40_reload,
        sub_query_vector_local_41_reload,
        sub_query_vector_local_42_reload,
        sub_query_vector_local_43_reload,
        sub_query_vector_local_44_reload,
        sub_query_vector_local_45_reload,
        sub_query_vector_local_46_reload,
        sub_query_vector_local_47_reload,
        sub_residual_vector_71_out,
        sub_residual_vector_71_out_ap_vld,
        sub_residual_vector_70_out,
        sub_residual_vector_70_out_ap_vld,
        sub_residual_vector_69_out,
        sub_residual_vector_69_out_ap_vld,
        sub_residual_vector_68_out,
        sub_residual_vector_68_out_ap_vld,
        sub_residual_vector_67_out,
        sub_residual_vector_67_out_ap_vld,
        sub_residual_vector_66_out,
        sub_residual_vector_66_out_ap_vld,
        sub_residual_vector_65_out,
        sub_residual_vector_65_out_ap_vld,
        sub_residual_vector_64_out,
        sub_residual_vector_64_out_ap_vld,
        sub_residual_vector_63_out,
        sub_residual_vector_63_out_ap_vld,
        sub_residual_vector_62_out,
        sub_residual_vector_62_out_ap_vld,
        sub_residual_vector_61_out,
        sub_residual_vector_61_out_ap_vld,
        sub_residual_vector_60_out,
        sub_residual_vector_60_out_ap_vld,
        sub_residual_vector_59_out,
        sub_residual_vector_59_out_ap_vld,
        sub_residual_vector_58_out,
        sub_residual_vector_58_out_ap_vld,
        sub_residual_vector_57_out,
        sub_residual_vector_57_out_ap_vld,
        sub_residual_vector_56_out,
        sub_residual_vector_56_out_ap_vld,
        sub_residual_vector_55_out,
        sub_residual_vector_55_out_ap_vld,
        sub_residual_vector_54_out,
        sub_residual_vector_54_out_ap_vld,
        sub_residual_vector_53_out,
        sub_residual_vector_53_out_ap_vld,
        sub_residual_vector_52_out,
        sub_residual_vector_52_out_ap_vld,
        sub_residual_vector_51_out,
        sub_residual_vector_51_out_ap_vld,
        sub_residual_vector_50_out,
        sub_residual_vector_50_out_ap_vld,
        sub_residual_vector_49_out,
        sub_residual_vector_49_out_ap_vld,
        sub_residual_vector_48_out,
        sub_residual_vector_48_out_ap_vld,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n,
        grp_fu_2304_p_din0,
        grp_fu_2304_p_din1,
        grp_fu_2304_p_opcode,
        grp_fu_2304_p_dout0,
        grp_fu_2304_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] s_sub_center_vectors_i_9_dout;
input  [1:0] s_sub_center_vectors_i_9_num_data_valid;
input  [1:0] s_sub_center_vectors_i_9_fifo_cap;
input   s_sub_center_vectors_i_9_empty_n;
output   s_sub_center_vectors_i_9_read;
input  [31:0] sub_residual_vector_47;
input  [31:0] sub_residual_vector_46;
input  [31:0] sub_residual_vector_45;
input  [31:0] sub_residual_vector_44;
input  [31:0] sub_residual_vector_43;
input  [31:0] sub_residual_vector_42;
input  [31:0] sub_residual_vector_41;
input  [31:0] sub_residual_vector_40;
input  [31:0] sub_residual_vector_39;
input  [31:0] sub_residual_vector_38;
input  [31:0] sub_residual_vector_37;
input  [31:0] sub_residual_vector_36;
input  [31:0] sub_residual_vector_35;
input  [31:0] sub_residual_vector_34;
input  [31:0] sub_residual_vector_33;
input  [31:0] sub_residual_vector_32;
input  [31:0] sub_residual_vector_31;
input  [31:0] sub_residual_vector_30;
input  [31:0] sub_residual_vector_29;
input  [31:0] sub_residual_vector_28;
input  [31:0] sub_residual_vector_27;
input  [31:0] sub_residual_vector_26;
input  [31:0] sub_residual_vector_25;
input  [31:0] sub_residual_vector_24;
input  [31:0] sub_query_vector_local_24_reload;
input  [31:0] sub_query_vector_local_25_reload;
input  [31:0] sub_query_vector_local_26_reload;
input  [31:0] sub_query_vector_local_27_reload;
input  [31:0] sub_query_vector_local_28_reload;
input  [31:0] sub_query_vector_local_29_reload;
input  [31:0] sub_query_vector_local_30_reload;
input  [31:0] sub_query_vector_local_31_reload;
input  [31:0] sub_query_vector_local_32_reload;
input  [31:0] sub_query_vector_local_33_reload;
input  [31:0] sub_query_vector_local_34_reload;
input  [31:0] sub_query_vector_local_35_reload;
input  [31:0] sub_query_vector_local_36_reload;
input  [31:0] sub_query_vector_local_37_reload;
input  [31:0] sub_query_vector_local_38_reload;
input  [31:0] sub_query_vector_local_39_reload;
input  [31:0] sub_query_vector_local_40_reload;
input  [31:0] sub_query_vector_local_41_reload;
input  [31:0] sub_query_vector_local_42_reload;
input  [31:0] sub_query_vector_local_43_reload;
input  [31:0] sub_query_vector_local_44_reload;
input  [31:0] sub_query_vector_local_45_reload;
input  [31:0] sub_query_vector_local_46_reload;
input  [31:0] sub_query_vector_local_47_reload;
output  [31:0] sub_residual_vector_71_out;
output   sub_residual_vector_71_out_ap_vld;
output  [31:0] sub_residual_vector_70_out;
output   sub_residual_vector_70_out_ap_vld;
output  [31:0] sub_residual_vector_69_out;
output   sub_residual_vector_69_out_ap_vld;
output  [31:0] sub_residual_vector_68_out;
output   sub_residual_vector_68_out_ap_vld;
output  [31:0] sub_residual_vector_67_out;
output   sub_residual_vector_67_out_ap_vld;
output  [31:0] sub_residual_vector_66_out;
output   sub_residual_vector_66_out_ap_vld;
output  [31:0] sub_residual_vector_65_out;
output   sub_residual_vector_65_out_ap_vld;
output  [31:0] sub_residual_vector_64_out;
output   sub_residual_vector_64_out_ap_vld;
output  [31:0] sub_residual_vector_63_out;
output   sub_residual_vector_63_out_ap_vld;
output  [31:0] sub_residual_vector_62_out;
output   sub_residual_vector_62_out_ap_vld;
output  [31:0] sub_residual_vector_61_out;
output   sub_residual_vector_61_out_ap_vld;
output  [31:0] sub_residual_vector_60_out;
output   sub_residual_vector_60_out_ap_vld;
output  [31:0] sub_residual_vector_59_out;
output   sub_residual_vector_59_out_ap_vld;
output  [31:0] sub_residual_vector_58_out;
output   sub_residual_vector_58_out_ap_vld;
output  [31:0] sub_residual_vector_57_out;
output   sub_residual_vector_57_out_ap_vld;
output  [31:0] sub_residual_vector_56_out;
output   sub_residual_vector_56_out_ap_vld;
output  [31:0] sub_residual_vector_55_out;
output   sub_residual_vector_55_out_ap_vld;
output  [31:0] sub_residual_vector_54_out;
output   sub_residual_vector_54_out_ap_vld;
output  [31:0] sub_residual_vector_53_out;
output   sub_residual_vector_53_out_ap_vld;
output  [31:0] sub_residual_vector_52_out;
output   sub_residual_vector_52_out_ap_vld;
output  [31:0] sub_residual_vector_51_out;
output   sub_residual_vector_51_out_ap_vld;
output  [31:0] sub_residual_vector_50_out;
output   sub_residual_vector_50_out_ap_vld;
output  [31:0] sub_residual_vector_49_out;
output   sub_residual_vector_49_out_ap_vld;
output  [31:0] sub_residual_vector_48_out;
output   sub_residual_vector_48_out_ap_vld;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;
output  [31:0] grp_fu_2304_p_din0;
output  [31:0] grp_fu_2304_p_din1;
output  [1:0] grp_fu_2304_p_opcode;
input  [31:0] grp_fu_2304_p_dout0;
output   grp_fu_2304_p_ce;

reg ap_idle;
reg s_sub_center_vectors_i_9_read;
reg sub_residual_vector_71_out_ap_vld;
reg sub_residual_vector_70_out_ap_vld;
reg sub_residual_vector_69_out_ap_vld;
reg sub_residual_vector_68_out_ap_vld;
reg sub_residual_vector_67_out_ap_vld;
reg sub_residual_vector_66_out_ap_vld;
reg sub_residual_vector_65_out_ap_vld;
reg sub_residual_vector_64_out_ap_vld;
reg sub_residual_vector_63_out_ap_vld;
reg sub_residual_vector_62_out_ap_vld;
reg sub_residual_vector_61_out_ap_vld;
reg sub_residual_vector_60_out_ap_vld;
reg sub_residual_vector_59_out_ap_vld;
reg sub_residual_vector_58_out_ap_vld;
reg sub_residual_vector_57_out_ap_vld;
reg sub_residual_vector_56_out_ap_vld;
reg sub_residual_vector_55_out_ap_vld;
reg sub_residual_vector_54_out_ap_vld;
reg sub_residual_vector_53_out_ap_vld;
reg sub_residual_vector_52_out_ap_vld;
reg sub_residual_vector_51_out_ap_vld;
reg sub_residual_vector_50_out_ap_vld;
reg sub_residual_vector_49_out_ap_vld;
reg sub_residual_vector_48_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln205_fu_946_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    s_sub_center_vectors_i_9_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln205_reg_1537;
reg   [0:0] icmp_ln205_reg_1537_pp0_iter1_reg;
reg   [0:0] icmp_ln205_reg_1537_pp0_iter2_reg;
wire   [31:0] tmp_s_fu_1046_p26;
reg   [31:0] tmp_s_reg_1541;
wire   [4:0] add_ln210_1_fu_1100_p2;
reg   [4:0] add_ln210_1_reg_1546;
reg   [4:0] add_ln210_1_reg_1546_pp0_iter1_reg;
reg   [4:0] add_ln210_1_reg_1546_pp0_iter2_reg;
reg   [4:0] add_ln210_1_reg_1546_pp0_iter3_reg;
wire   [31:0] tmp_fu_1127_p1;
reg   [2:0] j_2_fu_234;
wire   [2:0] add_ln206_fu_1106_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_j_2_load;
reg   [2:0] i_17_fu_238;
wire   [2:0] select_ln205_1_fu_984_p3;
reg   [2:0] ap_sig_allocacmp_i_17_load;
reg   [4:0] indvar_flatten51_fu_242;
wire   [4:0] add_ln205_1_fu_952_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten51_load;
reg   [31:0] sub_residual_vector_fu_246;
reg   [31:0] sub_residual_vector_48_fu_250;
reg   [31:0] sub_residual_vector_49_fu_254;
reg   [31:0] sub_residual_vector_50_fu_258;
reg   [31:0] sub_residual_vector_51_fu_262;
reg   [31:0] sub_residual_vector_52_fu_266;
reg   [31:0] sub_residual_vector_53_fu_270;
reg   [31:0] sub_residual_vector_54_fu_274;
reg   [31:0] sub_residual_vector_55_fu_278;
reg   [31:0] sub_residual_vector_56_fu_282;
reg   [31:0] sub_residual_vector_57_fu_286;
reg   [31:0] sub_residual_vector_58_fu_290;
reg   [31:0] sub_residual_vector_59_fu_294;
reg   [31:0] sub_residual_vector_60_fu_298;
reg   [31:0] sub_residual_vector_61_fu_302;
reg   [31:0] sub_residual_vector_62_fu_306;
reg   [31:0] sub_residual_vector_63_fu_310;
reg   [31:0] sub_residual_vector_64_fu_314;
reg   [31:0] sub_residual_vector_65_fu_318;
reg   [31:0] sub_residual_vector_66_fu_322;
reg   [31:0] sub_residual_vector_67_fu_326;
reg   [31:0] sub_residual_vector_68_fu_330;
reg   [31:0] sub_residual_vector_69_fu_334;
reg   [31:0] sub_residual_vector_70_fu_338;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln206_fu_964_p2;
wire   [2:0] add_ln205_fu_978_p2;
wire   [2:0] select_ln205_fu_970_p3;
wire   [1:0] trunc_ln210_fu_1000_p1;
wire   [4:0] shl_ln5_fu_1004_p3;
wire   [2:0] shl_ln210_fu_1016_p2;
wire   [5:0] zext_ln210_fu_1012_p1;
wire   [5:0] zext_ln210_1_fu_1022_p1;
wire   [5:0] sub_ln210_fu_1026_p2;
wire   [5:0] zext_ln205_fu_992_p1;
wire   [5:0] add_ln210_fu_1036_p2;
wire  signed [63:0] tmp_s_fu_1046_p25;
wire   [4:0] trunc_ln210_2_fu_1032_p1;
wire   [4:0] zext_ln205_8_fu_996_p1;
reg    grp_fu_804_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_block_pp0_stage0_00001;
reg    ap_condition_805;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_mux_2464_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_2464_32_1_1_U2383(
    .din0(sub_query_vector_local_24_reload),
    .din1(sub_query_vector_local_25_reload),
    .din2(sub_query_vector_local_26_reload),
    .din3(sub_query_vector_local_27_reload),
    .din4(sub_query_vector_local_28_reload),
    .din5(sub_query_vector_local_29_reload),
    .din6(sub_query_vector_local_30_reload),
    .din7(sub_query_vector_local_31_reload),
    .din8(sub_query_vector_local_32_reload),
    .din9(sub_query_vector_local_33_reload),
    .din10(sub_query_vector_local_34_reload),
    .din11(sub_query_vector_local_35_reload),
    .din12(sub_query_vector_local_36_reload),
    .din13(sub_query_vector_local_37_reload),
    .din14(sub_query_vector_local_38_reload),
    .din15(sub_query_vector_local_39_reload),
    .din16(sub_query_vector_local_40_reload),
    .din17(sub_query_vector_local_41_reload),
    .din18(sub_query_vector_local_42_reload),
    .din19(sub_query_vector_local_43_reload),
    .din20(sub_query_vector_local_44_reload),
    .din21(sub_query_vector_local_45_reload),
    .din22(sub_query_vector_local_46_reload),
    .din23(sub_query_vector_local_47_reload),
    .din24(tmp_s_fu_1046_p25),
    .dout(tmp_s_fu_1046_p26)
);

vadd_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln205_fu_946_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_17_fu_238 <= select_ln205_1_fu_984_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_17_fu_238 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln205_fu_946_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten51_fu_242 <= add_ln205_1_fu_952_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten51_fu_242 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln205_fu_946_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_2_fu_234 <= add_ln206_fu_1106_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_2_fu_234 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_48_fu_250 <= sub_residual_vector_25;
        end else if (((5'd1 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_48_fu_250 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_49_fu_254 <= sub_residual_vector_26;
        end else if (((5'd2 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_49_fu_254 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_50_fu_258 <= sub_residual_vector_27;
        end else if (((5'd3 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_50_fu_258 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_51_fu_262 <= sub_residual_vector_28;
        end else if (((5'd4 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_51_fu_262 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_52_fu_266 <= sub_residual_vector_29;
        end else if (((5'd5 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_52_fu_266 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_53_fu_270 <= sub_residual_vector_30;
        end else if (((5'd6 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_53_fu_270 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_54_fu_274 <= sub_residual_vector_31;
        end else if (((5'd7 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_54_fu_274 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_55_fu_278 <= sub_residual_vector_32;
        end else if (((5'd8 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_55_fu_278 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_56_fu_282 <= sub_residual_vector_33;
        end else if (((5'd9 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_56_fu_282 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_57_fu_286 <= sub_residual_vector_34;
        end else if (((5'd10 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_57_fu_286 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_58_fu_290 <= sub_residual_vector_35;
        end else if (((5'd11 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_58_fu_290 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_59_fu_294 <= sub_residual_vector_36;
        end else if (((5'd12 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_59_fu_294 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_60_fu_298 <= sub_residual_vector_37;
        end else if (((5'd13 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_60_fu_298 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_61_fu_302 <= sub_residual_vector_38;
        end else if (((5'd14 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_61_fu_302 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_62_fu_306 <= sub_residual_vector_39;
        end else if (((5'd15 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_62_fu_306 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_63_fu_310 <= sub_residual_vector_40;
        end else if (((5'd16 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_63_fu_310 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_64_fu_314 <= sub_residual_vector_41;
        end else if (((5'd17 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_64_fu_314 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_65_fu_318 <= sub_residual_vector_42;
        end else if (((5'd18 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_65_fu_318 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_66_fu_322 <= sub_residual_vector_43;
        end else if (((5'd19 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_66_fu_322 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_67_fu_326 <= sub_residual_vector_44;
        end else if (((5'd20 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_67_fu_326 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_68_fu_330 <= sub_residual_vector_45;
        end else if (((5'd21 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_68_fu_330 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_69_fu_334 <= sub_residual_vector_46;
        end else if (((5'd22 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_69_fu_334 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_70_fu_338 <= sub_residual_vector_47;
        end else if ((1'b1 == ap_condition_805)) begin
            sub_residual_vector_70_fu_338 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_fu_246 <= sub_residual_vector_24;
        end else if (((5'd0 == add_ln210_1_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_fu_246 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln205_fu_946_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln210_1_reg_1546 <= add_ln210_1_fu_1100_p2;
        tmp_s_reg_1541 <= tmp_s_fu_1046_p26;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln210_1_reg_1546_pp0_iter1_reg <= add_ln210_1_reg_1546;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln205_reg_1537 <= icmp_ln205_fu_946_p2;
        icmp_ln205_reg_1537_pp0_iter1_reg <= icmp_ln205_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln210_1_reg_1546_pp0_iter2_reg <= add_ln210_1_reg_1546_pp0_iter1_reg;
        add_ln210_1_reg_1546_pp0_iter3_reg <= add_ln210_1_reg_1546_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln205_reg_1537_pp0_iter2_reg <= icmp_ln205_reg_1537_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((icmp_ln205_fu_946_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_17_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_17_load = i_17_fu_238;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten51_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten51_load = indvar_flatten51_fu_242;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_2_load = 3'd0;
    end else begin
        ap_sig_allocacmp_j_2_load = j_2_fu_234;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_804_ce = 1'b1;
    end else begin
        grp_fu_804_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_center_vectors_i_9_blk_n = s_sub_center_vectors_i_9_empty_n;
    end else begin
        s_sub_center_vectors_i_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_center_vectors_i_9_read = 1'b1;
    end else begin
        s_sub_center_vectors_i_9_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_48_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_48_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_49_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_49_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_50_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_50_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_51_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_51_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_52_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_52_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_53_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_53_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_54_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_54_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_55_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_55_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_56_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_56_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_57_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_57_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_58_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_58_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_59_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_59_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_60_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_60_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_61_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_61_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_62_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_62_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_63_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_63_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_64_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_64_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_65_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_65_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_66_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_66_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_67_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_67_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_68_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_68_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_69_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_69_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_70_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_70_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_71_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_71_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln205_1_fu_952_p2 = (ap_sig_allocacmp_indvar_flatten51_load + 5'd1);

assign add_ln205_fu_978_p2 = (ap_sig_allocacmp_i_17_load + 3'd1);

assign add_ln206_fu_1106_p2 = (select_ln205_fu_970_p3 + 3'd1);

assign add_ln210_1_fu_1100_p2 = (trunc_ln210_2_fu_1032_p1 + zext_ln205_8_fu_996_p1);

assign add_ln210_fu_1036_p2 = (sub_ln210_fu_1026_p2 + zext_ln205_fu_992_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((s_sub_center_vectors_i_9_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((s_sub_center_vectors_i_9_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((s_sub_center_vectors_i_9_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((s_sub_center_vectors_i_9_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (s_sub_center_vectors_i_9_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_805 = ((ap_enable_reg_pp0_iter4 == 1'b1) & ((5'd23 == add_ln210_1_reg_1546_pp0_iter3_reg) | ((5'd24 == add_ln210_1_reg_1546_pp0_iter3_reg) | ((5'd25 == add_ln210_1_reg_1546_pp0_iter3_reg) | ((5'd26 == add_ln210_1_reg_1546_pp0_iter3_reg) | ((5'd27 == add_ln210_1_reg_1546_pp0_iter3_reg) | ((5'd28 == add_ln210_1_reg_1546_pp0_iter3_reg) | ((5'd29 == add_ln210_1_reg_1546_pp0_iter3_reg) | ((5'd30 == add_ln210_1_reg_1546_pp0_iter3_reg) | (5'd31 == add_ln210_1_reg_1546_pp0_iter3_reg))))))))));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = s_sub_center_vectors_i_9_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign grp_fu_2304_p_ce = grp_fu_804_ce;

assign grp_fu_2304_p_din0 = tmp_s_reg_1541;

assign grp_fu_2304_p_din1 = tmp_fu_1127_p1;

assign grp_fu_2304_p_opcode = 2'd1;

assign icmp_ln205_fu_946_p2 = ((ap_sig_allocacmp_indvar_flatten51_load == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln206_fu_964_p2 = ((ap_sig_allocacmp_j_2_load == 3'd4) ? 1'b1 : 1'b0);

assign select_ln205_1_fu_984_p3 = ((icmp_ln206_fu_964_p2[0:0] == 1'b1) ? add_ln205_fu_978_p2 : ap_sig_allocacmp_i_17_load);

assign select_ln205_fu_970_p3 = ((icmp_ln206_fu_964_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_j_2_load);

assign shl_ln210_fu_1016_p2 = select_ln205_fu_970_p3 << 3'd1;

assign shl_ln5_fu_1004_p3 = {{trunc_ln210_fu_1000_p1}, {3'd0}};

assign sub_ln210_fu_1026_p2 = (zext_ln210_fu_1012_p1 - zext_ln210_1_fu_1022_p1);

assign sub_residual_vector_48_out = sub_residual_vector_fu_246;

assign sub_residual_vector_49_out = sub_residual_vector_48_fu_250;

assign sub_residual_vector_50_out = sub_residual_vector_49_fu_254;

assign sub_residual_vector_51_out = sub_residual_vector_50_fu_258;

assign sub_residual_vector_52_out = sub_residual_vector_51_fu_262;

assign sub_residual_vector_53_out = sub_residual_vector_52_fu_266;

assign sub_residual_vector_54_out = sub_residual_vector_53_fu_270;

assign sub_residual_vector_55_out = sub_residual_vector_54_fu_274;

assign sub_residual_vector_56_out = sub_residual_vector_55_fu_278;

assign sub_residual_vector_57_out = sub_residual_vector_56_fu_282;

assign sub_residual_vector_58_out = sub_residual_vector_57_fu_286;

assign sub_residual_vector_59_out = sub_residual_vector_58_fu_290;

assign sub_residual_vector_60_out = sub_residual_vector_59_fu_294;

assign sub_residual_vector_61_out = sub_residual_vector_60_fu_298;

assign sub_residual_vector_62_out = sub_residual_vector_61_fu_302;

assign sub_residual_vector_63_out = sub_residual_vector_62_fu_306;

assign sub_residual_vector_64_out = sub_residual_vector_63_fu_310;

assign sub_residual_vector_65_out = sub_residual_vector_64_fu_314;

assign sub_residual_vector_66_out = sub_residual_vector_65_fu_318;

assign sub_residual_vector_67_out = sub_residual_vector_66_fu_322;

assign sub_residual_vector_68_out = sub_residual_vector_67_fu_326;

assign sub_residual_vector_69_out = sub_residual_vector_68_fu_330;

assign sub_residual_vector_70_out = sub_residual_vector_69_fu_334;

assign sub_residual_vector_71_out = sub_residual_vector_70_fu_338;

assign tmp_fu_1127_p1 = s_sub_center_vectors_i_9_dout;

assign tmp_s_fu_1046_p25 = $signed(add_ln210_fu_1036_p2);

assign trunc_ln210_2_fu_1032_p1 = sub_ln210_fu_1026_p2[4:0];

assign trunc_ln210_fu_1000_p1 = select_ln205_fu_970_p3[1:0];

assign zext_ln205_8_fu_996_p1 = select_ln205_1_fu_984_p3;

assign zext_ln205_fu_992_p1 = select_ln205_1_fu_984_p3;

assign zext_ln210_1_fu_1022_p1 = shl_ln210_fu_1016_p2;

assign zext_ln210_fu_1012_p1 = shl_ln5_fu_1004_p3;

endmodule //vadd_LUT_construction_sub_PE_9_Pipeline_VITIS_LOOP_205_8_VITIS_LOOP_206_9
