// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_network_input_processing_Pipeline_VITIS_LOOP_71_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_cell_ID66_din,
        s_cell_ID66_num_data_valid,
        s_cell_ID66_fifo_cap,
        s_cell_ID66_full_n,
        s_cell_ID66_write,
        size_cell_IDs,
        nprobe_load,
        s_kernel_network_in65_dout,
        s_kernel_network_in65_num_data_valid,
        s_kernel_network_in65_fifo_cap,
        s_kernel_network_in65_empty_n,
        s_kernel_network_in65_read,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] s_cell_ID66_din;
input  [8:0] s_cell_ID66_num_data_valid;
input  [8:0] s_cell_ID66_fifo_cap;
input   s_cell_ID66_full_n;
output   s_cell_ID66_write;
input  [27:0] size_cell_IDs;
input  [31:0] nprobe_load;
input  [511:0] s_kernel_network_in65_dout;
input  [9:0] s_kernel_network_in65_num_data_valid;
input  [9:0] s_kernel_network_in65_fifo_cap;
input   s_kernel_network_in65_empty_n;
output   s_kernel_network_in65_read;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg[31:0] s_cell_ID66_din;
reg s_cell_ID66_write;
reg s_kernel_network_in65_read;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln81_15_reg_688;
reg    ap_block_state17_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln71_fu_183_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
reg   [0:0] icmp_ln71_reg_624;
reg   [0:0] icmp_ln81_14_reg_684;
reg    ap_predicate_op147_write_state16;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_subdone;
reg    s_kernel_network_in65_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    s_cell_ID66_blk_n;
reg   [0:0] icmp_ln81_reg_628;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln81_1_reg_632;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] icmp_ln81_2_reg_636;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] icmp_ln81_3_reg_640;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] icmp_ln81_4_reg_644;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] icmp_ln81_5_reg_648;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] icmp_ln81_6_reg_652;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [0:0] icmp_ln81_7_reg_656;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg   [0:0] icmp_ln81_8_reg_660;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg   [0:0] icmp_ln81_9_reg_664;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg   [0:0] icmp_ln81_10_reg_668;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
reg   [0:0] icmp_ln81_11_reg_672;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
reg   [0:0] icmp_ln81_12_reg_676;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
reg   [0:0] icmp_ln81_13_reg_680;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln81_fu_211_p2;
wire   [0:0] icmp_ln81_1_fu_227_p2;
wire   [0:0] icmp_ln81_2_fu_243_p2;
wire   [0:0] icmp_ln81_3_fu_259_p2;
wire   [0:0] icmp_ln81_4_fu_275_p2;
wire   [0:0] icmp_ln81_5_fu_291_p2;
wire   [0:0] icmp_ln81_6_fu_307_p2;
wire   [0:0] icmp_ln81_7_fu_323_p2;
wire   [0:0] icmp_ln81_8_fu_339_p2;
wire   [0:0] icmp_ln81_9_fu_355_p2;
wire   [0:0] icmp_ln81_10_fu_371_p2;
wire   [0:0] icmp_ln81_11_fu_387_p2;
wire   [0:0] icmp_ln81_12_fu_403_p2;
wire   [0:0] icmp_ln81_13_fu_419_p2;
wire   [0:0] icmp_ln81_14_fu_435_p2;
wire   [0:0] icmp_ln81_15_fu_451_p2;
reg   [31:0] cell_ID_uint_s_reg_692;
reg    ap_predicate_op104_write_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] cell_ID_uint_1_reg_697;
reg   [31:0] cell_ID_uint_2_reg_702;
reg   [31:0] cell_ID_uint_3_reg_707;
reg   [31:0] cell_ID_uint_4_reg_712;
reg   [31:0] cell_ID_uint_5_reg_717;
reg   [31:0] cell_ID_uint_6_reg_722;
reg   [31:0] cell_ID_uint_7_reg_727;
reg   [31:0] cell_ID_uint_8_reg_732;
reg   [31:0] cell_ID_uint_9_reg_737;
reg   [31:0] cell_ID_uint_10_reg_742;
reg   [31:0] cell_ID_uint_11_reg_747;
reg   [31:0] cell_ID_uint_12_reg_752;
reg   [31:0] cell_ID_uint_13_reg_757;
reg   [31:0] cell_ID_uint_14_reg_762;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [26:0] i_fu_142;
wire   [26:0] i_5_fu_189_p2;
wire    ap_loop_init;
reg   [26:0] ap_sig_allocacmp_i_4;
wire   [31:0] trunc_ln674_fu_462_p1;
reg    ap_block_pp0_stage1_01001;
reg    ap_predicate_op121_write_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_01001;
reg    ap_predicate_op123_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_01001;
reg    ap_predicate_op125_write_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
reg    ap_predicate_op127_write_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_01001;
reg    ap_predicate_op129_write_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_01001;
reg    ap_predicate_op131_write_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_01001;
reg    ap_predicate_op133_write_state9;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_01001;
reg    ap_predicate_op135_write_state10;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_01001;
reg    ap_predicate_op137_write_state11;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_01001;
reg    ap_predicate_op139_write_state12;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_01001;
reg    ap_predicate_op141_write_state13;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_01001;
reg    ap_predicate_op143_write_state14;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_01001;
reg    ap_predicate_op145_write_state15;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage15_11001;
wire   [27:0] i_cast_fu_179_p1;
wire   [25:0] empty_330_fu_195_p1;
wire   [29:0] mul1_fu_199_p3;
wire   [31:0] zext_ln674_fu_207_p1;
wire   [29:0] or_ln80_fu_217_p2;
wire   [31:0] zext_ln81_fu_223_p1;
wire   [29:0] or_ln80_1_fu_233_p2;
wire   [31:0] zext_ln81_1_fu_239_p1;
wire   [29:0] or_ln80_2_fu_249_p2;
wire   [31:0] zext_ln81_2_fu_255_p1;
wire   [29:0] or_ln80_3_fu_265_p2;
wire   [31:0] zext_ln81_3_fu_271_p1;
wire   [29:0] or_ln80_4_fu_281_p2;
wire   [31:0] zext_ln81_4_fu_287_p1;
wire   [29:0] or_ln80_5_fu_297_p2;
wire   [31:0] zext_ln81_5_fu_303_p1;
wire   [29:0] or_ln80_6_fu_313_p2;
wire   [31:0] zext_ln81_6_fu_319_p1;
wire   [29:0] or_ln80_7_fu_329_p2;
wire   [31:0] zext_ln81_7_fu_335_p1;
wire   [29:0] or_ln80_8_fu_345_p2;
wire   [31:0] zext_ln81_8_fu_351_p1;
wire   [29:0] or_ln80_9_fu_361_p2;
wire   [31:0] zext_ln81_9_fu_367_p1;
wire   [29:0] or_ln80_10_fu_377_p2;
wire   [31:0] zext_ln81_10_fu_383_p1;
wire   [29:0] or_ln80_11_fu_393_p2;
wire   [31:0] zext_ln81_11_fu_399_p1;
wire   [29:0] or_ln80_12_fu_409_p2;
wire   [31:0] zext_ln81_12_fu_415_p1;
wire   [29:0] or_ln80_13_fu_425_p2;
wire   [31:0] zext_ln81_13_fu_431_p1;
wire   [29:0] or_ln80_14_fu_441_p2;
wire   [31:0] zext_ln81_14_fu_447_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln71_fu_183_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_142 <= i_5_fu_189_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_142 <= 27'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cell_ID_uint_10_reg_742 <= {{s_kernel_network_in65_dout[383:352]}};
        cell_ID_uint_11_reg_747 <= {{s_kernel_network_in65_dout[415:384]}};
        cell_ID_uint_12_reg_752 <= {{s_kernel_network_in65_dout[447:416]}};
        cell_ID_uint_13_reg_757 <= {{s_kernel_network_in65_dout[479:448]}};
        cell_ID_uint_14_reg_762 <= {{s_kernel_network_in65_dout[511:480]}};
        cell_ID_uint_1_reg_697 <= {{s_kernel_network_in65_dout[95:64]}};
        cell_ID_uint_2_reg_702 <= {{s_kernel_network_in65_dout[127:96]}};
        cell_ID_uint_3_reg_707 <= {{s_kernel_network_in65_dout[159:128]}};
        cell_ID_uint_4_reg_712 <= {{s_kernel_network_in65_dout[191:160]}};
        cell_ID_uint_5_reg_717 <= {{s_kernel_network_in65_dout[223:192]}};
        cell_ID_uint_6_reg_722 <= {{s_kernel_network_in65_dout[255:224]}};
        cell_ID_uint_7_reg_727 <= {{s_kernel_network_in65_dout[287:256]}};
        cell_ID_uint_8_reg_732 <= {{s_kernel_network_in65_dout[319:288]}};
        cell_ID_uint_9_reg_737 <= {{s_kernel_network_in65_dout[351:320]}};
        cell_ID_uint_s_reg_692 <= {{s_kernel_network_in65_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln71_reg_624 <= icmp_ln71_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_183_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_10_reg_668 <= icmp_ln81_10_fu_371_p2;
        icmp_ln81_11_reg_672 <= icmp_ln81_11_fu_387_p2;
        icmp_ln81_12_reg_676 <= icmp_ln81_12_fu_403_p2;
        icmp_ln81_13_reg_680 <= icmp_ln81_13_fu_419_p2;
        icmp_ln81_14_reg_684 <= icmp_ln81_14_fu_435_p2;
        icmp_ln81_15_reg_688 <= icmp_ln81_15_fu_451_p2;
        icmp_ln81_1_reg_632 <= icmp_ln81_1_fu_227_p2;
        icmp_ln81_2_reg_636 <= icmp_ln81_2_fu_243_p2;
        icmp_ln81_3_reg_640 <= icmp_ln81_3_fu_259_p2;
        icmp_ln81_4_reg_644 <= icmp_ln81_4_fu_275_p2;
        icmp_ln81_5_reg_648 <= icmp_ln81_5_fu_291_p2;
        icmp_ln81_6_reg_652 <= icmp_ln81_6_fu_307_p2;
        icmp_ln81_7_reg_656 <= icmp_ln81_7_fu_323_p2;
        icmp_ln81_8_reg_660 <= icmp_ln81_8_fu_339_p2;
        icmp_ln81_9_reg_664 <= icmp_ln81_9_fu_355_p2;
        icmp_ln81_reg_628 <= icmp_ln81_fu_211_p2;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_183_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 27'd0;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_142;
    end
end

always @ (*) begin
    if ((((ap_predicate_op147_write_state16 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_13_reg_680 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_12_reg_676 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_11_reg_672 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_10_reg_668 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_9_reg_664 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_8_reg_660 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_7_reg_656 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_6_reg_652 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln81_5_reg_648 == 1'd1)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln81_4_reg_644 == 1'd1)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln81_3_reg_640 == 1'd1)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln81_2_reg_636 == 1'd1)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln81_1_reg_632 == 1'd1)) | ((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln81_reg_628 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln81_15_reg_688 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_cell_ID66_blk_n = s_cell_ID66_full_n;
    end else begin
        s_cell_ID66_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (icmp_ln81_15_reg_688 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_cell_ID66_din = cell_ID_uint_14_reg_762;
    end else if (((ap_predicate_op147_write_state16 == 1'b1) & (1'b0 == ap_block_pp0_stage15_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        s_cell_ID66_din = cell_ID_uint_13_reg_757;
    end else if (((1'b0 == ap_block_pp0_stage14_01001) & (ap_predicate_op145_write_state15 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        s_cell_ID66_din = cell_ID_uint_12_reg_752;
    end else if (((1'b0 == ap_block_pp0_stage13_01001) & (ap_predicate_op143_write_state14 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        s_cell_ID66_din = cell_ID_uint_11_reg_747;
    end else if (((1'b0 == ap_block_pp0_stage12_01001) & (ap_predicate_op141_write_state13 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        s_cell_ID66_din = cell_ID_uint_10_reg_742;
    end else if (((1'b0 == ap_block_pp0_stage11_01001) & (ap_predicate_op139_write_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        s_cell_ID66_din = cell_ID_uint_9_reg_737;
    end else if (((1'b0 == ap_block_pp0_stage10_01001) & (ap_predicate_op137_write_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        s_cell_ID66_din = cell_ID_uint_8_reg_732;
    end else if (((1'b0 == ap_block_pp0_stage9_01001) & (ap_predicate_op135_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        s_cell_ID66_din = cell_ID_uint_7_reg_727;
    end else if (((1'b0 == ap_block_pp0_stage8_01001) & (ap_predicate_op133_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        s_cell_ID66_din = cell_ID_uint_6_reg_722;
    end else if (((1'b0 == ap_block_pp0_stage7_01001) & (ap_predicate_op131_write_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        s_cell_ID66_din = cell_ID_uint_5_reg_717;
    end else if (((1'b0 == ap_block_pp0_stage6_01001) & (ap_predicate_op129_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        s_cell_ID66_din = cell_ID_uint_4_reg_712;
    end else if (((1'b0 == ap_block_pp0_stage5_01001) & (ap_predicate_op127_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        s_cell_ID66_din = cell_ID_uint_3_reg_707;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (ap_predicate_op125_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        s_cell_ID66_din = cell_ID_uint_2_reg_702;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (ap_predicate_op123_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        s_cell_ID66_din = cell_ID_uint_1_reg_697;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_predicate_op121_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        s_cell_ID66_din = cell_ID_uint_s_reg_692;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op104_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_cell_ID66_din = trunc_ln674_fu_462_p1;
    end else begin
        s_cell_ID66_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op147_write_state16 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_predicate_op145_write_state15 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_predicate_op143_write_state14 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_predicate_op141_write_state13 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_predicate_op139_write_state12 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_predicate_op137_write_state11 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_predicate_op135_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_predicate_op133_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_predicate_op131_write_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op129_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op127_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op125_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op123_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op121_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op104_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_15_reg_688 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_cell_ID66_write = 1'b1;
    end else begin
        s_cell_ID66_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_kernel_network_in65_blk_n = s_kernel_network_in65_empty_n;
    end else begin
        s_kernel_network_in65_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln71_reg_624 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_kernel_network_in65_read = 1'b1;
    end else begin
        s_kernel_network_in65_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_idle_pp0_1to1 == 1'b1) & (ap_start_int == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln81_15_reg_688 == 1'd1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln81_15_reg_688 == 1'd1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln81_15_reg_688 == 1'd1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((ap_predicate_op137_write_state11 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_predicate_op137_write_state11 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_predicate_op137_write_state11 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((ap_predicate_op139_write_state12 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_predicate_op139_write_state12 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_predicate_op139_write_state12 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((ap_predicate_op141_write_state13 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_predicate_op141_write_state13 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_predicate_op141_write_state13 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((ap_predicate_op143_write_state14 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_predicate_op143_write_state14 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_predicate_op143_write_state14 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((ap_predicate_op145_write_state15 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_predicate_op145_write_state15 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_predicate_op145_write_state15 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((ap_predicate_op147_write_state16 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_predicate_op147_write_state16 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_predicate_op147_write_state16 == 1'b1) & (s_cell_ID66_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((s_kernel_network_in65_empty_n == 1'b0) & (icmp_ln71_reg_624 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((s_kernel_network_in65_empty_n == 1'b0) & (icmp_ln71_reg_624 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((s_kernel_network_in65_empty_n == 1'b0) & (icmp_ln71_reg_624 == 1'd1))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op121_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op121_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op121_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op123_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op123_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op123_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op125_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op125_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op125_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op127_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op127_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op127_write_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op129_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op129_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op129_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op131_write_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op131_write_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op131_write_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op133_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op133_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op133_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op135_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op135_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op135_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op135_write_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((ap_predicate_op137_write_state11 == 1'b1) & (s_cell_ID66_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((ap_predicate_op139_write_state12 == 1'b1) & (s_cell_ID66_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((ap_predicate_op141_write_state13 == 1'b1) & (s_cell_ID66_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((ap_predicate_op143_write_state14 == 1'b1) & (s_cell_ID66_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((ap_predicate_op145_write_state15 == 1'b1) & (s_cell_ID66_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((ap_predicate_op147_write_state16 == 1'b1) & (s_cell_ID66_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1 = ((icmp_ln81_15_reg_688 == 1'd1) & (s_cell_ID66_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op104_write_state2 == 1'b1)) | ((s_kernel_network_in65_empty_n == 1'b0) & (icmp_ln71_reg_624 == 1'd1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op121_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op123_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op125_write_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op127_write_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op129_write_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op131_write_state8 == 1'b1));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((s_cell_ID66_full_n == 1'b0) & (ap_predicate_op133_write_state9 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (s_kernel_network_in65_blk_n & s_cell_ID66_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op104_write_state2 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_reg_628 == 1'd1));
end

always @ (*) begin
    ap_predicate_op121_write_state3 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_1_reg_632 == 1'd1));
end

always @ (*) begin
    ap_predicate_op123_write_state4 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_2_reg_636 == 1'd1));
end

always @ (*) begin
    ap_predicate_op125_write_state5 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_3_reg_640 == 1'd1));
end

always @ (*) begin
    ap_predicate_op127_write_state6 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_4_reg_644 == 1'd1));
end

always @ (*) begin
    ap_predicate_op129_write_state7 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_5_reg_648 == 1'd1));
end

always @ (*) begin
    ap_predicate_op131_write_state8 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_6_reg_652 == 1'd1));
end

always @ (*) begin
    ap_predicate_op133_write_state9 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_7_reg_656 == 1'd1));
end

always @ (*) begin
    ap_predicate_op135_write_state10 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_8_reg_660 == 1'd1));
end

always @ (*) begin
    ap_predicate_op137_write_state11 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_9_reg_664 == 1'd1));
end

always @ (*) begin
    ap_predicate_op139_write_state12 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_10_reg_668 == 1'd1));
end

always @ (*) begin
    ap_predicate_op141_write_state13 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_11_reg_672 == 1'd1));
end

always @ (*) begin
    ap_predicate_op143_write_state14 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_12_reg_676 == 1'd1));
end

always @ (*) begin
    ap_predicate_op145_write_state15 = ((icmp_ln71_reg_624 == 1'd1) & (icmp_ln81_13_reg_680 == 1'd1));
end

always @ (*) begin
    ap_predicate_op147_write_state16 = ((icmp_ln81_14_reg_684 == 1'd1) & (icmp_ln71_reg_624 == 1'd1));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign empty_330_fu_195_p1 = ap_sig_allocacmp_i_4[25:0];

assign i_5_fu_189_p2 = (ap_sig_allocacmp_i_4 + 27'd1);

assign i_cast_fu_179_p1 = ap_sig_allocacmp_i_4;

assign icmp_ln71_fu_183_p2 = (($signed(i_cast_fu_179_p1) < $signed(size_cell_IDs)) ? 1'b1 : 1'b0);

assign icmp_ln81_10_fu_371_p2 = (($signed(zext_ln81_9_fu_367_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_11_fu_387_p2 = (($signed(zext_ln81_10_fu_383_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_12_fu_403_p2 = (($signed(zext_ln81_11_fu_399_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_13_fu_419_p2 = (($signed(zext_ln81_12_fu_415_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_14_fu_435_p2 = (($signed(zext_ln81_13_fu_431_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_15_fu_451_p2 = (($signed(zext_ln81_14_fu_447_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_1_fu_227_p2 = (($signed(zext_ln81_fu_223_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_2_fu_243_p2 = (($signed(zext_ln81_1_fu_239_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_3_fu_259_p2 = (($signed(zext_ln81_2_fu_255_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_4_fu_275_p2 = (($signed(zext_ln81_3_fu_271_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_5_fu_291_p2 = (($signed(zext_ln81_4_fu_287_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_6_fu_307_p2 = (($signed(zext_ln81_5_fu_303_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_7_fu_323_p2 = (($signed(zext_ln81_6_fu_319_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_8_fu_339_p2 = (($signed(zext_ln81_7_fu_335_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_9_fu_355_p2 = (($signed(zext_ln81_8_fu_351_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_211_p2 = (($signed(zext_ln674_fu_207_p1) < $signed(nprobe_load)) ? 1'b1 : 1'b0);

assign mul1_fu_199_p3 = {{empty_330_fu_195_p1}, {4'd0}};

assign or_ln80_10_fu_377_p2 = (mul1_fu_199_p3 | 30'd11);

assign or_ln80_11_fu_393_p2 = (mul1_fu_199_p3 | 30'd12);

assign or_ln80_12_fu_409_p2 = (mul1_fu_199_p3 | 30'd13);

assign or_ln80_13_fu_425_p2 = (mul1_fu_199_p3 | 30'd14);

assign or_ln80_14_fu_441_p2 = (mul1_fu_199_p3 | 30'd15);

assign or_ln80_1_fu_233_p2 = (mul1_fu_199_p3 | 30'd2);

assign or_ln80_2_fu_249_p2 = (mul1_fu_199_p3 | 30'd3);

assign or_ln80_3_fu_265_p2 = (mul1_fu_199_p3 | 30'd4);

assign or_ln80_4_fu_281_p2 = (mul1_fu_199_p3 | 30'd5);

assign or_ln80_5_fu_297_p2 = (mul1_fu_199_p3 | 30'd6);

assign or_ln80_6_fu_313_p2 = (mul1_fu_199_p3 | 30'd7);

assign or_ln80_7_fu_329_p2 = (mul1_fu_199_p3 | 30'd8);

assign or_ln80_8_fu_345_p2 = (mul1_fu_199_p3 | 30'd9);

assign or_ln80_9_fu_361_p2 = (mul1_fu_199_p3 | 30'd10);

assign or_ln80_fu_217_p2 = (mul1_fu_199_p3 | 30'd1);

assign trunc_ln674_fu_462_p1 = s_kernel_network_in65_dout[31:0];

assign zext_ln674_fu_207_p1 = mul1_fu_199_p3;

assign zext_ln81_10_fu_383_p1 = or_ln80_10_fu_377_p2;

assign zext_ln81_11_fu_399_p1 = or_ln80_11_fu_393_p2;

assign zext_ln81_12_fu_415_p1 = or_ln80_12_fu_409_p2;

assign zext_ln81_13_fu_431_p1 = or_ln80_13_fu_425_p2;

assign zext_ln81_14_fu_447_p1 = or_ln80_14_fu_441_p2;

assign zext_ln81_1_fu_239_p1 = or_ln80_1_fu_233_p2;

assign zext_ln81_2_fu_255_p1 = or_ln80_2_fu_249_p2;

assign zext_ln81_3_fu_271_p1 = or_ln80_3_fu_265_p2;

assign zext_ln81_4_fu_287_p1 = or_ln80_4_fu_281_p2;

assign zext_ln81_5_fu_303_p1 = or_ln80_5_fu_297_p2;

assign zext_ln81_6_fu_319_p1 = or_ln80_6_fu_313_p2;

assign zext_ln81_7_fu_335_p1 = or_ln80_7_fu_329_p2;

assign zext_ln81_8_fu_351_p1 = or_ln80_8_fu_345_p2;

assign zext_ln81_9_fu_367_p1 = or_ln80_9_fu_361_p2;

assign zext_ln81_fu_223_p1 = or_ln80_fu_217_p2;

endmodule //vadd_network_input_processing_Pipeline_VITIS_LOOP_71_2
