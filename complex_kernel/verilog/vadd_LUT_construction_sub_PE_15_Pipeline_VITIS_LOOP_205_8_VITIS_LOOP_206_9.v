// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_LUT_construction_sub_PE_15_Pipeline_VITIS_LOOP_205_8_VITIS_LOOP_206_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_sub_center_vectors_i_15_dout,
        s_sub_center_vectors_i_15_num_data_valid,
        s_sub_center_vectors_i_15_fifo_cap,
        s_sub_center_vectors_i_15_empty_n,
        s_sub_center_vectors_i_15_read,
        sub_residual_vector_815,
        sub_residual_vector_814,
        sub_residual_vector_813,
        sub_residual_vector_812,
        sub_residual_vector_811,
        sub_residual_vector_810,
        sub_residual_vector_809,
        sub_residual_vector_808,
        sub_residual_vector_807,
        sub_residual_vector_806,
        sub_residual_vector_805,
        sub_residual_vector_804,
        sub_residual_vector_803,
        sub_residual_vector_802,
        sub_residual_vector_801,
        sub_residual_vector_800,
        sub_residual_vector_799,
        sub_residual_vector_798,
        sub_residual_vector_797,
        sub_residual_vector_796,
        sub_residual_vector_795,
        sub_residual_vector_794,
        sub_residual_vector_793,
        sub_residual_vector_792,
        sub_query_vector_local_600_reload,
        sub_query_vector_local_601_reload,
        sub_query_vector_local_602_reload,
        sub_query_vector_local_603_reload,
        sub_query_vector_local_604_reload,
        sub_query_vector_local_605_reload,
        sub_query_vector_local_606_reload,
        sub_query_vector_local_607_reload,
        sub_query_vector_local_608_reload,
        sub_query_vector_local_609_reload,
        sub_query_vector_local_610_reload,
        sub_query_vector_local_611_reload,
        sub_query_vector_local_612_reload,
        sub_query_vector_local_613_reload,
        sub_query_vector_local_614_reload,
        sub_query_vector_local_615_reload,
        sub_query_vector_local_616_reload,
        sub_query_vector_local_617_reload,
        sub_query_vector_local_618_reload,
        sub_query_vector_local_619_reload,
        sub_query_vector_local_620_reload,
        sub_query_vector_local_621_reload,
        sub_query_vector_local_622_reload,
        sub_query_vector_local_623_reload,
        sub_residual_vector_839_out,
        sub_residual_vector_839_out_ap_vld,
        sub_residual_vector_838_out,
        sub_residual_vector_838_out_ap_vld,
        sub_residual_vector_837_out,
        sub_residual_vector_837_out_ap_vld,
        sub_residual_vector_836_out,
        sub_residual_vector_836_out_ap_vld,
        sub_residual_vector_835_out,
        sub_residual_vector_835_out_ap_vld,
        sub_residual_vector_834_out,
        sub_residual_vector_834_out_ap_vld,
        sub_residual_vector_833_out,
        sub_residual_vector_833_out_ap_vld,
        sub_residual_vector_832_out,
        sub_residual_vector_832_out_ap_vld,
        sub_residual_vector_831_out,
        sub_residual_vector_831_out_ap_vld,
        sub_residual_vector_830_out,
        sub_residual_vector_830_out_ap_vld,
        sub_residual_vector_829_out,
        sub_residual_vector_829_out_ap_vld,
        sub_residual_vector_828_out,
        sub_residual_vector_828_out_ap_vld,
        sub_residual_vector_827_out,
        sub_residual_vector_827_out_ap_vld,
        sub_residual_vector_826_out,
        sub_residual_vector_826_out_ap_vld,
        sub_residual_vector_825_out,
        sub_residual_vector_825_out_ap_vld,
        sub_residual_vector_824_out,
        sub_residual_vector_824_out_ap_vld,
        sub_residual_vector_823_out,
        sub_residual_vector_823_out_ap_vld,
        sub_residual_vector_822_out,
        sub_residual_vector_822_out_ap_vld,
        sub_residual_vector_821_out,
        sub_residual_vector_821_out_ap_vld,
        sub_residual_vector_820_out,
        sub_residual_vector_820_out_ap_vld,
        sub_residual_vector_819_out,
        sub_residual_vector_819_out_ap_vld,
        sub_residual_vector_818_out,
        sub_residual_vector_818_out_ap_vld,
        sub_residual_vector_817_out,
        sub_residual_vector_817_out_ap_vld,
        sub_residual_vector_816_out,
        sub_residual_vector_816_out_ap_vld,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n,
        grp_fu_2304_p_din0,
        grp_fu_2304_p_din1,
        grp_fu_2304_p_opcode,
        grp_fu_2304_p_dout0,
        grp_fu_2304_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] s_sub_center_vectors_i_15_dout;
input  [1:0] s_sub_center_vectors_i_15_num_data_valid;
input  [1:0] s_sub_center_vectors_i_15_fifo_cap;
input   s_sub_center_vectors_i_15_empty_n;
output   s_sub_center_vectors_i_15_read;
input  [31:0] sub_residual_vector_815;
input  [31:0] sub_residual_vector_814;
input  [31:0] sub_residual_vector_813;
input  [31:0] sub_residual_vector_812;
input  [31:0] sub_residual_vector_811;
input  [31:0] sub_residual_vector_810;
input  [31:0] sub_residual_vector_809;
input  [31:0] sub_residual_vector_808;
input  [31:0] sub_residual_vector_807;
input  [31:0] sub_residual_vector_806;
input  [31:0] sub_residual_vector_805;
input  [31:0] sub_residual_vector_804;
input  [31:0] sub_residual_vector_803;
input  [31:0] sub_residual_vector_802;
input  [31:0] sub_residual_vector_801;
input  [31:0] sub_residual_vector_800;
input  [31:0] sub_residual_vector_799;
input  [31:0] sub_residual_vector_798;
input  [31:0] sub_residual_vector_797;
input  [31:0] sub_residual_vector_796;
input  [31:0] sub_residual_vector_795;
input  [31:0] sub_residual_vector_794;
input  [31:0] sub_residual_vector_793;
input  [31:0] sub_residual_vector_792;
input  [31:0] sub_query_vector_local_600_reload;
input  [31:0] sub_query_vector_local_601_reload;
input  [31:0] sub_query_vector_local_602_reload;
input  [31:0] sub_query_vector_local_603_reload;
input  [31:0] sub_query_vector_local_604_reload;
input  [31:0] sub_query_vector_local_605_reload;
input  [31:0] sub_query_vector_local_606_reload;
input  [31:0] sub_query_vector_local_607_reload;
input  [31:0] sub_query_vector_local_608_reload;
input  [31:0] sub_query_vector_local_609_reload;
input  [31:0] sub_query_vector_local_610_reload;
input  [31:0] sub_query_vector_local_611_reload;
input  [31:0] sub_query_vector_local_612_reload;
input  [31:0] sub_query_vector_local_613_reload;
input  [31:0] sub_query_vector_local_614_reload;
input  [31:0] sub_query_vector_local_615_reload;
input  [31:0] sub_query_vector_local_616_reload;
input  [31:0] sub_query_vector_local_617_reload;
input  [31:0] sub_query_vector_local_618_reload;
input  [31:0] sub_query_vector_local_619_reload;
input  [31:0] sub_query_vector_local_620_reload;
input  [31:0] sub_query_vector_local_621_reload;
input  [31:0] sub_query_vector_local_622_reload;
input  [31:0] sub_query_vector_local_623_reload;
output  [31:0] sub_residual_vector_839_out;
output   sub_residual_vector_839_out_ap_vld;
output  [31:0] sub_residual_vector_838_out;
output   sub_residual_vector_838_out_ap_vld;
output  [31:0] sub_residual_vector_837_out;
output   sub_residual_vector_837_out_ap_vld;
output  [31:0] sub_residual_vector_836_out;
output   sub_residual_vector_836_out_ap_vld;
output  [31:0] sub_residual_vector_835_out;
output   sub_residual_vector_835_out_ap_vld;
output  [31:0] sub_residual_vector_834_out;
output   sub_residual_vector_834_out_ap_vld;
output  [31:0] sub_residual_vector_833_out;
output   sub_residual_vector_833_out_ap_vld;
output  [31:0] sub_residual_vector_832_out;
output   sub_residual_vector_832_out_ap_vld;
output  [31:0] sub_residual_vector_831_out;
output   sub_residual_vector_831_out_ap_vld;
output  [31:0] sub_residual_vector_830_out;
output   sub_residual_vector_830_out_ap_vld;
output  [31:0] sub_residual_vector_829_out;
output   sub_residual_vector_829_out_ap_vld;
output  [31:0] sub_residual_vector_828_out;
output   sub_residual_vector_828_out_ap_vld;
output  [31:0] sub_residual_vector_827_out;
output   sub_residual_vector_827_out_ap_vld;
output  [31:0] sub_residual_vector_826_out;
output   sub_residual_vector_826_out_ap_vld;
output  [31:0] sub_residual_vector_825_out;
output   sub_residual_vector_825_out_ap_vld;
output  [31:0] sub_residual_vector_824_out;
output   sub_residual_vector_824_out_ap_vld;
output  [31:0] sub_residual_vector_823_out;
output   sub_residual_vector_823_out_ap_vld;
output  [31:0] sub_residual_vector_822_out;
output   sub_residual_vector_822_out_ap_vld;
output  [31:0] sub_residual_vector_821_out;
output   sub_residual_vector_821_out_ap_vld;
output  [31:0] sub_residual_vector_820_out;
output   sub_residual_vector_820_out_ap_vld;
output  [31:0] sub_residual_vector_819_out;
output   sub_residual_vector_819_out_ap_vld;
output  [31:0] sub_residual_vector_818_out;
output   sub_residual_vector_818_out_ap_vld;
output  [31:0] sub_residual_vector_817_out;
output   sub_residual_vector_817_out_ap_vld;
output  [31:0] sub_residual_vector_816_out;
output   sub_residual_vector_816_out_ap_vld;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;
output  [31:0] grp_fu_2304_p_din0;
output  [31:0] grp_fu_2304_p_din1;
output  [1:0] grp_fu_2304_p_opcode;
input  [31:0] grp_fu_2304_p_dout0;
output   grp_fu_2304_p_ce;

reg ap_idle;
reg s_sub_center_vectors_i_15_read;
reg sub_residual_vector_839_out_ap_vld;
reg sub_residual_vector_838_out_ap_vld;
reg sub_residual_vector_837_out_ap_vld;
reg sub_residual_vector_836_out_ap_vld;
reg sub_residual_vector_835_out_ap_vld;
reg sub_residual_vector_834_out_ap_vld;
reg sub_residual_vector_833_out_ap_vld;
reg sub_residual_vector_832_out_ap_vld;
reg sub_residual_vector_831_out_ap_vld;
reg sub_residual_vector_830_out_ap_vld;
reg sub_residual_vector_829_out_ap_vld;
reg sub_residual_vector_828_out_ap_vld;
reg sub_residual_vector_827_out_ap_vld;
reg sub_residual_vector_826_out_ap_vld;
reg sub_residual_vector_825_out_ap_vld;
reg sub_residual_vector_824_out_ap_vld;
reg sub_residual_vector_823_out_ap_vld;
reg sub_residual_vector_822_out_ap_vld;
reg sub_residual_vector_821_out_ap_vld;
reg sub_residual_vector_820_out_ap_vld;
reg sub_residual_vector_819_out_ap_vld;
reg sub_residual_vector_818_out_ap_vld;
reg sub_residual_vector_817_out_ap_vld;
reg sub_residual_vector_816_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln205_fu_946_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    s_sub_center_vectors_i_15_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln205_reg_1537;
reg   [0:0] icmp_ln205_reg_1537_pp0_iter1_reg;
reg   [0:0] icmp_ln205_reg_1537_pp0_iter2_reg;
wire   [31:0] tmp_s_fu_1046_p26;
reg   [31:0] tmp_s_reg_1541;
wire   [4:0] add_ln210_9_fu_1100_p2;
reg   [4:0] add_ln210_9_reg_1546;
reg   [4:0] add_ln210_9_reg_1546_pp0_iter1_reg;
reg   [4:0] add_ln210_9_reg_1546_pp0_iter2_reg;
reg   [4:0] add_ln210_9_reg_1546_pp0_iter3_reg;
wire   [31:0] tmp_fu_1127_p1;
reg   [2:0] j_fu_234;
wire   [2:0] add_ln206_fu_1106_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_j_load;
reg   [2:0] i_fu_238;
wire   [2:0] select_ln205_9_fu_984_p3;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [4:0] indvar_flatten51_fu_242;
wire   [4:0] add_ln205_9_fu_952_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten51_load;
reg   [31:0] sub_residual_vector_fu_246;
reg   [31:0] sub_residual_vector_425_fu_250;
reg   [31:0] sub_residual_vector_426_fu_254;
reg   [31:0] sub_residual_vector_427_fu_258;
reg   [31:0] sub_residual_vector_428_fu_262;
reg   [31:0] sub_residual_vector_429_fu_266;
reg   [31:0] sub_residual_vector_430_fu_270;
reg   [31:0] sub_residual_vector_431_fu_274;
reg   [31:0] sub_residual_vector_432_fu_278;
reg   [31:0] sub_residual_vector_433_fu_282;
reg   [31:0] sub_residual_vector_434_fu_286;
reg   [31:0] sub_residual_vector_435_fu_290;
reg   [31:0] sub_residual_vector_436_fu_294;
reg   [31:0] sub_residual_vector_437_fu_298;
reg   [31:0] sub_residual_vector_438_fu_302;
reg   [31:0] sub_residual_vector_439_fu_306;
reg   [31:0] sub_residual_vector_440_fu_310;
reg   [31:0] sub_residual_vector_441_fu_314;
reg   [31:0] sub_residual_vector_442_fu_318;
reg   [31:0] sub_residual_vector_443_fu_322;
reg   [31:0] sub_residual_vector_444_fu_326;
reg   [31:0] sub_residual_vector_445_fu_330;
reg   [31:0] sub_residual_vector_446_fu_334;
reg   [31:0] sub_residual_vector_447_fu_338;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln206_fu_964_p2;
wire   [2:0] add_ln205_fu_978_p2;
wire   [2:0] select_ln205_fu_970_p3;
wire   [1:0] trunc_ln210_fu_1000_p1;
wire   [4:0] shl_ln_fu_1004_p3;
wire   [2:0] shl_ln210_fu_1016_p2;
wire   [5:0] zext_ln210_fu_1012_p1;
wire   [5:0] zext_ln210_9_fu_1022_p1;
wire   [5:0] sub_ln210_fu_1026_p2;
wire   [5:0] zext_ln205_fu_992_p1;
wire   [5:0] add_ln210_fu_1036_p2;
wire  signed [63:0] tmp_s_fu_1046_p25;
wire   [4:0] trunc_ln210_11_fu_1032_p1;
wire   [4:0] zext_ln205_16_fu_996_p1;
reg    grp_fu_804_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_block_pp0_stage0_00001;
reg    ap_condition_805;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_mux_2464_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_2464_32_1_1_U3793(
    .din0(sub_query_vector_local_600_reload),
    .din1(sub_query_vector_local_601_reload),
    .din2(sub_query_vector_local_602_reload),
    .din3(sub_query_vector_local_603_reload),
    .din4(sub_query_vector_local_604_reload),
    .din5(sub_query_vector_local_605_reload),
    .din6(sub_query_vector_local_606_reload),
    .din7(sub_query_vector_local_607_reload),
    .din8(sub_query_vector_local_608_reload),
    .din9(sub_query_vector_local_609_reload),
    .din10(sub_query_vector_local_610_reload),
    .din11(sub_query_vector_local_611_reload),
    .din12(sub_query_vector_local_612_reload),
    .din13(sub_query_vector_local_613_reload),
    .din14(sub_query_vector_local_614_reload),
    .din15(sub_query_vector_local_615_reload),
    .din16(sub_query_vector_local_616_reload),
    .din17(sub_query_vector_local_617_reload),
    .din18(sub_query_vector_local_618_reload),
    .din19(sub_query_vector_local_619_reload),
    .din20(sub_query_vector_local_620_reload),
    .din21(sub_query_vector_local_621_reload),
    .din22(sub_query_vector_local_622_reload),
    .din23(sub_query_vector_local_623_reload),
    .din24(tmp_s_fu_1046_p25),
    .dout(tmp_s_fu_1046_p26)
);

vadd_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln205_fu_946_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_238 <= select_ln205_9_fu_984_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_238 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln205_fu_946_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten51_fu_242 <= add_ln205_9_fu_952_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten51_fu_242 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln205_fu_946_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_234 <= add_ln206_fu_1106_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_234 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_425_fu_250 <= sub_residual_vector_793;
        end else if (((5'd1 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_425_fu_250 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_426_fu_254 <= sub_residual_vector_794;
        end else if (((5'd2 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_426_fu_254 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_427_fu_258 <= sub_residual_vector_795;
        end else if (((5'd3 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_427_fu_258 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_428_fu_262 <= sub_residual_vector_796;
        end else if (((5'd4 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_428_fu_262 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_429_fu_266 <= sub_residual_vector_797;
        end else if (((5'd5 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_429_fu_266 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_430_fu_270 <= sub_residual_vector_798;
        end else if (((5'd6 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_430_fu_270 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_431_fu_274 <= sub_residual_vector_799;
        end else if (((5'd7 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_431_fu_274 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_432_fu_278 <= sub_residual_vector_800;
        end else if (((5'd8 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_432_fu_278 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_433_fu_282 <= sub_residual_vector_801;
        end else if (((5'd9 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_433_fu_282 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_434_fu_286 <= sub_residual_vector_802;
        end else if (((5'd10 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_434_fu_286 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_435_fu_290 <= sub_residual_vector_803;
        end else if (((5'd11 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_435_fu_290 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_436_fu_294 <= sub_residual_vector_804;
        end else if (((5'd12 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_436_fu_294 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_437_fu_298 <= sub_residual_vector_805;
        end else if (((5'd13 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_437_fu_298 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_438_fu_302 <= sub_residual_vector_806;
        end else if (((5'd14 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_438_fu_302 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_439_fu_306 <= sub_residual_vector_807;
        end else if (((5'd15 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_439_fu_306 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_440_fu_310 <= sub_residual_vector_808;
        end else if (((5'd16 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_440_fu_310 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_441_fu_314 <= sub_residual_vector_809;
        end else if (((5'd17 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_441_fu_314 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_442_fu_318 <= sub_residual_vector_810;
        end else if (((5'd18 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_442_fu_318 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_443_fu_322 <= sub_residual_vector_811;
        end else if (((5'd19 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_443_fu_322 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_444_fu_326 <= sub_residual_vector_812;
        end else if (((5'd20 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_444_fu_326 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_445_fu_330 <= sub_residual_vector_813;
        end else if (((5'd21 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_445_fu_330 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_446_fu_334 <= sub_residual_vector_814;
        end else if (((5'd22 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_446_fu_334 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_447_fu_338 <= sub_residual_vector_815;
        end else if ((1'b1 == ap_condition_805)) begin
            sub_residual_vector_447_fu_338 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sub_residual_vector_fu_246 <= sub_residual_vector_792;
        end else if (((5'd0 == add_ln210_9_reg_1546_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            sub_residual_vector_fu_246 <= grp_fu_2304_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln205_fu_946_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln210_9_reg_1546 <= add_ln210_9_fu_1100_p2;
        tmp_s_reg_1541 <= tmp_s_fu_1046_p26;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln210_9_reg_1546_pp0_iter1_reg <= add_ln210_9_reg_1546;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln205_reg_1537 <= icmp_ln205_fu_946_p2;
        icmp_ln205_reg_1537_pp0_iter1_reg <= icmp_ln205_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln210_9_reg_1546_pp0_iter2_reg <= add_ln210_9_reg_1546_pp0_iter1_reg;
        add_ln210_9_reg_1546_pp0_iter3_reg <= add_ln210_9_reg_1546_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln205_reg_1537_pp0_iter2_reg <= icmp_ln205_reg_1537_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((icmp_ln205_fu_946_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_238;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten51_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten51_load = indvar_flatten51_fu_242;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 3'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_234;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_804_ce = 1'b1;
    end else begin
        grp_fu_804_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_center_vectors_i_15_blk_n = s_sub_center_vectors_i_15_empty_n;
    end else begin
        s_sub_center_vectors_i_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_sub_center_vectors_i_15_read = 1'b1;
    end else begin
        s_sub_center_vectors_i_15_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_816_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_816_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_817_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_817_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_818_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_818_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_819_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_819_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_820_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_820_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_821_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_821_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_822_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_822_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_823_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_823_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_824_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_824_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_825_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_825_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_826_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_826_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_827_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_827_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_828_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_828_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_829_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_829_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_830_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_830_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_831_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_831_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_832_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_832_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_833_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_833_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_834_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_834_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_835_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_835_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_836_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_836_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_837_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_837_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_838_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_838_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_1537_pp0_iter2_reg == 1'd1))) begin
        sub_residual_vector_839_out_ap_vld = 1'b1;
    end else begin
        sub_residual_vector_839_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln205_9_fu_952_p2 = (ap_sig_allocacmp_indvar_flatten51_load + 5'd1);

assign add_ln205_fu_978_p2 = (ap_sig_allocacmp_i_load + 3'd1);

assign add_ln206_fu_1106_p2 = (select_ln205_fu_970_p3 + 3'd1);

assign add_ln210_9_fu_1100_p2 = (trunc_ln210_11_fu_1032_p1 + zext_ln205_16_fu_996_p1);

assign add_ln210_fu_1036_p2 = (sub_ln210_fu_1026_p2 + zext_ln205_fu_992_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((s_sub_center_vectors_i_15_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((s_sub_center_vectors_i_15_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((s_sub_center_vectors_i_15_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((s_sub_center_vectors_i_15_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (s_sub_center_vectors_i_15_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_805 = ((ap_enable_reg_pp0_iter4 == 1'b1) & ((5'd23 == add_ln210_9_reg_1546_pp0_iter3_reg) | ((5'd24 == add_ln210_9_reg_1546_pp0_iter3_reg) | ((5'd25 == add_ln210_9_reg_1546_pp0_iter3_reg) | ((5'd26 == add_ln210_9_reg_1546_pp0_iter3_reg) | ((5'd27 == add_ln210_9_reg_1546_pp0_iter3_reg) | ((5'd28 == add_ln210_9_reg_1546_pp0_iter3_reg) | ((5'd29 == add_ln210_9_reg_1546_pp0_iter3_reg) | ((5'd30 == add_ln210_9_reg_1546_pp0_iter3_reg) | (5'd31 == add_ln210_9_reg_1546_pp0_iter3_reg))))))))));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = s_sub_center_vectors_i_15_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign grp_fu_2304_p_ce = grp_fu_804_ce;

assign grp_fu_2304_p_din0 = tmp_s_reg_1541;

assign grp_fu_2304_p_din1 = tmp_fu_1127_p1;

assign grp_fu_2304_p_opcode = 2'd1;

assign icmp_ln205_fu_946_p2 = ((ap_sig_allocacmp_indvar_flatten51_load == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln206_fu_964_p2 = ((ap_sig_allocacmp_j_load == 3'd4) ? 1'b1 : 1'b0);

assign select_ln205_9_fu_984_p3 = ((icmp_ln206_fu_964_p2[0:0] == 1'b1) ? add_ln205_fu_978_p2 : ap_sig_allocacmp_i_load);

assign select_ln205_fu_970_p3 = ((icmp_ln206_fu_964_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_j_load);

assign shl_ln210_fu_1016_p2 = select_ln205_fu_970_p3 << 3'd1;

assign shl_ln_fu_1004_p3 = {{trunc_ln210_fu_1000_p1}, {3'd0}};

assign sub_ln210_fu_1026_p2 = (zext_ln210_fu_1012_p1 - zext_ln210_9_fu_1022_p1);

assign sub_residual_vector_816_out = sub_residual_vector_fu_246;

assign sub_residual_vector_817_out = sub_residual_vector_425_fu_250;

assign sub_residual_vector_818_out = sub_residual_vector_426_fu_254;

assign sub_residual_vector_819_out = sub_residual_vector_427_fu_258;

assign sub_residual_vector_820_out = sub_residual_vector_428_fu_262;

assign sub_residual_vector_821_out = sub_residual_vector_429_fu_266;

assign sub_residual_vector_822_out = sub_residual_vector_430_fu_270;

assign sub_residual_vector_823_out = sub_residual_vector_431_fu_274;

assign sub_residual_vector_824_out = sub_residual_vector_432_fu_278;

assign sub_residual_vector_825_out = sub_residual_vector_433_fu_282;

assign sub_residual_vector_826_out = sub_residual_vector_434_fu_286;

assign sub_residual_vector_827_out = sub_residual_vector_435_fu_290;

assign sub_residual_vector_828_out = sub_residual_vector_436_fu_294;

assign sub_residual_vector_829_out = sub_residual_vector_437_fu_298;

assign sub_residual_vector_830_out = sub_residual_vector_438_fu_302;

assign sub_residual_vector_831_out = sub_residual_vector_439_fu_306;

assign sub_residual_vector_832_out = sub_residual_vector_440_fu_310;

assign sub_residual_vector_833_out = sub_residual_vector_441_fu_314;

assign sub_residual_vector_834_out = sub_residual_vector_442_fu_318;

assign sub_residual_vector_835_out = sub_residual_vector_443_fu_322;

assign sub_residual_vector_836_out = sub_residual_vector_444_fu_326;

assign sub_residual_vector_837_out = sub_residual_vector_445_fu_330;

assign sub_residual_vector_838_out = sub_residual_vector_446_fu_334;

assign sub_residual_vector_839_out = sub_residual_vector_447_fu_338;

assign tmp_fu_1127_p1 = s_sub_center_vectors_i_15_dout;

assign tmp_s_fu_1046_p25 = $signed(add_ln210_fu_1036_p2);

assign trunc_ln210_11_fu_1032_p1 = sub_ln210_fu_1026_p2[4:0];

assign trunc_ln210_fu_1000_p1 = select_ln205_fu_970_p3[1:0];

assign zext_ln205_16_fu_996_p1 = select_ln205_9_fu_984_p3;

assign zext_ln205_fu_992_p1 = select_ln205_9_fu_984_p3;

assign zext_ln210_9_fu_1022_p1 = shl_ln210_fu_1016_p2;

assign zext_ln210_fu_1012_p1 = shl_ln_fu_1004_p3;

endmodule //vadd_LUT_construction_sub_PE_15_Pipeline_VITIS_LOOP_205_8_VITIS_LOOP_206_9
