// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_gather_LUT_results_Pipeline_VITIS_LOOP_247_1_VITIS_LOOP_249_2_VITIS_LOOP_251_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_partial_distance_LUT_i_0_dout,
        s_partial_distance_LUT_i_0_num_data_valid,
        s_partial_distance_LUT_i_0_fifo_cap,
        s_partial_distance_LUT_i_0_empty_n,
        s_partial_distance_LUT_i_0_read,
        s_partial_distance_LUT_i_1_dout,
        s_partial_distance_LUT_i_1_num_data_valid,
        s_partial_distance_LUT_i_1_fifo_cap,
        s_partial_distance_LUT_i_1_empty_n,
        s_partial_distance_LUT_i_1_read,
        s_partial_distance_LUT_i_2_dout,
        s_partial_distance_LUT_i_2_num_data_valid,
        s_partial_distance_LUT_i_2_fifo_cap,
        s_partial_distance_LUT_i_2_empty_n,
        s_partial_distance_LUT_i_2_read,
        s_partial_distance_LUT_i_3_dout,
        s_partial_distance_LUT_i_3_num_data_valid,
        s_partial_distance_LUT_i_3_fifo_cap,
        s_partial_distance_LUT_i_3_empty_n,
        s_partial_distance_LUT_i_3_read,
        s_partial_distance_LUT_i_4_dout,
        s_partial_distance_LUT_i_4_num_data_valid,
        s_partial_distance_LUT_i_4_fifo_cap,
        s_partial_distance_LUT_i_4_empty_n,
        s_partial_distance_LUT_i_4_read,
        s_partial_distance_LUT_i_5_dout,
        s_partial_distance_LUT_i_5_num_data_valid,
        s_partial_distance_LUT_i_5_fifo_cap,
        s_partial_distance_LUT_i_5_empty_n,
        s_partial_distance_LUT_i_5_read,
        s_partial_distance_LUT_i_6_dout,
        s_partial_distance_LUT_i_6_num_data_valid,
        s_partial_distance_LUT_i_6_fifo_cap,
        s_partial_distance_LUT_i_6_empty_n,
        s_partial_distance_LUT_i_6_read,
        s_partial_distance_LUT_i_7_dout,
        s_partial_distance_LUT_i_7_num_data_valid,
        s_partial_distance_LUT_i_7_fifo_cap,
        s_partial_distance_LUT_i_7_empty_n,
        s_partial_distance_LUT_i_7_read,
        s_partial_distance_LUT_i_8_dout,
        s_partial_distance_LUT_i_8_num_data_valid,
        s_partial_distance_LUT_i_8_fifo_cap,
        s_partial_distance_LUT_i_8_empty_n,
        s_partial_distance_LUT_i_8_read,
        s_partial_distance_LUT_i_9_dout,
        s_partial_distance_LUT_i_9_num_data_valid,
        s_partial_distance_LUT_i_9_fifo_cap,
        s_partial_distance_LUT_i_9_empty_n,
        s_partial_distance_LUT_i_9_read,
        s_partial_distance_LUT_i_10_dout,
        s_partial_distance_LUT_i_10_num_data_valid,
        s_partial_distance_LUT_i_10_fifo_cap,
        s_partial_distance_LUT_i_10_empty_n,
        s_partial_distance_LUT_i_10_read,
        s_partial_distance_LUT_i_11_dout,
        s_partial_distance_LUT_i_11_num_data_valid,
        s_partial_distance_LUT_i_11_fifo_cap,
        s_partial_distance_LUT_i_11_empty_n,
        s_partial_distance_LUT_i_11_read,
        s_partial_distance_LUT_i_12_dout,
        s_partial_distance_LUT_i_12_num_data_valid,
        s_partial_distance_LUT_i_12_fifo_cap,
        s_partial_distance_LUT_i_12_empty_n,
        s_partial_distance_LUT_i_12_read,
        s_partial_distance_LUT_i_13_dout,
        s_partial_distance_LUT_i_13_num_data_valid,
        s_partial_distance_LUT_i_13_fifo_cap,
        s_partial_distance_LUT_i_13_empty_n,
        s_partial_distance_LUT_i_13_read,
        s_partial_distance_LUT_i_14_dout,
        s_partial_distance_LUT_i_14_num_data_valid,
        s_partial_distance_LUT_i_14_fifo_cap,
        s_partial_distance_LUT_i_14_empty_n,
        s_partial_distance_LUT_i_14_read,
        s_partial_distance_LUT_i_15_dout,
        s_partial_distance_LUT_i_15_num_data_valid,
        s_partial_distance_LUT_i_15_fifo_cap,
        s_partial_distance_LUT_i_15_empty_n,
        s_partial_distance_LUT_i_15_read,
        s_distance_LUT_first_din,
        s_distance_LUT_first_num_data_valid,
        s_distance_LUT_first_fifo_cap,
        s_distance_LUT_first_full_n,
        s_distance_LUT_first_write,
        bound4,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] s_partial_distance_LUT_i_0_dout;
input  [1:0] s_partial_distance_LUT_i_0_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_0_fifo_cap;
input   s_partial_distance_LUT_i_0_empty_n;
output   s_partial_distance_LUT_i_0_read;
input  [31:0] s_partial_distance_LUT_i_1_dout;
input  [1:0] s_partial_distance_LUT_i_1_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_1_fifo_cap;
input   s_partial_distance_LUT_i_1_empty_n;
output   s_partial_distance_LUT_i_1_read;
input  [31:0] s_partial_distance_LUT_i_2_dout;
input  [1:0] s_partial_distance_LUT_i_2_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_2_fifo_cap;
input   s_partial_distance_LUT_i_2_empty_n;
output   s_partial_distance_LUT_i_2_read;
input  [31:0] s_partial_distance_LUT_i_3_dout;
input  [1:0] s_partial_distance_LUT_i_3_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_3_fifo_cap;
input   s_partial_distance_LUT_i_3_empty_n;
output   s_partial_distance_LUT_i_3_read;
input  [31:0] s_partial_distance_LUT_i_4_dout;
input  [1:0] s_partial_distance_LUT_i_4_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_4_fifo_cap;
input   s_partial_distance_LUT_i_4_empty_n;
output   s_partial_distance_LUT_i_4_read;
input  [31:0] s_partial_distance_LUT_i_5_dout;
input  [1:0] s_partial_distance_LUT_i_5_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_5_fifo_cap;
input   s_partial_distance_LUT_i_5_empty_n;
output   s_partial_distance_LUT_i_5_read;
input  [31:0] s_partial_distance_LUT_i_6_dout;
input  [1:0] s_partial_distance_LUT_i_6_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_6_fifo_cap;
input   s_partial_distance_LUT_i_6_empty_n;
output   s_partial_distance_LUT_i_6_read;
input  [31:0] s_partial_distance_LUT_i_7_dout;
input  [1:0] s_partial_distance_LUT_i_7_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_7_fifo_cap;
input   s_partial_distance_LUT_i_7_empty_n;
output   s_partial_distance_LUT_i_7_read;
input  [31:0] s_partial_distance_LUT_i_8_dout;
input  [1:0] s_partial_distance_LUT_i_8_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_8_fifo_cap;
input   s_partial_distance_LUT_i_8_empty_n;
output   s_partial_distance_LUT_i_8_read;
input  [31:0] s_partial_distance_LUT_i_9_dout;
input  [1:0] s_partial_distance_LUT_i_9_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_9_fifo_cap;
input   s_partial_distance_LUT_i_9_empty_n;
output   s_partial_distance_LUT_i_9_read;
input  [31:0] s_partial_distance_LUT_i_10_dout;
input  [1:0] s_partial_distance_LUT_i_10_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_10_fifo_cap;
input   s_partial_distance_LUT_i_10_empty_n;
output   s_partial_distance_LUT_i_10_read;
input  [31:0] s_partial_distance_LUT_i_11_dout;
input  [1:0] s_partial_distance_LUT_i_11_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_11_fifo_cap;
input   s_partial_distance_LUT_i_11_empty_n;
output   s_partial_distance_LUT_i_11_read;
input  [31:0] s_partial_distance_LUT_i_12_dout;
input  [1:0] s_partial_distance_LUT_i_12_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_12_fifo_cap;
input   s_partial_distance_LUT_i_12_empty_n;
output   s_partial_distance_LUT_i_12_read;
input  [31:0] s_partial_distance_LUT_i_13_dout;
input  [1:0] s_partial_distance_LUT_i_13_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_13_fifo_cap;
input   s_partial_distance_LUT_i_13_empty_n;
output   s_partial_distance_LUT_i_13_read;
input  [31:0] s_partial_distance_LUT_i_14_dout;
input  [1:0] s_partial_distance_LUT_i_14_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_14_fifo_cap;
input   s_partial_distance_LUT_i_14_empty_n;
output   s_partial_distance_LUT_i_14_read;
input  [31:0] s_partial_distance_LUT_i_15_dout;
input  [1:0] s_partial_distance_LUT_i_15_num_data_valid;
input  [1:0] s_partial_distance_LUT_i_15_fifo_cap;
input   s_partial_distance_LUT_i_15_empty_n;
output   s_partial_distance_LUT_i_15_read;
output  [2047:0] s_distance_LUT_first_din;
input  [9:0] s_distance_LUT_first_num_data_valid;
input  [9:0] s_distance_LUT_first_fifo_cap;
input   s_distance_LUT_first_full_n;
output   s_distance_LUT_first_write;
input  [71:0] bound4;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg s_partial_distance_LUT_i_0_read;
reg s_partial_distance_LUT_i_1_read;
reg s_partial_distance_LUT_i_2_read;
reg s_partial_distance_LUT_i_3_read;
reg s_partial_distance_LUT_i_4_read;
reg s_partial_distance_LUT_i_5_read;
reg s_partial_distance_LUT_i_6_read;
reg s_partial_distance_LUT_i_7_read;
reg s_partial_distance_LUT_i_8_read;
reg s_partial_distance_LUT_i_9_read;
reg s_partial_distance_LUT_i_10_read;
reg s_partial_distance_LUT_i_11_read;
reg s_partial_distance_LUT_i_12_read;
reg s_partial_distance_LUT_i_13_read;
reg s_partial_distance_LUT_i_14_read;
reg s_partial_distance_LUT_i_15_read;
reg s_distance_LUT_first_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln247_fu_191_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] icmp_ln247_reg_304;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_subdone;
reg    s_partial_distance_LUT_i_0_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg    s_partial_distance_LUT_i_1_blk_n;
reg    s_partial_distance_LUT_i_2_blk_n;
reg    s_partial_distance_LUT_i_3_blk_n;
reg    s_partial_distance_LUT_i_4_blk_n;
reg    s_partial_distance_LUT_i_5_blk_n;
reg    s_partial_distance_LUT_i_6_blk_n;
reg    s_partial_distance_LUT_i_7_blk_n;
reg    s_partial_distance_LUT_i_8_blk_n;
reg    s_partial_distance_LUT_i_9_blk_n;
reg    s_partial_distance_LUT_i_10_blk_n;
reg    s_partial_distance_LUT_i_11_blk_n;
reg    s_partial_distance_LUT_i_12_blk_n;
reg    s_partial_distance_LUT_i_13_blk_n;
reg    s_partial_distance_LUT_i_14_blk_n;
reg    s_partial_distance_LUT_i_15_blk_n;
reg    s_distance_LUT_first_blk_n;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] tmp_73_reg_308;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] tmp_74_reg_313;
reg   [31:0] tmp_reg_318;
reg   [31:0] tmp_12_reg_323;
reg   [31:0] tmp_13_reg_328;
reg   [31:0] tmp_14_reg_333;
reg   [31:0] tmp_15_reg_338;
reg   [31:0] tmp_16_reg_343;
reg   [31:0] tmp_17_reg_348;
reg   [31:0] tmp_18_reg_353;
reg   [31:0] tmp_19_reg_358;
reg   [31:0] tmp_20_reg_363;
reg   [31:0] tmp_21_reg_368;
reg   [31:0] tmp_22_reg_373;
reg   [31:0] tmp_23_reg_378;
reg   [31:0] tmp_24_reg_383;
reg   [31:0] tmp_25_reg_388;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] tmp_26_reg_393;
reg   [31:0] tmp_27_reg_398;
reg   [31:0] tmp_28_reg_403;
reg   [31:0] tmp_29_reg_408;
reg   [31:0] tmp_30_reg_413;
reg   [31:0] tmp_31_reg_418;
reg   [31:0] tmp_32_reg_423;
reg   [31:0] tmp_33_reg_428;
reg   [31:0] tmp_34_reg_433;
reg   [31:0] tmp_35_reg_438;
reg   [31:0] tmp_36_reg_443;
reg   [31:0] tmp_37_reg_448;
reg   [31:0] tmp_38_reg_453;
reg   [31:0] tmp_39_reg_458;
reg   [31:0] tmp_40_reg_463;
reg   [31:0] tmp_41_reg_468;
reg   [31:0] tmp_42_reg_473;
reg   [31:0] tmp_43_reg_478;
reg   [31:0] tmp_44_reg_483;
reg   [31:0] tmp_45_reg_488;
reg   [31:0] tmp_46_reg_493;
reg   [31:0] tmp_47_reg_498;
reg   [31:0] tmp_48_reg_503;
reg   [31:0] tmp_49_reg_508;
reg   [31:0] tmp_50_reg_513;
reg   [31:0] tmp_51_reg_518;
reg   [31:0] tmp_52_reg_523;
reg   [31:0] tmp_53_reg_528;
reg   [31:0] tmp_54_reg_533;
reg   [31:0] tmp_55_reg_538;
reg   [31:0] tmp_56_reg_543;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [71:0] indvar_flatten11_fu_70;
wire   [71:0] add_ln247_fu_196_p2;
wire    ap_loop_init;
reg    ap_block_pp0_stage1_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten11_fu_70 <= 72'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln247_fu_191_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten11_fu_70 <= add_ln247_fu_196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln247_reg_304 <= icmp_ln247_fu_191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_12_reg_323 <= s_partial_distance_LUT_i_3_dout;
        tmp_13_reg_328 <= s_partial_distance_LUT_i_4_dout;
        tmp_14_reg_333 <= s_partial_distance_LUT_i_5_dout;
        tmp_15_reg_338 <= s_partial_distance_LUT_i_6_dout;
        tmp_16_reg_343 <= s_partial_distance_LUT_i_7_dout;
        tmp_17_reg_348 <= s_partial_distance_LUT_i_8_dout;
        tmp_18_reg_353 <= s_partial_distance_LUT_i_9_dout;
        tmp_19_reg_358 <= s_partial_distance_LUT_i_10_dout;
        tmp_20_reg_363 <= s_partial_distance_LUT_i_11_dout;
        tmp_21_reg_368 <= s_partial_distance_LUT_i_12_dout;
        tmp_22_reg_373 <= s_partial_distance_LUT_i_13_dout;
        tmp_23_reg_378 <= s_partial_distance_LUT_i_14_dout;
        tmp_24_reg_383 <= s_partial_distance_LUT_i_15_dout;
        tmp_73_reg_308 <= s_partial_distance_LUT_i_0_dout;
        tmp_74_reg_313 <= s_partial_distance_LUT_i_1_dout;
        tmp_reg_318 <= s_partial_distance_LUT_i_2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_25_reg_388 <= s_partial_distance_LUT_i_0_dout;
        tmp_26_reg_393 <= s_partial_distance_LUT_i_1_dout;
        tmp_27_reg_398 <= s_partial_distance_LUT_i_2_dout;
        tmp_28_reg_403 <= s_partial_distance_LUT_i_3_dout;
        tmp_29_reg_408 <= s_partial_distance_LUT_i_4_dout;
        tmp_30_reg_413 <= s_partial_distance_LUT_i_5_dout;
        tmp_31_reg_418 <= s_partial_distance_LUT_i_6_dout;
        tmp_32_reg_423 <= s_partial_distance_LUT_i_7_dout;
        tmp_33_reg_428 <= s_partial_distance_LUT_i_8_dout;
        tmp_34_reg_433 <= s_partial_distance_LUT_i_9_dout;
        tmp_35_reg_438 <= s_partial_distance_LUT_i_10_dout;
        tmp_36_reg_443 <= s_partial_distance_LUT_i_11_dout;
        tmp_37_reg_448 <= s_partial_distance_LUT_i_12_dout;
        tmp_38_reg_453 <= s_partial_distance_LUT_i_13_dout;
        tmp_39_reg_458 <= s_partial_distance_LUT_i_14_dout;
        tmp_40_reg_463 <= s_partial_distance_LUT_i_15_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_41_reg_468 <= s_partial_distance_LUT_i_0_dout;
        tmp_42_reg_473 <= s_partial_distance_LUT_i_1_dout;
        tmp_43_reg_478 <= s_partial_distance_LUT_i_2_dout;
        tmp_44_reg_483 <= s_partial_distance_LUT_i_3_dout;
        tmp_45_reg_488 <= s_partial_distance_LUT_i_4_dout;
        tmp_46_reg_493 <= s_partial_distance_LUT_i_5_dout;
        tmp_47_reg_498 <= s_partial_distance_LUT_i_6_dout;
        tmp_48_reg_503 <= s_partial_distance_LUT_i_7_dout;
        tmp_49_reg_508 <= s_partial_distance_LUT_i_8_dout;
        tmp_50_reg_513 <= s_partial_distance_LUT_i_9_dout;
        tmp_51_reg_518 <= s_partial_distance_LUT_i_10_dout;
        tmp_52_reg_523 <= s_partial_distance_LUT_i_11_dout;
        tmp_53_reg_528 <= s_partial_distance_LUT_i_12_dout;
        tmp_54_reg_533 <= s_partial_distance_LUT_i_13_dout;
        tmp_55_reg_538 <= s_partial_distance_LUT_i_14_dout;
        tmp_56_reg_543 <= s_partial_distance_LUT_i_15_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln247_fu_191_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        s_distance_LUT_first_blk_n = s_distance_LUT_first_full_n;
    end else begin
        s_distance_LUT_first_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        s_distance_LUT_first_write = 1'b1;
    end else begin
        s_distance_LUT_first_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_0_blk_n = s_partial_distance_LUT_i_0_empty_n;
    end else begin
        s_partial_distance_LUT_i_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_0_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_10_blk_n = s_partial_distance_LUT_i_10_empty_n;
    end else begin
        s_partial_distance_LUT_i_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_10_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_10_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_11_blk_n = s_partial_distance_LUT_i_11_empty_n;
    end else begin
        s_partial_distance_LUT_i_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_11_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_11_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_12_blk_n = s_partial_distance_LUT_i_12_empty_n;
    end else begin
        s_partial_distance_LUT_i_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_12_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_12_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_13_blk_n = s_partial_distance_LUT_i_13_empty_n;
    end else begin
        s_partial_distance_LUT_i_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_13_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_13_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_14_blk_n = s_partial_distance_LUT_i_14_empty_n;
    end else begin
        s_partial_distance_LUT_i_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_14_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_14_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_15_blk_n = s_partial_distance_LUT_i_15_empty_n;
    end else begin
        s_partial_distance_LUT_i_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_15_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_15_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_1_blk_n = s_partial_distance_LUT_i_1_empty_n;
    end else begin
        s_partial_distance_LUT_i_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_1_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_2_blk_n = s_partial_distance_LUT_i_2_empty_n;
    end else begin
        s_partial_distance_LUT_i_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_2_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_3_blk_n = s_partial_distance_LUT_i_3_empty_n;
    end else begin
        s_partial_distance_LUT_i_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_3_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_4_blk_n = s_partial_distance_LUT_i_4_empty_n;
    end else begin
        s_partial_distance_LUT_i_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_4_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_5_blk_n = s_partial_distance_LUT_i_5_empty_n;
    end else begin
        s_partial_distance_LUT_i_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_5_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_5_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_6_blk_n = s_partial_distance_LUT_i_6_empty_n;
    end else begin
        s_partial_distance_LUT_i_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_6_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_6_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_7_blk_n = s_partial_distance_LUT_i_7_empty_n;
    end else begin
        s_partial_distance_LUT_i_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_7_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_7_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_8_blk_n = s_partial_distance_LUT_i_8_empty_n;
    end else begin
        s_partial_distance_LUT_i_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_8_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_8_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_partial_distance_LUT_i_9_blk_n = s_partial_distance_LUT_i_9_empty_n;
    end else begin
        s_partial_distance_LUT_i_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln247_reg_304 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_partial_distance_LUT_i_9_read = 1'b1;
    end else begin
        s_partial_distance_LUT_i_9_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln247_fu_196_p2 = (indvar_flatten11_fu_70 + 72'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((s_partial_distance_LUT_i_7_empty_n == 1'b0) | (s_partial_distance_LUT_i_6_empty_n == 1'b0) | (s_partial_distance_LUT_i_5_empty_n == 1'b0) | (s_partial_distance_LUT_i_4_empty_n == 1'b0) | (s_partial_distance_LUT_i_3_empty_n == 1'b0) | (s_partial_distance_LUT_i_2_empty_n == 1'b0) | (s_partial_distance_LUT_i_1_empty_n == 1'b0) | (s_partial_distance_LUT_i_0_empty_n == 1'b0) | (s_distance_LUT_first_full_n == 1'b0) | (s_partial_distance_LUT_i_15_empty_n == 1'b0) | (s_partial_distance_LUT_i_14_empty_n == 1'b0) | (s_partial_distance_LUT_i_13_empty_n == 1'b0) | (s_partial_distance_LUT_i_12_empty_n == 1'b0) | (s_partial_distance_LUT_i_11_empty_n == 1'b0) | (s_partial_distance_LUT_i_10_empty_n == 1'b0) | (s_partial_distance_LUT_i_9_empty_n == 1'b0) | (s_partial_distance_LUT_i_8_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((s_partial_distance_LUT_i_7_empty_n == 1'b0) | (s_partial_distance_LUT_i_6_empty_n == 1'b0) | (s_partial_distance_LUT_i_5_empty_n == 1'b0) | (s_partial_distance_LUT_i_4_empty_n == 1'b0) | (s_partial_distance_LUT_i_3_empty_n == 1'b0) | (s_partial_distance_LUT_i_2_empty_n == 1'b0) | (s_partial_distance_LUT_i_1_empty_n == 1'b0) | (s_partial_distance_LUT_i_0_empty_n == 1'b0) | (s_distance_LUT_first_full_n == 1'b0) | (s_partial_distance_LUT_i_15_empty_n == 1'b0) | (s_partial_distance_LUT_i_14_empty_n == 1'b0) | (s_partial_distance_LUT_i_13_empty_n == 1'b0) | (s_partial_distance_LUT_i_12_empty_n == 1'b0) | (s_partial_distance_LUT_i_11_empty_n == 1'b0) | (s_partial_distance_LUT_i_10_empty_n == 1'b0) | (s_partial_distance_LUT_i_9_empty_n == 1'b0) | (s_partial_distance_LUT_i_8_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((s_partial_distance_LUT_i_7_empty_n == 1'b0) | (s_partial_distance_LUT_i_6_empty_n == 1'b0) | (s_partial_distance_LUT_i_5_empty_n == 1'b0) | (s_partial_distance_LUT_i_4_empty_n == 1'b0) | (s_partial_distance_LUT_i_3_empty_n == 1'b0) | (s_partial_distance_LUT_i_2_empty_n == 1'b0) | (s_partial_distance_LUT_i_1_empty_n == 1'b0) | (s_partial_distance_LUT_i_0_empty_n == 1'b0) | (s_distance_LUT_first_full_n == 1'b0) | (s_partial_distance_LUT_i_15_empty_n == 1'b0) | (s_partial_distance_LUT_i_14_empty_n == 1'b0) | (s_partial_distance_LUT_i_13_empty_n == 1'b0) | (s_partial_distance_LUT_i_12_empty_n == 1'b0) | (s_partial_distance_LUT_i_11_empty_n == 1'b0) | (s_partial_distance_LUT_i_10_empty_n == 1'b0) | (s_partial_distance_LUT_i_9_empty_n == 1'b0) | (s_partial_distance_LUT_i_8_empty_n == 1'b0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (((s_partial_distance_LUT_i_7_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_6_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_5_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_4_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_3_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_2_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_1_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((s_partial_distance_LUT_i_0_empty_n == 1'b0) & (icmp_ln247_reg_304 == 1'd0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_15_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_14_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_13_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_12_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_11_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_10_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_9_empty_n == 1'b0)) | ((icmp_ln247_reg_304 == 1'd0) & (s_partial_distance_LUT_i_8_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage1_iter1 = ((s_partial_distance_LUT_i_7_empty_n == 1'b0) | (s_partial_distance_LUT_i_6_empty_n == 1'b0) | (s_partial_distance_LUT_i_5_empty_n == 1'b0) | (s_partial_distance_LUT_i_4_empty_n == 1'b0) | (s_partial_distance_LUT_i_3_empty_n == 1'b0) | (s_partial_distance_LUT_i_2_empty_n == 1'b0) | (s_partial_distance_LUT_i_1_empty_n == 1'b0) | (s_partial_distance_LUT_i_0_empty_n == 1'b0) | (s_distance_LUT_first_full_n == 1'b0) | (s_partial_distance_LUT_i_15_empty_n == 1'b0) | (s_partial_distance_LUT_i_14_empty_n == 1'b0) | (s_partial_distance_LUT_i_13_empty_n == 1'b0) | (s_partial_distance_LUT_i_12_empty_n == 1'b0) | (s_partial_distance_LUT_i_11_empty_n == 1'b0) | (s_partial_distance_LUT_i_10_empty_n == 1'b0) | (s_partial_distance_LUT_i_9_empty_n == 1'b0) | (s_partial_distance_LUT_i_8_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (s_partial_distance_LUT_i_9_blk_n & s_partial_distance_LUT_i_8_blk_n & s_partial_distance_LUT_i_7_blk_n & s_partial_distance_LUT_i_6_blk_n & s_partial_distance_LUT_i_5_blk_n & s_partial_distance_LUT_i_4_blk_n & s_partial_distance_LUT_i_3_blk_n & s_partial_distance_LUT_i_2_blk_n & s_partial_distance_LUT_i_1_blk_n & s_partial_distance_LUT_i_15_blk_n & s_partial_distance_LUT_i_14_blk_n & s_partial_distance_LUT_i_13_blk_n & s_partial_distance_LUT_i_12_blk_n & s_partial_distance_LUT_i_11_blk_n & s_partial_distance_LUT_i_10_blk_n & s_partial_distance_LUT_i_0_blk_n & s_distance_LUT_first_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign icmp_ln247_fu_191_p2 = ((indvar_flatten11_fu_70 == bound4) ? 1'b1 : 1'b0);

assign s_distance_LUT_first_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{s_partial_distance_LUT_i_15_dout}, {s_partial_distance_LUT_i_14_dout}}, {s_partial_distance_LUT_i_13_dout}}, {s_partial_distance_LUT_i_12_dout}}, {s_partial_distance_LUT_i_11_dout}}, {s_partial_distance_LUT_i_10_dout}}, {s_partial_distance_LUT_i_9_dout}}, {s_partial_distance_LUT_i_8_dout}}, {s_partial_distance_LUT_i_7_dout}}, {s_partial_distance_LUT_i_6_dout}}, {s_partial_distance_LUT_i_5_dout}}, {s_partial_distance_LUT_i_4_dout}}, {s_partial_distance_LUT_i_3_dout}}, {s_partial_distance_LUT_i_2_dout}}, {s_partial_distance_LUT_i_1_dout}}, {s_partial_distance_LUT_i_0_dout}}, {tmp_56_reg_543}}, {tmp_55_reg_538}}, {tmp_54_reg_533}}, {tmp_53_reg_528}}, {tmp_52_reg_523}}, {tmp_51_reg_518}}, {tmp_50_reg_513}}, {tmp_49_reg_508}}, {tmp_48_reg_503}}, {tmp_47_reg_498}}, {tmp_46_reg_493}}, {tmp_45_reg_488}}, {tmp_44_reg_483}}, {tmp_43_reg_478}}, {tmp_42_reg_473}}, {tmp_41_reg_468}}, {tmp_40_reg_463}}, {tmp_39_reg_458}}, {tmp_38_reg_453}}, {tmp_37_reg_448}}, {tmp_36_reg_443}}, {tmp_35_reg_438}}, {tmp_34_reg_433}}, {tmp_33_reg_428}}, {tmp_32_reg_423}}, {tmp_31_reg_418}}, {tmp_30_reg_413}}, {tmp_29_reg_408}}, {tmp_28_reg_403}}, {tmp_27_reg_398}}, {tmp_26_reg_393}}, {tmp_25_reg_388}}, {tmp_24_reg_383}}, {tmp_23_reg_378}}, {tmp_22_reg_373}}, {tmp_21_reg_368}}, {tmp_20_reg_363}}, {tmp_19_reg_358}}, {tmp_18_reg_353}}, {tmp_17_reg_348}}, {tmp_16_reg_343}}, {tmp_15_reg_338}}, {tmp_14_reg_333}}, {tmp_13_reg_328}}, {tmp_12_reg_323}}, {tmp_reg_318}}, {tmp_74_reg_313}}, {tmp_73_reg_308}};

endmodule //vadd_gather_LUT_results_Pipeline_VITIS_LOOP_247_1_VITIS_LOOP_249_2_VITIS_LOOP_251_3
