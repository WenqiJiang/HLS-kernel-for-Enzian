// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_product_quantizer_dispatcher (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_product_quantizer_init72_dout,
        s_product_quantizer_init72_num_data_valid,
        s_product_quantizer_init72_fifo_cap,
        s_product_quantizer_init72_empty_n,
        s_product_quantizer_init72_read,
        s_product_quantizer_init_sub_PE_i_14_din,
        s_product_quantizer_init_sub_PE_i_14_num_data_valid,
        s_product_quantizer_init_sub_PE_i_14_fifo_cap,
        s_product_quantizer_init_sub_PE_i_14_full_n,
        s_product_quantizer_init_sub_PE_i_14_write,
        s_product_quantizer_init_sub_PE_i_13_din,
        s_product_quantizer_init_sub_PE_i_13_num_data_valid,
        s_product_quantizer_init_sub_PE_i_13_fifo_cap,
        s_product_quantizer_init_sub_PE_i_13_full_n,
        s_product_quantizer_init_sub_PE_i_13_write,
        s_product_quantizer_init_sub_PE_i_12_din,
        s_product_quantizer_init_sub_PE_i_12_num_data_valid,
        s_product_quantizer_init_sub_PE_i_12_fifo_cap,
        s_product_quantizer_init_sub_PE_i_12_full_n,
        s_product_quantizer_init_sub_PE_i_12_write,
        s_product_quantizer_init_sub_PE_i_11_din,
        s_product_quantizer_init_sub_PE_i_11_num_data_valid,
        s_product_quantizer_init_sub_PE_i_11_fifo_cap,
        s_product_quantizer_init_sub_PE_i_11_full_n,
        s_product_quantizer_init_sub_PE_i_11_write,
        s_product_quantizer_init_sub_PE_i_10_din,
        s_product_quantizer_init_sub_PE_i_10_num_data_valid,
        s_product_quantizer_init_sub_PE_i_10_fifo_cap,
        s_product_quantizer_init_sub_PE_i_10_full_n,
        s_product_quantizer_init_sub_PE_i_10_write,
        s_product_quantizer_init_sub_PE_i_9_din,
        s_product_quantizer_init_sub_PE_i_9_num_data_valid,
        s_product_quantizer_init_sub_PE_i_9_fifo_cap,
        s_product_quantizer_init_sub_PE_i_9_full_n,
        s_product_quantizer_init_sub_PE_i_9_write,
        s_product_quantizer_init_sub_PE_i_8_din,
        s_product_quantizer_init_sub_PE_i_8_num_data_valid,
        s_product_quantizer_init_sub_PE_i_8_fifo_cap,
        s_product_quantizer_init_sub_PE_i_8_full_n,
        s_product_quantizer_init_sub_PE_i_8_write,
        s_product_quantizer_init_sub_PE_i_7_din,
        s_product_quantizer_init_sub_PE_i_7_num_data_valid,
        s_product_quantizer_init_sub_PE_i_7_fifo_cap,
        s_product_quantizer_init_sub_PE_i_7_full_n,
        s_product_quantizer_init_sub_PE_i_7_write,
        s_product_quantizer_init_sub_PE_i_6_din,
        s_product_quantizer_init_sub_PE_i_6_num_data_valid,
        s_product_quantizer_init_sub_PE_i_6_fifo_cap,
        s_product_quantizer_init_sub_PE_i_6_full_n,
        s_product_quantizer_init_sub_PE_i_6_write,
        s_product_quantizer_init_sub_PE_i_5_din,
        s_product_quantizer_init_sub_PE_i_5_num_data_valid,
        s_product_quantizer_init_sub_PE_i_5_fifo_cap,
        s_product_quantizer_init_sub_PE_i_5_full_n,
        s_product_quantizer_init_sub_PE_i_5_write,
        s_product_quantizer_init_sub_PE_i_4_din,
        s_product_quantizer_init_sub_PE_i_4_num_data_valid,
        s_product_quantizer_init_sub_PE_i_4_fifo_cap,
        s_product_quantizer_init_sub_PE_i_4_full_n,
        s_product_quantizer_init_sub_PE_i_4_write,
        s_product_quantizer_init_sub_PE_i_3_din,
        s_product_quantizer_init_sub_PE_i_3_num_data_valid,
        s_product_quantizer_init_sub_PE_i_3_fifo_cap,
        s_product_quantizer_init_sub_PE_i_3_full_n,
        s_product_quantizer_init_sub_PE_i_3_write,
        s_product_quantizer_init_sub_PE_i_2_din,
        s_product_quantizer_init_sub_PE_i_2_num_data_valid,
        s_product_quantizer_init_sub_PE_i_2_fifo_cap,
        s_product_quantizer_init_sub_PE_i_2_full_n,
        s_product_quantizer_init_sub_PE_i_2_write,
        s_product_quantizer_init_sub_PE_i_1_din,
        s_product_quantizer_init_sub_PE_i_1_num_data_valid,
        s_product_quantizer_init_sub_PE_i_1_fifo_cap,
        s_product_quantizer_init_sub_PE_i_1_full_n,
        s_product_quantizer_init_sub_PE_i_1_write,
        s_product_quantizer_init_sub_PE_i_0_din,
        s_product_quantizer_init_sub_PE_i_0_num_data_valid,
        s_product_quantizer_init_sub_PE_i_0_fifo_cap,
        s_product_quantizer_init_sub_PE_i_0_full_n,
        s_product_quantizer_init_sub_PE_i_0_write,
        s_product_quantizer_init_sub_PE_i_15_din,
        s_product_quantizer_init_sub_PE_i_15_num_data_valid,
        s_product_quantizer_init_sub_PE_i_15_fifo_cap,
        s_product_quantizer_init_sub_PE_i_15_full_n,
        s_product_quantizer_init_sub_PE_i_15_write,
        start_out,
        start_write,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] s_product_quantizer_init72_dout;
input  [8:0] s_product_quantizer_init72_num_data_valid;
input  [8:0] s_product_quantizer_init72_fifo_cap;
input   s_product_quantizer_init72_empty_n;
output   s_product_quantizer_init72_read;
output  [31:0] s_product_quantizer_init_sub_PE_i_14_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_14_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_14_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_14_full_n;
output   s_product_quantizer_init_sub_PE_i_14_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_13_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_13_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_13_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_13_full_n;
output   s_product_quantizer_init_sub_PE_i_13_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_12_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_12_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_12_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_12_full_n;
output   s_product_quantizer_init_sub_PE_i_12_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_11_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_11_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_11_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_11_full_n;
output   s_product_quantizer_init_sub_PE_i_11_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_10_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_10_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_10_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_10_full_n;
output   s_product_quantizer_init_sub_PE_i_10_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_9_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_9_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_9_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_9_full_n;
output   s_product_quantizer_init_sub_PE_i_9_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_8_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_8_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_8_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_8_full_n;
output   s_product_quantizer_init_sub_PE_i_8_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_7_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_7_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_7_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_7_full_n;
output   s_product_quantizer_init_sub_PE_i_7_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_6_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_6_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_6_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_6_full_n;
output   s_product_quantizer_init_sub_PE_i_6_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_5_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_5_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_5_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_5_full_n;
output   s_product_quantizer_init_sub_PE_i_5_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_4_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_4_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_4_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_4_full_n;
output   s_product_quantizer_init_sub_PE_i_4_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_3_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_3_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_3_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_3_full_n;
output   s_product_quantizer_init_sub_PE_i_3_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_2_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_2_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_2_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_2_full_n;
output   s_product_quantizer_init_sub_PE_i_2_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_1_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_1_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_1_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_1_full_n;
output   s_product_quantizer_init_sub_PE_i_1_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_0_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_0_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_0_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_0_full_n;
output   s_product_quantizer_init_sub_PE_i_0_write;
output  [31:0] s_product_quantizer_init_sub_PE_i_15_din;
input  [1:0] s_product_quantizer_init_sub_PE_i_15_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_15_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_15_full_n;
output   s_product_quantizer_init_sub_PE_i_15_write;
output   start_out;
output   start_write;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg s_product_quantizer_init72_read;
reg s_product_quantizer_init_sub_PE_i_14_write;
reg s_product_quantizer_init_sub_PE_i_13_write;
reg s_product_quantizer_init_sub_PE_i_12_write;
reg s_product_quantizer_init_sub_PE_i_11_write;
reg s_product_quantizer_init_sub_PE_i_10_write;
reg s_product_quantizer_init_sub_PE_i_9_write;
reg s_product_quantizer_init_sub_PE_i_8_write;
reg s_product_quantizer_init_sub_PE_i_7_write;
reg s_product_quantizer_init_sub_PE_i_6_write;
reg s_product_quantizer_init_sub_PE_i_5_write;
reg s_product_quantizer_init_sub_PE_i_4_write;
reg s_product_quantizer_init_sub_PE_i_3_write;
reg s_product_quantizer_init_sub_PE_i_2_write;
reg s_product_quantizer_init_sub_PE_i_1_write;
reg s_product_quantizer_init_sub_PE_i_0_write;
reg s_product_quantizer_init_sub_PE_i_15_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [3:0] trunc_ln47_reg_373;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln47_fu_274_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    s_product_quantizer_init72_blk_n;
wire    ap_block_pp0_stage0;
reg    s_product_quantizer_init_sub_PE_i_0_blk_n;
reg    s_product_quantizer_init_sub_PE_i_1_blk_n;
reg    s_product_quantizer_init_sub_PE_i_2_blk_n;
reg    s_product_quantizer_init_sub_PE_i_3_blk_n;
reg    s_product_quantizer_init_sub_PE_i_4_blk_n;
reg    s_product_quantizer_init_sub_PE_i_5_blk_n;
reg    s_product_quantizer_init_sub_PE_i_6_blk_n;
reg    s_product_quantizer_init_sub_PE_i_7_blk_n;
reg    s_product_quantizer_init_sub_PE_i_8_blk_n;
reg    s_product_quantizer_init_sub_PE_i_9_blk_n;
reg    s_product_quantizer_init_sub_PE_i_10_blk_n;
reg    s_product_quantizer_init_sub_PE_i_11_blk_n;
reg    s_product_quantizer_init_sub_PE_i_12_blk_n;
reg    s_product_quantizer_init_sub_PE_i_13_blk_n;
reg    s_product_quantizer_init_sub_PE_i_14_blk_n;
reg    s_product_quantizer_init_sub_PE_i_15_blk_n;
wire   [3:0] trunc_ln47_fu_312_p1;
reg    ap_block_pp0_stage0_11001;
reg   [11:0] indvar_flatten_fu_110;
wire   [11:0] select_ln48_fu_325_p3;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load_1;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [6:0] m_fu_114;
wire   [6:0] select_ln47_fu_304_p3;
reg   [6:0] ap_sig_allocacmp_m_load;
reg   [16:0] indvar_flatten11_fu_118;
wire   [16:0] add_ln47_fu_280_p2;
reg   [16:0] ap_sig_allocacmp_indvar_flatten11_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln48_fu_298_p2;
wire   [6:0] add_ln47_1_fu_292_p2;
wire   [11:0] add_ln48_fu_319_p2;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_306;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_306)) begin
        if ((icmp_ln47_fu_274_p2 == 1'd0)) begin
            indvar_flatten11_fu_118 <= add_ln47_fu_280_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten11_fu_118 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_306)) begin
        if ((icmp_ln47_fu_274_p2 == 1'd0)) begin
            indvar_flatten_fu_110 <= select_ln48_fu_325_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_110 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_306)) begin
        if ((icmp_ln47_fu_274_p2 == 1'd0)) begin
            m_fu_114 <= select_ln47_fu_304_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            m_fu_114 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_274_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln47_reg_373 <= trunc_ln47_fu_312_p1;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln47_fu_274_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten11_load = 17'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten11_load = indvar_flatten11_fu_118;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_110;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load_1 = indvar_flatten_fu_110;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m_load = 7'd0;
    end else begin
        ap_sig_allocacmp_m_load = m_fu_114;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init72_blk_n = s_product_quantizer_init72_empty_n;
    end else begin
        s_product_quantizer_init72_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init72_read = 1'b1;
    end else begin
        s_product_quantizer_init72_read = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_0_blk_n = s_product_quantizer_init_sub_PE_i_0_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_0_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_10_blk_n = s_product_quantizer_init_sub_PE_i_10_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_10_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_10_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_11_blk_n = s_product_quantizer_init_sub_PE_i_11_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_11_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_11_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_12_blk_n = s_product_quantizer_init_sub_PE_i_12_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_12_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_12_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_13_blk_n = s_product_quantizer_init_sub_PE_i_13_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_13_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_13_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_14_blk_n = s_product_quantizer_init_sub_PE_i_14_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_14_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_14_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_15_blk_n = s_product_quantizer_init_sub_PE_i_15_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_15_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_15_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_1_blk_n = s_product_quantizer_init_sub_PE_i_1_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_1_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_2_blk_n = s_product_quantizer_init_sub_PE_i_2_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_2_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_3_blk_n = s_product_quantizer_init_sub_PE_i_3_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_3_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_4_blk_n = s_product_quantizer_init_sub_PE_i_4_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_4_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_5_blk_n = s_product_quantizer_init_sub_PE_i_5_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_5_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_6_blk_n = s_product_quantizer_init_sub_PE_i_6_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_6_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_7_blk_n = s_product_quantizer_init_sub_PE_i_7_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_7_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_8_blk_n = s_product_quantizer_init_sub_PE_i_8_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_8_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_9_blk_n = s_product_quantizer_init_sub_PE_i_9_full_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((trunc_ln47_reg_373 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_9_write = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_9_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln47_1_fu_292_p2 = (ap_sig_allocacmp_m_load + 7'd1);

assign add_ln47_fu_280_p2 = (ap_sig_allocacmp_indvar_flatten11_load + 17'd1);

assign add_ln48_fu_319_p2 = (ap_sig_allocacmp_indvar_flatten_load + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((s_product_quantizer_init72_empty_n == 1'b0) | ((s_product_quantizer_init_sub_PE_i_11_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd11)) | ((s_product_quantizer_init_sub_PE_i_12_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd12)) | ((s_product_quantizer_init_sub_PE_i_13_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd13)) | ((trunc_ln47_reg_373 == 4'd14) & (s_product_quantizer_init_sub_PE_i_14_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd15) & (s_product_quantizer_init_sub_PE_i_15_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd0) & (s_product_quantizer_init_sub_PE_i_0_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd1) & (s_product_quantizer_init_sub_PE_i_1_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd2) & (s_product_quantizer_init_sub_PE_i_2_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd3) & (s_product_quantizer_init_sub_PE_i_3_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd4) & (s_product_quantizer_init_sub_PE_i_4_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd5) & (s_product_quantizer_init_sub_PE_i_5_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd6) & (s_product_quantizer_init_sub_PE_i_6_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd7) & (s_product_quantizer_init_sub_PE_i_7_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd8) & (s_product_quantizer_init_sub_PE_i_8_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd9) & (s_product_quantizer_init_sub_PE_i_9_full_n == 1'b0)) | ((s_product_quantizer_init_sub_PE_i_10_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd10)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((s_product_quantizer_init72_empty_n == 1'b0) | ((s_product_quantizer_init_sub_PE_i_11_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd11)) | ((s_product_quantizer_init_sub_PE_i_12_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd12)) | ((s_product_quantizer_init_sub_PE_i_13_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd13)) | ((trunc_ln47_reg_373 == 4'd14) & (s_product_quantizer_init_sub_PE_i_14_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd15) & (s_product_quantizer_init_sub_PE_i_15_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd0) & (s_product_quantizer_init_sub_PE_i_0_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd1) & (s_product_quantizer_init_sub_PE_i_1_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd2) & (s_product_quantizer_init_sub_PE_i_2_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd3) & (s_product_quantizer_init_sub_PE_i_3_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd4) & (s_product_quantizer_init_sub_PE_i_4_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd5) & (s_product_quantizer_init_sub_PE_i_5_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd6) & (s_product_quantizer_init_sub_PE_i_6_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd7) & (s_product_quantizer_init_sub_PE_i_7_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd8) & (s_product_quantizer_init_sub_PE_i_8_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd9) & (s_product_quantizer_init_sub_PE_i_9_full_n == 1'b0)) | ((s_product_quantizer_init_sub_PE_i_10_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd10)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((s_product_quantizer_init72_empty_n == 1'b0) | ((s_product_quantizer_init_sub_PE_i_11_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd11)) | ((s_product_quantizer_init_sub_PE_i_12_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd12)) | ((s_product_quantizer_init_sub_PE_i_13_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd13)) | ((trunc_ln47_reg_373 == 4'd14) & (s_product_quantizer_init_sub_PE_i_14_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd15) & (s_product_quantizer_init_sub_PE_i_15_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd0) & (s_product_quantizer_init_sub_PE_i_0_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd1) & (s_product_quantizer_init_sub_PE_i_1_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd2) & (s_product_quantizer_init_sub_PE_i_2_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd3) & (s_product_quantizer_init_sub_PE_i_3_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd4) & (s_product_quantizer_init_sub_PE_i_4_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd5) & (s_product_quantizer_init_sub_PE_i_5_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd6) & (s_product_quantizer_init_sub_PE_i_6_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd7) & (s_product_quantizer_init_sub_PE_i_7_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd8) & (s_product_quantizer_init_sub_PE_i_8_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd9) & (s_product_quantizer_init_sub_PE_i_9_full_n == 1'b0)) | ((s_product_quantizer_init_sub_PE_i_10_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd10)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((s_product_quantizer_init72_empty_n == 1'b0) | ((s_product_quantizer_init_sub_PE_i_11_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd11)) | ((s_product_quantizer_init_sub_PE_i_12_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd12)) | ((s_product_quantizer_init_sub_PE_i_13_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd13)) | ((trunc_ln47_reg_373 == 4'd14) & (s_product_quantizer_init_sub_PE_i_14_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd15) & (s_product_quantizer_init_sub_PE_i_15_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd0) & (s_product_quantizer_init_sub_PE_i_0_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd1) & (s_product_quantizer_init_sub_PE_i_1_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd2) & (s_product_quantizer_init_sub_PE_i_2_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd3) & (s_product_quantizer_init_sub_PE_i_3_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd4) & (s_product_quantizer_init_sub_PE_i_4_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd5) & (s_product_quantizer_init_sub_PE_i_5_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd6) & (s_product_quantizer_init_sub_PE_i_6_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd7) & (s_product_quantizer_init_sub_PE_i_7_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd8) & (s_product_quantizer_init_sub_PE_i_8_full_n == 1'b0)) | ((trunc_ln47_reg_373 == 4'd9) & (s_product_quantizer_init_sub_PE_i_9_full_n == 1'b0)) | ((s_product_quantizer_init_sub_PE_i_10_full_n == 1'b0) & (trunc_ln47_reg_373 == 4'd10)));
end

always @ (*) begin
    ap_condition_306 = ((ap_start_int == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (s_product_quantizer_init_sub_PE_i_9_blk_n & s_product_quantizer_init_sub_PE_i_8_blk_n & s_product_quantizer_init_sub_PE_i_7_blk_n & s_product_quantizer_init_sub_PE_i_6_blk_n & s_product_quantizer_init_sub_PE_i_5_blk_n & s_product_quantizer_init_sub_PE_i_4_blk_n & s_product_quantizer_init_sub_PE_i_3_blk_n & s_product_quantizer_init_sub_PE_i_2_blk_n & s_product_quantizer_init_sub_PE_i_1_blk_n & s_product_quantizer_init_sub_PE_i_15_blk_n & s_product_quantizer_init_sub_PE_i_14_blk_n & s_product_quantizer_init_sub_PE_i_13_blk_n & s_product_quantizer_init_sub_PE_i_12_blk_n & s_product_quantizer_init_sub_PE_i_11_blk_n & s_product_quantizer_init_sub_PE_i_10_blk_n & s_product_quantizer_init_sub_PE_i_0_blk_n & s_product_quantizer_init72_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign icmp_ln47_fu_274_p2 = ((ap_sig_allocacmp_indvar_flatten11_load == 17'd98304) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_298_p2 = ((ap_sig_allocacmp_indvar_flatten_load_1 == 12'd1536) ? 1'b1 : 1'b0);

assign s_product_quantizer_init_sub_PE_i_0_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_10_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_11_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_12_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_13_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_14_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_15_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_1_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_2_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_3_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_4_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_5_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_6_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_7_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_8_din = s_product_quantizer_init72_dout;

assign s_product_quantizer_init_sub_PE_i_9_din = s_product_quantizer_init72_dout;

assign select_ln47_fu_304_p3 = ((icmp_ln48_fu_298_p2[0:0] == 1'b1) ? add_ln47_1_fu_292_p2 : ap_sig_allocacmp_m_load);

assign select_ln48_fu_325_p3 = ((icmp_ln48_fu_298_p2[0:0] == 1'b1) ? 12'd1 : add_ln48_fu_319_p2);

assign start_out = real_start;

assign trunc_ln47_fu_312_p1 = select_ln47_fu_304_p3[3:0];

endmodule //vadd_product_quantizer_dispatcher
