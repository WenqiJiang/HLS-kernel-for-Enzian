// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_LUT_construction_sub_PE_13_Pipeline_VITIS_LOOP_174_1_VITIS_LOOP_175_2_VITIS_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_product_quantizer_init_sub_PE_i_13_dout,
        s_product_quantizer_init_sub_PE_i_13_num_data_valid,
        s_product_quantizer_init_sub_PE_i_13_fifo_cap,
        s_product_quantizer_init_sub_PE_i_13_empty_n,
        s_product_quantizer_init_sub_PE_i_13_read,
        sub_product_quantizer_address1,
        sub_product_quantizer_ce1,
        sub_product_quantizer_we1,
        sub_product_quantizer_d1,
        sub_product_quantizer_1_address1,
        sub_product_quantizer_1_ce1,
        sub_product_quantizer_1_we1,
        sub_product_quantizer_1_d1,
        sub_product_quantizer_2_address1,
        sub_product_quantizer_2_ce1,
        sub_product_quantizer_2_we1,
        sub_product_quantizer_2_d1,
        sub_product_quantizer_3_address1,
        sub_product_quantizer_3_ce1,
        sub_product_quantizer_3_we1,
        sub_product_quantizer_3_d1,
        sub_product_quantizer_4_address1,
        sub_product_quantizer_4_ce1,
        sub_product_quantizer_4_we1,
        sub_product_quantizer_4_d1,
        sub_product_quantizer_5_address1,
        sub_product_quantizer_5_ce1,
        sub_product_quantizer_5_we1,
        sub_product_quantizer_5_d1,
        sub_product_quantizer_6_address1,
        sub_product_quantizer_6_ce1,
        sub_product_quantizer_6_we1,
        sub_product_quantizer_6_d1,
        sub_product_quantizer_7_address1,
        sub_product_quantizer_7_ce1,
        sub_product_quantizer_7_we1,
        sub_product_quantizer_7_d1,
        sub_product_quantizer_8_address1,
        sub_product_quantizer_8_ce1,
        sub_product_quantizer_8_we1,
        sub_product_quantizer_8_d1,
        sub_product_quantizer_9_address1,
        sub_product_quantizer_9_ce1,
        sub_product_quantizer_9_we1,
        sub_product_quantizer_9_d1,
        sub_product_quantizer_10_address1,
        sub_product_quantizer_10_ce1,
        sub_product_quantizer_10_we1,
        sub_product_quantizer_10_d1,
        sub_product_quantizer_11_address1,
        sub_product_quantizer_11_ce1,
        sub_product_quantizer_11_we1,
        sub_product_quantizer_11_d1,
        sub_product_quantizer_12_address1,
        sub_product_quantizer_12_ce1,
        sub_product_quantizer_12_we1,
        sub_product_quantizer_12_d1,
        sub_product_quantizer_13_address1,
        sub_product_quantizer_13_ce1,
        sub_product_quantizer_13_we1,
        sub_product_quantizer_13_d1,
        sub_product_quantizer_14_address1,
        sub_product_quantizer_14_ce1,
        sub_product_quantizer_14_we1,
        sub_product_quantizer_14_d1,
        sub_product_quantizer_15_address1,
        sub_product_quantizer_15_ce1,
        sub_product_quantizer_15_we1,
        sub_product_quantizer_15_d1,
        sub_product_quantizer_16_address1,
        sub_product_quantizer_16_ce1,
        sub_product_quantizer_16_we1,
        sub_product_quantizer_16_d1,
        sub_product_quantizer_17_address1,
        sub_product_quantizer_17_ce1,
        sub_product_quantizer_17_we1,
        sub_product_quantizer_17_d1,
        sub_product_quantizer_18_address1,
        sub_product_quantizer_18_ce1,
        sub_product_quantizer_18_we1,
        sub_product_quantizer_18_d1,
        sub_product_quantizer_19_address1,
        sub_product_quantizer_19_ce1,
        sub_product_quantizer_19_we1,
        sub_product_quantizer_19_d1,
        sub_product_quantizer_20_address1,
        sub_product_quantizer_20_ce1,
        sub_product_quantizer_20_we1,
        sub_product_quantizer_20_d1,
        sub_product_quantizer_21_address1,
        sub_product_quantizer_21_ce1,
        sub_product_quantizer_21_we1,
        sub_product_quantizer_21_d1,
        sub_product_quantizer_22_address1,
        sub_product_quantizer_22_ce1,
        sub_product_quantizer_22_we1,
        sub_product_quantizer_22_d1,
        sub_product_quantizer_23_address1,
        sub_product_quantizer_23_ce1,
        sub_product_quantizer_23_we1,
        sub_product_quantizer_23_d1,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] s_product_quantizer_init_sub_PE_i_13_dout;
input  [1:0] s_product_quantizer_init_sub_PE_i_13_num_data_valid;
input  [1:0] s_product_quantizer_init_sub_PE_i_13_fifo_cap;
input   s_product_quantizer_init_sub_PE_i_13_empty_n;
output   s_product_quantizer_init_sub_PE_i_13_read;
output  [7:0] sub_product_quantizer_address1;
output   sub_product_quantizer_ce1;
output   sub_product_quantizer_we1;
output  [31:0] sub_product_quantizer_d1;
output  [7:0] sub_product_quantizer_1_address1;
output   sub_product_quantizer_1_ce1;
output   sub_product_quantizer_1_we1;
output  [31:0] sub_product_quantizer_1_d1;
output  [7:0] sub_product_quantizer_2_address1;
output   sub_product_quantizer_2_ce1;
output   sub_product_quantizer_2_we1;
output  [31:0] sub_product_quantizer_2_d1;
output  [7:0] sub_product_quantizer_3_address1;
output   sub_product_quantizer_3_ce1;
output   sub_product_quantizer_3_we1;
output  [31:0] sub_product_quantizer_3_d1;
output  [7:0] sub_product_quantizer_4_address1;
output   sub_product_quantizer_4_ce1;
output   sub_product_quantizer_4_we1;
output  [31:0] sub_product_quantizer_4_d1;
output  [7:0] sub_product_quantizer_5_address1;
output   sub_product_quantizer_5_ce1;
output   sub_product_quantizer_5_we1;
output  [31:0] sub_product_quantizer_5_d1;
output  [7:0] sub_product_quantizer_6_address1;
output   sub_product_quantizer_6_ce1;
output   sub_product_quantizer_6_we1;
output  [31:0] sub_product_quantizer_6_d1;
output  [7:0] sub_product_quantizer_7_address1;
output   sub_product_quantizer_7_ce1;
output   sub_product_quantizer_7_we1;
output  [31:0] sub_product_quantizer_7_d1;
output  [7:0] sub_product_quantizer_8_address1;
output   sub_product_quantizer_8_ce1;
output   sub_product_quantizer_8_we1;
output  [31:0] sub_product_quantizer_8_d1;
output  [7:0] sub_product_quantizer_9_address1;
output   sub_product_quantizer_9_ce1;
output   sub_product_quantizer_9_we1;
output  [31:0] sub_product_quantizer_9_d1;
output  [7:0] sub_product_quantizer_10_address1;
output   sub_product_quantizer_10_ce1;
output   sub_product_quantizer_10_we1;
output  [31:0] sub_product_quantizer_10_d1;
output  [7:0] sub_product_quantizer_11_address1;
output   sub_product_quantizer_11_ce1;
output   sub_product_quantizer_11_we1;
output  [31:0] sub_product_quantizer_11_d1;
output  [7:0] sub_product_quantizer_12_address1;
output   sub_product_quantizer_12_ce1;
output   sub_product_quantizer_12_we1;
output  [31:0] sub_product_quantizer_12_d1;
output  [7:0] sub_product_quantizer_13_address1;
output   sub_product_quantizer_13_ce1;
output   sub_product_quantizer_13_we1;
output  [31:0] sub_product_quantizer_13_d1;
output  [7:0] sub_product_quantizer_14_address1;
output   sub_product_quantizer_14_ce1;
output   sub_product_quantizer_14_we1;
output  [31:0] sub_product_quantizer_14_d1;
output  [7:0] sub_product_quantizer_15_address1;
output   sub_product_quantizer_15_ce1;
output   sub_product_quantizer_15_we1;
output  [31:0] sub_product_quantizer_15_d1;
output  [7:0] sub_product_quantizer_16_address1;
output   sub_product_quantizer_16_ce1;
output   sub_product_quantizer_16_we1;
output  [31:0] sub_product_quantizer_16_d1;
output  [7:0] sub_product_quantizer_17_address1;
output   sub_product_quantizer_17_ce1;
output   sub_product_quantizer_17_we1;
output  [31:0] sub_product_quantizer_17_d1;
output  [7:0] sub_product_quantizer_18_address1;
output   sub_product_quantizer_18_ce1;
output   sub_product_quantizer_18_we1;
output  [31:0] sub_product_quantizer_18_d1;
output  [7:0] sub_product_quantizer_19_address1;
output   sub_product_quantizer_19_ce1;
output   sub_product_quantizer_19_we1;
output  [31:0] sub_product_quantizer_19_d1;
output  [7:0] sub_product_quantizer_20_address1;
output   sub_product_quantizer_20_ce1;
output   sub_product_quantizer_20_we1;
output  [31:0] sub_product_quantizer_20_d1;
output  [7:0] sub_product_quantizer_21_address1;
output   sub_product_quantizer_21_ce1;
output   sub_product_quantizer_21_we1;
output  [31:0] sub_product_quantizer_21_d1;
output  [7:0] sub_product_quantizer_22_address1;
output   sub_product_quantizer_22_ce1;
output   sub_product_quantizer_22_we1;
output  [31:0] sub_product_quantizer_22_d1;
output  [7:0] sub_product_quantizer_23_address1;
output   sub_product_quantizer_23_ce1;
output   sub_product_quantizer_23_we1;
output  [31:0] sub_product_quantizer_23_d1;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg s_product_quantizer_init_sub_PE_i_13_read;
reg sub_product_quantizer_ce1;
reg sub_product_quantizer_we1;
reg sub_product_quantizer_1_ce1;
reg sub_product_quantizer_1_we1;
reg sub_product_quantizer_2_ce1;
reg sub_product_quantizer_2_we1;
reg sub_product_quantizer_3_ce1;
reg sub_product_quantizer_3_we1;
reg sub_product_quantizer_4_ce1;
reg sub_product_quantizer_4_we1;
reg sub_product_quantizer_5_ce1;
reg sub_product_quantizer_5_we1;
reg sub_product_quantizer_6_ce1;
reg sub_product_quantizer_6_we1;
reg sub_product_quantizer_7_ce1;
reg sub_product_quantizer_7_we1;
reg sub_product_quantizer_8_ce1;
reg sub_product_quantizer_8_we1;
reg sub_product_quantizer_9_ce1;
reg sub_product_quantizer_9_we1;
reg sub_product_quantizer_10_ce1;
reg sub_product_quantizer_10_we1;
reg sub_product_quantizer_11_ce1;
reg sub_product_quantizer_11_we1;
reg sub_product_quantizer_12_ce1;
reg sub_product_quantizer_12_we1;
reg sub_product_quantizer_13_ce1;
reg sub_product_quantizer_13_we1;
reg sub_product_quantizer_14_ce1;
reg sub_product_quantizer_14_we1;
reg sub_product_quantizer_15_ce1;
reg sub_product_quantizer_15_we1;
reg sub_product_quantizer_16_ce1;
reg sub_product_quantizer_16_we1;
reg sub_product_quantizer_17_ce1;
reg sub_product_quantizer_17_we1;
reg sub_product_quantizer_18_ce1;
reg sub_product_quantizer_18_we1;
reg sub_product_quantizer_19_ce1;
reg sub_product_quantizer_19_we1;
reg sub_product_quantizer_20_ce1;
reg sub_product_quantizer_20_we1;
reg sub_product_quantizer_21_ce1;
reg sub_product_quantizer_21_we1;
reg sub_product_quantizer_22_ce1;
reg sub_product_quantizer_22_we1;
reg sub_product_quantizer_23_ce1;
reg sub_product_quantizer_23_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln174_fu_655_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    s_product_quantizer_init_sub_PE_i_13_blk_n;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln175_fu_673_p2;
reg   [0:0] icmp_ln175_reg_959;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] and_ln174_fu_733_p2;
reg   [0:0] and_ln174_reg_965;
wire   [4:0] add_ln178_fu_765_p2;
reg   [4:0] add_ln178_reg_971;
wire   [63:0] zext_ln175_fu_852_p1;
reg   [2:0] j_fu_162;
wire   [2:0] add_ln176_fu_774_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_j_load;
reg   [8:0] k_fu_166;
wire   [8:0] select_ln175_32_fu_880_p3;
reg   [11:0] indvar_flatten_fu_170;
wire   [11:0] select_ln175_33_fu_786_p3;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load_17;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [2:0] i_fu_174;
wire   [2:0] select_ln174_33_fu_739_p3;
reg   [2:0] ap_sig_allocacmp_i_30;
reg   [12:0] indvar_flatten37_fu_178;
wire   [12:0] add_ln174_fu_661_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten37_load;
wire   [31:0] tmp_fu_887_p1;
wire   [1:0] empty_fu_627_p1;
wire   [2:0] empty_937_fu_639_p2;
wire   [4:0] p_shl_fu_631_p3;
wire   [4:0] p_shl169_cast_fu_645_p1;
wire   [2:0] add_ln174_13_fu_679_p2;
wire   [1:0] empty_939_fu_685_p1;
wire   [2:0] empty_940_fu_697_p2;
wire   [4:0] p_shl_mid1_fu_689_p3;
wire   [4:0] p_shl169_cast_mid1_fu_703_p1;
wire   [4:0] sub_ln178_11_fu_707_p2;
wire   [4:0] sub_ln178_fu_649_p2;
wire   [0:0] icmp_ln176_fu_727_p2;
wire   [0:0] xor_ln174_fu_721_p2;
wire   [0:0] or_ln175_fu_747_p2;
wire   [2:0] select_ln175_fu_753_p3;
wire   [4:0] select_ln174_31_fu_713_p3;
wire   [4:0] zext_ln178_fu_761_p1;
wire   [11:0] add_ln175_11_fu_780_p2;
wire   [7:0] trunc_ln174_fu_824_p1;
wire   [8:0] select_ln174_fu_817_p3;
wire   [8:0] add_ln175_fu_835_p2;
wire   [7:0] trunc_ln175_fu_841_p1;
wire   [7:0] select_ln174_32_fu_828_p3;
wire   [7:0] select_ln175_31_fu_845_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln174_fu_655_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_174 <= select_ln174_33_fu_739_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_174 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln174_fu_655_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten37_fu_178 <= add_ln174_fu_661_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten37_fu_178 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln174_fu_655_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_170 <= select_ln175_33_fu_786_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_170 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln174_fu_655_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_162 <= add_ln176_fu_774_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_162 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_166 <= 9'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            k_fu_166 <= select_ln175_32_fu_880_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln174_fu_655_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln178_reg_971 <= add_ln178_fu_765_p2;
        and_ln174_reg_965 <= and_ln174_fu_733_p2;
        icmp_ln175_reg_959 <= icmp_ln175_fu_673_p2;
    end
end

always @ (*) begin
    if (((icmp_ln174_fu_655_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_30 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_30 = i_fu_174;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten37_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten37_load = indvar_flatten37_fu_178;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load_17 = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load_17 = indvar_flatten_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 3'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_13_blk_n = s_product_quantizer_init_sub_PE_i_13_empty_n;
    end else begin
        s_product_quantizer_init_sub_PE_i_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_product_quantizer_init_sub_PE_i_13_read = 1'b1;
    end else begin
        s_product_quantizer_init_sub_PE_i_13_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_10_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd10 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_10_we1 = 1'b1;
    end else begin
        sub_product_quantizer_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_11_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd11 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_11_we1 = 1'b1;
    end else begin
        sub_product_quantizer_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_12_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd12 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_12_we1 = 1'b1;
    end else begin
        sub_product_quantizer_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_13_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd13 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_13_we1 = 1'b1;
    end else begin
        sub_product_quantizer_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_14_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd14 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_14_we1 = 1'b1;
    end else begin
        sub_product_quantizer_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_15_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd15 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_15_we1 = 1'b1;
    end else begin
        sub_product_quantizer_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_16_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd16 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_16_we1 = 1'b1;
    end else begin
        sub_product_quantizer_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_17_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd17 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_17_we1 = 1'b1;
    end else begin
        sub_product_quantizer_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_18_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd18 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_18_we1 = 1'b1;
    end else begin
        sub_product_quantizer_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_19_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd19 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_19_we1 = 1'b1;
    end else begin
        sub_product_quantizer_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_1_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd1 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_1_we1 = 1'b1;
    end else begin
        sub_product_quantizer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_20_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd20 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_20_we1 = 1'b1;
    end else begin
        sub_product_quantizer_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_21_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd21 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_21_we1 = 1'b1;
    end else begin
        sub_product_quantizer_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_22_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd22 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_22_we1 = 1'b1;
    end else begin
        sub_product_quantizer_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_23_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((5'd23 == add_ln178_reg_971) | ((5'd24 == add_ln178_reg_971) | ((5'd25 == add_ln178_reg_971) | ((5'd26 == add_ln178_reg_971) | ((5'd27 == add_ln178_reg_971) | ((5'd28 == add_ln178_reg_971) | ((5'd29 == add_ln178_reg_971) | ((5'd30 == add_ln178_reg_971) | (5'd31 == add_ln178_reg_971))))))))))) begin
        sub_product_quantizer_23_we1 = 1'b1;
    end else begin
        sub_product_quantizer_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_2_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd2 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_2_we1 = 1'b1;
    end else begin
        sub_product_quantizer_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_3_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd3 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_3_we1 = 1'b1;
    end else begin
        sub_product_quantizer_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_4_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd4 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_4_we1 = 1'b1;
    end else begin
        sub_product_quantizer_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_5_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd5 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_5_we1 = 1'b1;
    end else begin
        sub_product_quantizer_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_6_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd6 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_6_we1 = 1'b1;
    end else begin
        sub_product_quantizer_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_7_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd7 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_7_we1 = 1'b1;
    end else begin
        sub_product_quantizer_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_8_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd8 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_8_we1 = 1'b1;
    end else begin
        sub_product_quantizer_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_9_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd9 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_9_we1 = 1'b1;
    end else begin
        sub_product_quantizer_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_ce1 = 1'b1;
    end else begin
        sub_product_quantizer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (5'd0 == add_ln178_reg_971) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_product_quantizer_we1 = 1'b1;
    end else begin
        sub_product_quantizer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln174_13_fu_679_p2 = (ap_sig_allocacmp_i_30 + 3'd1);

assign add_ln174_fu_661_p2 = (ap_sig_allocacmp_indvar_flatten37_load + 13'd1);

assign add_ln175_11_fu_780_p2 = (ap_sig_allocacmp_indvar_flatten_load + 12'd1);

assign add_ln175_fu_835_p2 = (select_ln174_fu_817_p3 + 9'd1);

assign add_ln176_fu_774_p2 = (select_ln175_fu_753_p3 + 3'd1);

assign add_ln178_fu_765_p2 = (select_ln174_31_fu_713_p3 + zext_ln178_fu_761_p1);

assign and_ln174_fu_733_p2 = (xor_ln174_fu_721_p2 & icmp_ln176_fu_727_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((s_product_quantizer_init_sub_PE_i_13_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((s_product_quantizer_init_sub_PE_i_13_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (s_product_quantizer_init_sub_PE_i_13_empty_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = s_product_quantizer_init_sub_PE_i_13_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign empty_937_fu_639_p2 = ap_sig_allocacmp_i_30 << 3'd1;

assign empty_939_fu_685_p1 = add_ln174_13_fu_679_p2[1:0];

assign empty_940_fu_697_p2 = add_ln174_13_fu_679_p2 << 3'd1;

assign empty_fu_627_p1 = ap_sig_allocacmp_i_30[1:0];

assign icmp_ln174_fu_655_p2 = ((ap_sig_allocacmp_indvar_flatten37_load == 13'd6144) ? 1'b1 : 1'b0);

assign icmp_ln175_fu_673_p2 = ((ap_sig_allocacmp_indvar_flatten_load_17 == 12'd1536) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_727_p2 = ((ap_sig_allocacmp_j_load == 3'd6) ? 1'b1 : 1'b0);

assign or_ln175_fu_747_p2 = (icmp_ln175_fu_673_p2 | and_ln174_fu_733_p2);

assign p_shl169_cast_fu_645_p1 = empty_937_fu_639_p2;

assign p_shl169_cast_mid1_fu_703_p1 = empty_940_fu_697_p2;

assign p_shl_fu_631_p3 = {{empty_fu_627_p1}, {3'd0}};

assign p_shl_mid1_fu_689_p3 = {{empty_939_fu_685_p1}, {3'd0}};

assign select_ln174_31_fu_713_p3 = ((icmp_ln175_fu_673_p2[0:0] == 1'b1) ? sub_ln178_11_fu_707_p2 : sub_ln178_fu_649_p2);

assign select_ln174_32_fu_828_p3 = ((icmp_ln175_reg_959[0:0] == 1'b1) ? 8'd0 : trunc_ln174_fu_824_p1);

assign select_ln174_33_fu_739_p3 = ((icmp_ln175_fu_673_p2[0:0] == 1'b1) ? add_ln174_13_fu_679_p2 : ap_sig_allocacmp_i_30);

assign select_ln174_fu_817_p3 = ((icmp_ln175_reg_959[0:0] == 1'b1) ? 9'd0 : k_fu_166);

assign select_ln175_31_fu_845_p3 = ((and_ln174_reg_965[0:0] == 1'b1) ? trunc_ln175_fu_841_p1 : select_ln174_32_fu_828_p3);

assign select_ln175_32_fu_880_p3 = ((and_ln174_reg_965[0:0] == 1'b1) ? add_ln175_fu_835_p2 : select_ln174_fu_817_p3);

assign select_ln175_33_fu_786_p3 = ((icmp_ln175_fu_673_p2[0:0] == 1'b1) ? 12'd1 : add_ln175_11_fu_780_p2);

assign select_ln175_fu_753_p3 = ((or_ln175_fu_747_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_j_load);

assign sub_ln178_11_fu_707_p2 = (p_shl_mid1_fu_689_p3 - p_shl169_cast_mid1_fu_703_p1);

assign sub_ln178_fu_649_p2 = (p_shl_fu_631_p3 - p_shl169_cast_fu_645_p1);

assign sub_product_quantizer_10_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_10_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_11_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_11_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_12_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_12_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_13_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_13_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_14_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_14_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_15_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_15_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_16_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_16_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_17_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_17_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_18_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_18_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_19_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_19_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_1_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_1_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_20_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_20_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_21_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_21_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_22_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_22_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_23_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_23_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_2_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_2_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_3_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_3_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_4_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_4_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_5_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_5_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_6_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_6_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_7_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_7_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_8_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_8_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_9_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_9_d1 = tmp_fu_887_p1;

assign sub_product_quantizer_address1 = zext_ln175_fu_852_p1;

assign sub_product_quantizer_d1 = tmp_fu_887_p1;

assign tmp_fu_887_p1 = s_product_quantizer_init_sub_PE_i_13_dout;

assign trunc_ln174_fu_824_p1 = k_fu_166[7:0];

assign trunc_ln175_fu_841_p1 = add_ln175_fu_835_p2[7:0];

assign xor_ln174_fu_721_p2 = (icmp_ln175_fu_673_p2 ^ 1'd1);

assign zext_ln175_fu_852_p1 = select_ln175_31_fu_845_p3;

assign zext_ln178_fu_761_p1 = select_ln175_fu_753_p3;

endmodule //vadd_LUT_construction_sub_PE_13_Pipeline_VITIS_LOOP_174_1_VITIS_LOOP_175_2_VITIS_LOOP
