// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vadd_load_PQ_codes_Pipeline_VITIS_LOOP_131_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem5_AWVALID,
        m_axi_gmem5_AWREADY,
        m_axi_gmem5_AWADDR,
        m_axi_gmem5_AWID,
        m_axi_gmem5_AWLEN,
        m_axi_gmem5_AWSIZE,
        m_axi_gmem5_AWBURST,
        m_axi_gmem5_AWLOCK,
        m_axi_gmem5_AWCACHE,
        m_axi_gmem5_AWPROT,
        m_axi_gmem5_AWQOS,
        m_axi_gmem5_AWREGION,
        m_axi_gmem5_AWUSER,
        m_axi_gmem5_WVALID,
        m_axi_gmem5_WREADY,
        m_axi_gmem5_WDATA,
        m_axi_gmem5_WSTRB,
        m_axi_gmem5_WLAST,
        m_axi_gmem5_WID,
        m_axi_gmem5_WUSER,
        m_axi_gmem5_ARVALID,
        m_axi_gmem5_ARREADY,
        m_axi_gmem5_ARADDR,
        m_axi_gmem5_ARID,
        m_axi_gmem5_ARLEN,
        m_axi_gmem5_ARSIZE,
        m_axi_gmem5_ARBURST,
        m_axi_gmem5_ARLOCK,
        m_axi_gmem5_ARCACHE,
        m_axi_gmem5_ARPROT,
        m_axi_gmem5_ARQOS,
        m_axi_gmem5_ARREGION,
        m_axi_gmem5_ARUSER,
        m_axi_gmem5_RVALID,
        m_axi_gmem5_RREADY,
        m_axi_gmem5_RDATA,
        m_axi_gmem5_RLAST,
        m_axi_gmem5_RID,
        m_axi_gmem5_RFIFONUM,
        m_axi_gmem5_RUSER,
        m_axi_gmem5_RRESP,
        m_axi_gmem5_BVALID,
        m_axi_gmem5_BREADY,
        m_axi_gmem5_BRESP,
        m_axi_gmem5_BID,
        m_axi_gmem5_BUSER,
        m_axi_gmem6_AWVALID,
        m_axi_gmem6_AWREADY,
        m_axi_gmem6_AWADDR,
        m_axi_gmem6_AWID,
        m_axi_gmem6_AWLEN,
        m_axi_gmem6_AWSIZE,
        m_axi_gmem6_AWBURST,
        m_axi_gmem6_AWLOCK,
        m_axi_gmem6_AWCACHE,
        m_axi_gmem6_AWPROT,
        m_axi_gmem6_AWQOS,
        m_axi_gmem6_AWREGION,
        m_axi_gmem6_AWUSER,
        m_axi_gmem6_WVALID,
        m_axi_gmem6_WREADY,
        m_axi_gmem6_WDATA,
        m_axi_gmem6_WSTRB,
        m_axi_gmem6_WLAST,
        m_axi_gmem6_WID,
        m_axi_gmem6_WUSER,
        m_axi_gmem6_ARVALID,
        m_axi_gmem6_ARREADY,
        m_axi_gmem6_ARADDR,
        m_axi_gmem6_ARID,
        m_axi_gmem6_ARLEN,
        m_axi_gmem6_ARSIZE,
        m_axi_gmem6_ARBURST,
        m_axi_gmem6_ARLOCK,
        m_axi_gmem6_ARCACHE,
        m_axi_gmem6_ARPROT,
        m_axi_gmem6_ARQOS,
        m_axi_gmem6_ARREGION,
        m_axi_gmem6_ARUSER,
        m_axi_gmem6_RVALID,
        m_axi_gmem6_RREADY,
        m_axi_gmem6_RDATA,
        m_axi_gmem6_RLAST,
        m_axi_gmem6_RID,
        m_axi_gmem6_RFIFONUM,
        m_axi_gmem6_RUSER,
        m_axi_gmem6_RRESP,
        m_axi_gmem6_BVALID,
        m_axi_gmem6_BREADY,
        m_axi_gmem6_BRESP,
        m_axi_gmem6_BID,
        m_axi_gmem6_BUSER,
        m_axi_gmem7_AWVALID,
        m_axi_gmem7_AWREADY,
        m_axi_gmem7_AWADDR,
        m_axi_gmem7_AWID,
        m_axi_gmem7_AWLEN,
        m_axi_gmem7_AWSIZE,
        m_axi_gmem7_AWBURST,
        m_axi_gmem7_AWLOCK,
        m_axi_gmem7_AWCACHE,
        m_axi_gmem7_AWPROT,
        m_axi_gmem7_AWQOS,
        m_axi_gmem7_AWREGION,
        m_axi_gmem7_AWUSER,
        m_axi_gmem7_WVALID,
        m_axi_gmem7_WREADY,
        m_axi_gmem7_WDATA,
        m_axi_gmem7_WSTRB,
        m_axi_gmem7_WLAST,
        m_axi_gmem7_WID,
        m_axi_gmem7_WUSER,
        m_axi_gmem7_ARVALID,
        m_axi_gmem7_ARREADY,
        m_axi_gmem7_ARADDR,
        m_axi_gmem7_ARID,
        m_axi_gmem7_ARLEN,
        m_axi_gmem7_ARSIZE,
        m_axi_gmem7_ARBURST,
        m_axi_gmem7_ARLOCK,
        m_axi_gmem7_ARCACHE,
        m_axi_gmem7_ARPROT,
        m_axi_gmem7_ARQOS,
        m_axi_gmem7_ARREGION,
        m_axi_gmem7_ARUSER,
        m_axi_gmem7_RVALID,
        m_axi_gmem7_RREADY,
        m_axi_gmem7_RDATA,
        m_axi_gmem7_RLAST,
        m_axi_gmem7_RID,
        m_axi_gmem7_RFIFONUM,
        m_axi_gmem7_RUSER,
        m_axi_gmem7_RRESP,
        m_axi_gmem7_BVALID,
        m_axi_gmem7_BREADY,
        m_axi_gmem7_BRESP,
        m_axi_gmem7_BID,
        m_axi_gmem7_BUSER,
        m_axi_gmem8_AWVALID,
        m_axi_gmem8_AWREADY,
        m_axi_gmem8_AWADDR,
        m_axi_gmem8_AWID,
        m_axi_gmem8_AWLEN,
        m_axi_gmem8_AWSIZE,
        m_axi_gmem8_AWBURST,
        m_axi_gmem8_AWLOCK,
        m_axi_gmem8_AWCACHE,
        m_axi_gmem8_AWPROT,
        m_axi_gmem8_AWQOS,
        m_axi_gmem8_AWREGION,
        m_axi_gmem8_AWUSER,
        m_axi_gmem8_WVALID,
        m_axi_gmem8_WREADY,
        m_axi_gmem8_WDATA,
        m_axi_gmem8_WSTRB,
        m_axi_gmem8_WLAST,
        m_axi_gmem8_WID,
        m_axi_gmem8_WUSER,
        m_axi_gmem8_ARVALID,
        m_axi_gmem8_ARREADY,
        m_axi_gmem8_ARADDR,
        m_axi_gmem8_ARID,
        m_axi_gmem8_ARLEN,
        m_axi_gmem8_ARSIZE,
        m_axi_gmem8_ARBURST,
        m_axi_gmem8_ARLOCK,
        m_axi_gmem8_ARCACHE,
        m_axi_gmem8_ARPROT,
        m_axi_gmem8_ARQOS,
        m_axi_gmem8_ARREGION,
        m_axi_gmem8_ARUSER,
        m_axi_gmem8_RVALID,
        m_axi_gmem8_RREADY,
        m_axi_gmem8_RDATA,
        m_axi_gmem8_RLAST,
        m_axi_gmem8_RID,
        m_axi_gmem8_RFIFONUM,
        m_axi_gmem8_RUSER,
        m_axi_gmem8_RRESP,
        m_axi_gmem8_BVALID,
        m_axi_gmem8_BREADY,
        m_axi_gmem8_BRESP,
        m_axi_gmem8_BID,
        m_axi_gmem8_BUSER,
        s_PQ_codes_0_din,
        s_PQ_codes_0_num_data_valid,
        s_PQ_codes_0_fifo_cap,
        s_PQ_codes_0_full_n,
        s_PQ_codes_0_write,
        s_PQ_codes_1_din,
        s_PQ_codes_1_num_data_valid,
        s_PQ_codes_1_fifo_cap,
        s_PQ_codes_1_full_n,
        s_PQ_codes_1_write,
        s_PQ_codes_2_din,
        s_PQ_codes_2_num_data_valid,
        s_PQ_codes_2_fifo_cap,
        s_PQ_codes_2_full_n,
        s_PQ_codes_2_write,
        s_PQ_codes_3_din,
        s_PQ_codes_3_num_data_valid,
        s_PQ_codes_3_fifo_cap,
        s_PQ_codes_3_full_n,
        s_PQ_codes_3_write,
        sext_ln131_4,
        sext_ln131_3,
        sext_ln131_2,
        sext_ln131_1,
        trunc_ln,
        sub,
        cmp30,
        cmp34,
        cmp42,
        cmp50,
        PQ_reg_0_cell_ID,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem5_AWVALID;
input   m_axi_gmem5_AWREADY;
output  [63:0] m_axi_gmem5_AWADDR;
output  [0:0] m_axi_gmem5_AWID;
output  [31:0] m_axi_gmem5_AWLEN;
output  [2:0] m_axi_gmem5_AWSIZE;
output  [1:0] m_axi_gmem5_AWBURST;
output  [1:0] m_axi_gmem5_AWLOCK;
output  [3:0] m_axi_gmem5_AWCACHE;
output  [2:0] m_axi_gmem5_AWPROT;
output  [3:0] m_axi_gmem5_AWQOS;
output  [3:0] m_axi_gmem5_AWREGION;
output  [0:0] m_axi_gmem5_AWUSER;
output   m_axi_gmem5_WVALID;
input   m_axi_gmem5_WREADY;
output  [511:0] m_axi_gmem5_WDATA;
output  [63:0] m_axi_gmem5_WSTRB;
output   m_axi_gmem5_WLAST;
output  [0:0] m_axi_gmem5_WID;
output  [0:0] m_axi_gmem5_WUSER;
output   m_axi_gmem5_ARVALID;
input   m_axi_gmem5_ARREADY;
output  [63:0] m_axi_gmem5_ARADDR;
output  [0:0] m_axi_gmem5_ARID;
output  [31:0] m_axi_gmem5_ARLEN;
output  [2:0] m_axi_gmem5_ARSIZE;
output  [1:0] m_axi_gmem5_ARBURST;
output  [1:0] m_axi_gmem5_ARLOCK;
output  [3:0] m_axi_gmem5_ARCACHE;
output  [2:0] m_axi_gmem5_ARPROT;
output  [3:0] m_axi_gmem5_ARQOS;
output  [3:0] m_axi_gmem5_ARREGION;
output  [0:0] m_axi_gmem5_ARUSER;
input   m_axi_gmem5_RVALID;
output   m_axi_gmem5_RREADY;
input  [511:0] m_axi_gmem5_RDATA;
input   m_axi_gmem5_RLAST;
input  [0:0] m_axi_gmem5_RID;
input  [8:0] m_axi_gmem5_RFIFONUM;
input  [0:0] m_axi_gmem5_RUSER;
input  [1:0] m_axi_gmem5_RRESP;
input   m_axi_gmem5_BVALID;
output   m_axi_gmem5_BREADY;
input  [1:0] m_axi_gmem5_BRESP;
input  [0:0] m_axi_gmem5_BID;
input  [0:0] m_axi_gmem5_BUSER;
output   m_axi_gmem6_AWVALID;
input   m_axi_gmem6_AWREADY;
output  [63:0] m_axi_gmem6_AWADDR;
output  [0:0] m_axi_gmem6_AWID;
output  [31:0] m_axi_gmem6_AWLEN;
output  [2:0] m_axi_gmem6_AWSIZE;
output  [1:0] m_axi_gmem6_AWBURST;
output  [1:0] m_axi_gmem6_AWLOCK;
output  [3:0] m_axi_gmem6_AWCACHE;
output  [2:0] m_axi_gmem6_AWPROT;
output  [3:0] m_axi_gmem6_AWQOS;
output  [3:0] m_axi_gmem6_AWREGION;
output  [0:0] m_axi_gmem6_AWUSER;
output   m_axi_gmem6_WVALID;
input   m_axi_gmem6_WREADY;
output  [511:0] m_axi_gmem6_WDATA;
output  [63:0] m_axi_gmem6_WSTRB;
output   m_axi_gmem6_WLAST;
output  [0:0] m_axi_gmem6_WID;
output  [0:0] m_axi_gmem6_WUSER;
output   m_axi_gmem6_ARVALID;
input   m_axi_gmem6_ARREADY;
output  [63:0] m_axi_gmem6_ARADDR;
output  [0:0] m_axi_gmem6_ARID;
output  [31:0] m_axi_gmem6_ARLEN;
output  [2:0] m_axi_gmem6_ARSIZE;
output  [1:0] m_axi_gmem6_ARBURST;
output  [1:0] m_axi_gmem6_ARLOCK;
output  [3:0] m_axi_gmem6_ARCACHE;
output  [2:0] m_axi_gmem6_ARPROT;
output  [3:0] m_axi_gmem6_ARQOS;
output  [3:0] m_axi_gmem6_ARREGION;
output  [0:0] m_axi_gmem6_ARUSER;
input   m_axi_gmem6_RVALID;
output   m_axi_gmem6_RREADY;
input  [511:0] m_axi_gmem6_RDATA;
input   m_axi_gmem6_RLAST;
input  [0:0] m_axi_gmem6_RID;
input  [8:0] m_axi_gmem6_RFIFONUM;
input  [0:0] m_axi_gmem6_RUSER;
input  [1:0] m_axi_gmem6_RRESP;
input   m_axi_gmem6_BVALID;
output   m_axi_gmem6_BREADY;
input  [1:0] m_axi_gmem6_BRESP;
input  [0:0] m_axi_gmem6_BID;
input  [0:0] m_axi_gmem6_BUSER;
output   m_axi_gmem7_AWVALID;
input   m_axi_gmem7_AWREADY;
output  [63:0] m_axi_gmem7_AWADDR;
output  [0:0] m_axi_gmem7_AWID;
output  [31:0] m_axi_gmem7_AWLEN;
output  [2:0] m_axi_gmem7_AWSIZE;
output  [1:0] m_axi_gmem7_AWBURST;
output  [1:0] m_axi_gmem7_AWLOCK;
output  [3:0] m_axi_gmem7_AWCACHE;
output  [2:0] m_axi_gmem7_AWPROT;
output  [3:0] m_axi_gmem7_AWQOS;
output  [3:0] m_axi_gmem7_AWREGION;
output  [0:0] m_axi_gmem7_AWUSER;
output   m_axi_gmem7_WVALID;
input   m_axi_gmem7_WREADY;
output  [511:0] m_axi_gmem7_WDATA;
output  [63:0] m_axi_gmem7_WSTRB;
output   m_axi_gmem7_WLAST;
output  [0:0] m_axi_gmem7_WID;
output  [0:0] m_axi_gmem7_WUSER;
output   m_axi_gmem7_ARVALID;
input   m_axi_gmem7_ARREADY;
output  [63:0] m_axi_gmem7_ARADDR;
output  [0:0] m_axi_gmem7_ARID;
output  [31:0] m_axi_gmem7_ARLEN;
output  [2:0] m_axi_gmem7_ARSIZE;
output  [1:0] m_axi_gmem7_ARBURST;
output  [1:0] m_axi_gmem7_ARLOCK;
output  [3:0] m_axi_gmem7_ARCACHE;
output  [2:0] m_axi_gmem7_ARPROT;
output  [3:0] m_axi_gmem7_ARQOS;
output  [3:0] m_axi_gmem7_ARREGION;
output  [0:0] m_axi_gmem7_ARUSER;
input   m_axi_gmem7_RVALID;
output   m_axi_gmem7_RREADY;
input  [511:0] m_axi_gmem7_RDATA;
input   m_axi_gmem7_RLAST;
input  [0:0] m_axi_gmem7_RID;
input  [8:0] m_axi_gmem7_RFIFONUM;
input  [0:0] m_axi_gmem7_RUSER;
input  [1:0] m_axi_gmem7_RRESP;
input   m_axi_gmem7_BVALID;
output   m_axi_gmem7_BREADY;
input  [1:0] m_axi_gmem7_BRESP;
input  [0:0] m_axi_gmem7_BID;
input  [0:0] m_axi_gmem7_BUSER;
output   m_axi_gmem8_AWVALID;
input   m_axi_gmem8_AWREADY;
output  [63:0] m_axi_gmem8_AWADDR;
output  [0:0] m_axi_gmem8_AWID;
output  [31:0] m_axi_gmem8_AWLEN;
output  [2:0] m_axi_gmem8_AWSIZE;
output  [1:0] m_axi_gmem8_AWBURST;
output  [1:0] m_axi_gmem8_AWLOCK;
output  [3:0] m_axi_gmem8_AWCACHE;
output  [2:0] m_axi_gmem8_AWPROT;
output  [3:0] m_axi_gmem8_AWQOS;
output  [3:0] m_axi_gmem8_AWREGION;
output  [0:0] m_axi_gmem8_AWUSER;
output   m_axi_gmem8_WVALID;
input   m_axi_gmem8_WREADY;
output  [511:0] m_axi_gmem8_WDATA;
output  [63:0] m_axi_gmem8_WSTRB;
output   m_axi_gmem8_WLAST;
output  [0:0] m_axi_gmem8_WID;
output  [0:0] m_axi_gmem8_WUSER;
output   m_axi_gmem8_ARVALID;
input   m_axi_gmem8_ARREADY;
output  [63:0] m_axi_gmem8_ARADDR;
output  [0:0] m_axi_gmem8_ARID;
output  [31:0] m_axi_gmem8_ARLEN;
output  [2:0] m_axi_gmem8_ARSIZE;
output  [1:0] m_axi_gmem8_ARBURST;
output  [1:0] m_axi_gmem8_ARLOCK;
output  [3:0] m_axi_gmem8_ARCACHE;
output  [2:0] m_axi_gmem8_ARPROT;
output  [3:0] m_axi_gmem8_ARQOS;
output  [3:0] m_axi_gmem8_ARREGION;
output  [0:0] m_axi_gmem8_ARUSER;
input   m_axi_gmem8_RVALID;
output   m_axi_gmem8_RREADY;
input  [511:0] m_axi_gmem8_RDATA;
input   m_axi_gmem8_RLAST;
input  [0:0] m_axi_gmem8_RID;
input  [8:0] m_axi_gmem8_RFIFONUM;
input  [0:0] m_axi_gmem8_RUSER;
input  [1:0] m_axi_gmem8_RRESP;
input   m_axi_gmem8_BVALID;
output   m_axi_gmem8_BREADY;
input  [1:0] m_axi_gmem8_BRESP;
input  [0:0] m_axi_gmem8_BID;
input  [0:0] m_axi_gmem8_BUSER;
output  [576:0] s_PQ_codes_0_din;
input  [3:0] s_PQ_codes_0_num_data_valid;
input  [3:0] s_PQ_codes_0_fifo_cap;
input   s_PQ_codes_0_full_n;
output   s_PQ_codes_0_write;
output  [576:0] s_PQ_codes_1_din;
input  [3:0] s_PQ_codes_1_num_data_valid;
input  [3:0] s_PQ_codes_1_fifo_cap;
input   s_PQ_codes_1_full_n;
output   s_PQ_codes_1_write;
output  [576:0] s_PQ_codes_2_din;
input  [3:0] s_PQ_codes_2_num_data_valid;
input  [3:0] s_PQ_codes_2_fifo_cap;
input   s_PQ_codes_2_full_n;
output   s_PQ_codes_2_write;
output  [576:0] s_PQ_codes_3_din;
input  [3:0] s_PQ_codes_3_num_data_valid;
input  [3:0] s_PQ_codes_3_fifo_cap;
input   s_PQ_codes_3_full_n;
output   s_PQ_codes_3_write;
input  [57:0] sext_ln131_4;
input  [57:0] sext_ln131_3;
input  [57:0] sext_ln131_2;
input  [57:0] sext_ln131_1;
input  [30:0] trunc_ln;
input  [30:0] sub;
input  [0:0] cmp30;
input  [0:0] cmp34;
input  [0:0] cmp42;
input  [0:0] cmp50;
input  [31:0] PQ_reg_0_cell_ID;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg m_axi_gmem5_RREADY;
reg m_axi_gmem6_RREADY;
reg m_axi_gmem7_RREADY;
reg m_axi_gmem8_RREADY;
reg s_PQ_codes_0_write;
reg s_PQ_codes_1_write;
reg s_PQ_codes_2_write;
reg s_PQ_codes_3_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln131_reg_436;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln131_fu_242_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem8_blk_n_R;
wire    ap_block_pp0_stage0;
reg    gmem7_blk_n_R;
reg    gmem6_blk_n_R;
reg    gmem5_blk_n_R;
reg    s_PQ_codes_0_blk_n;
reg    s_PQ_codes_1_blk_n;
reg    s_PQ_codes_2_blk_n;
reg    s_PQ_codes_3_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [30:0] entry_id_reg_431;
reg   [30:0] entry_id_reg_431_pp0_iter1_reg;
wire   [0:0] cmp29_fu_254_p2;
reg   [0:0] cmp29_reg_440;
reg   [0:0] cmp29_reg_440_pp0_iter1_reg;
reg   [511:0] PQ_reg_multi_PE_0_V_reg_448;
reg   [511:0] PQ_reg_multi_PE_1_V_reg_453;
reg   [511:0] PQ_reg_multi_PE_2_V_reg_458;
reg   [511:0] PQ_reg_multi_PE_3_V_reg_463;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [30:0] PQ_reg_3_offset_fu_100;
wire   [30:0] add_ln131_fu_248_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_entry_id;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] and_ln150_fu_289_p2;
wire   [0:0] and_ln151_fu_299_p2;
wire   [0:0] and_ln152_fu_309_p2;
wire   [0:0] and_ln153_fu_319_p2;
wire   [31:0] zext_ln174_fu_329_p1;
wire   [0:0] PQ_reg_0_valid_fu_293_p2;
wire   [0:0] PQ_reg_1_valid_fu_303_p2;
wire   [0:0] PQ_reg_2_valid_fu_313_p2;
wire   [0:0] PQ_reg_3_valid_fu_323_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_ext_blocking_cur_n;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

vadd_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln131_fu_242_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            PQ_reg_3_offset_fu_100 <= add_ln131_fu_248_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            PQ_reg_3_offset_fu_100 <= 31'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PQ_reg_multi_PE_0_V_reg_448 <= m_axi_gmem5_RDATA;
        PQ_reg_multi_PE_1_V_reg_453 <= m_axi_gmem6_RDATA;
        PQ_reg_multi_PE_2_V_reg_458 <= m_axi_gmem7_RDATA;
        PQ_reg_multi_PE_3_V_reg_463 <= m_axi_gmem8_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        cmp29_reg_440_pp0_iter1_reg <= cmp29_reg_440;
        entry_id_reg_431 <= ap_sig_allocacmp_entry_id;
        entry_id_reg_431_pp0_iter1_reg <= entry_id_reg_431;
        icmp_ln131_reg_436 <= icmp_ln131_fu_242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_242_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp29_reg_440 <= cmp29_fu_254_p2;
    end
end

always @ (*) begin
    if (((icmp_ln131_fu_242_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_entry_id = 31'd0;
    end else begin
        ap_sig_allocacmp_entry_id = PQ_reg_3_offset_fu_100;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem5_blk_n_R = m_axi_gmem5_RVALID;
    end else begin
        gmem5_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem6_blk_n_R = m_axi_gmem6_RVALID;
    end else begin
        gmem6_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem7_blk_n_R = m_axi_gmem7_RVALID;
    end else begin
        gmem7_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem8_blk_n_R = m_axi_gmem8_RVALID;
    end else begin
        gmem8_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem5_RREADY = 1'b1;
    end else begin
        m_axi_gmem5_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem6_RREADY = 1'b1;
    end else begin
        m_axi_gmem6_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem7_RREADY = 1'b1;
    end else begin
        m_axi_gmem7_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_436 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem8_RREADY = 1'b1;
    end else begin
        m_axi_gmem8_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_0_blk_n = s_PQ_codes_0_full_n;
    end else begin
        s_PQ_codes_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_0_write = 1'b1;
    end else begin
        s_PQ_codes_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_1_blk_n = s_PQ_codes_1_full_n;
    end else begin
        s_PQ_codes_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_1_write = 1'b1;
    end else begin
        s_PQ_codes_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_2_blk_n = s_PQ_codes_2_full_n;
    end else begin
        s_PQ_codes_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_2_write = 1'b1;
    end else begin
        s_PQ_codes_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_3_blk_n = s_PQ_codes_3_full_n;
    end else begin
        s_PQ_codes_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        s_PQ_codes_3_write = 1'b1;
    end else begin
        s_PQ_codes_3_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PQ_reg_0_valid_fu_293_p2 = (1'd1 ^ and_ln150_fu_289_p2);

assign PQ_reg_1_valid_fu_303_p2 = (1'd1 ^ and_ln151_fu_299_p2);

assign PQ_reg_2_valid_fu_313_p2 = (1'd1 ^ and_ln152_fu_309_p2);

assign PQ_reg_3_valid_fu_323_p2 = (1'd1 ^ and_ln153_fu_319_p2);

assign add_ln131_fu_248_p2 = (ap_sig_allocacmp_entry_id + 31'd1);

assign and_ln150_fu_289_p2 = (cmp30 & cmp29_reg_440_pp0_iter1_reg);

assign and_ln151_fu_299_p2 = (cmp34 & cmp29_reg_440_pp0_iter1_reg);

assign and_ln152_fu_309_p2 = (cmp42 & cmp29_reg_440_pp0_iter1_reg);

assign and_ln153_fu_319_p2 = (cmp50 & cmp29_reg_440_pp0_iter1_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((s_PQ_codes_3_full_n == 1'b0) | (s_PQ_codes_2_full_n == 1'b0) | (s_PQ_codes_1_full_n == 1'b0) | (s_PQ_codes_0_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem5_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem8_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem7_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem6_RVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((s_PQ_codes_3_full_n == 1'b0) | (s_PQ_codes_2_full_n == 1'b0) | (s_PQ_codes_1_full_n == 1'b0) | (s_PQ_codes_0_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem5_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem8_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem7_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem6_RVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((s_PQ_codes_3_full_n == 1'b0) | (s_PQ_codes_2_full_n == 1'b0) | (s_PQ_codes_1_full_n == 1'b0) | (s_PQ_codes_0_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem5_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem8_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem7_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem6_RVALID == 1'b0)))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem5_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem8_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem7_RVALID == 1'b0)) | ((icmp_ln131_reg_436 == 1'd0) & (m_axi_gmem6_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((s_PQ_codes_3_full_n == 1'b0) | (s_PQ_codes_2_full_n == 1'b0) | (s_PQ_codes_1_full_n == 1'b0) | (s_PQ_codes_0_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_cur_n = (gmem8_blk_n_R & gmem7_blk_n_R & gmem6_blk_n_R & gmem5_blk_n_R);

assign ap_ext_blocking_n = (ap_ext_blocking_cur_n & 1'b1);

assign ap_int_blocking_cur_n = (s_PQ_codes_3_blk_n & s_PQ_codes_2_blk_n & s_PQ_codes_1_blk_n & s_PQ_codes_0_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign cmp29_fu_254_p2 = ((ap_sig_allocacmp_entry_id == sub) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_242_p2 = ((ap_sig_allocacmp_entry_id == trunc_ln) ? 1'b1 : 1'b0);

assign m_axi_gmem5_ARADDR = 64'd0;

assign m_axi_gmem5_ARBURST = 2'd0;

assign m_axi_gmem5_ARCACHE = 4'd0;

assign m_axi_gmem5_ARID = 1'd0;

assign m_axi_gmem5_ARLEN = 32'd0;

assign m_axi_gmem5_ARLOCK = 2'd0;

assign m_axi_gmem5_ARPROT = 3'd0;

assign m_axi_gmem5_ARQOS = 4'd0;

assign m_axi_gmem5_ARREGION = 4'd0;

assign m_axi_gmem5_ARSIZE = 3'd0;

assign m_axi_gmem5_ARUSER = 1'd0;

assign m_axi_gmem5_ARVALID = 1'b0;

assign m_axi_gmem5_AWADDR = 64'd0;

assign m_axi_gmem5_AWBURST = 2'd0;

assign m_axi_gmem5_AWCACHE = 4'd0;

assign m_axi_gmem5_AWID = 1'd0;

assign m_axi_gmem5_AWLEN = 32'd0;

assign m_axi_gmem5_AWLOCK = 2'd0;

assign m_axi_gmem5_AWPROT = 3'd0;

assign m_axi_gmem5_AWQOS = 4'd0;

assign m_axi_gmem5_AWREGION = 4'd0;

assign m_axi_gmem5_AWSIZE = 3'd0;

assign m_axi_gmem5_AWUSER = 1'd0;

assign m_axi_gmem5_AWVALID = 1'b0;

assign m_axi_gmem5_BREADY = 1'b0;

assign m_axi_gmem5_WDATA = 512'd0;

assign m_axi_gmem5_WID = 1'd0;

assign m_axi_gmem5_WLAST = 1'b0;

assign m_axi_gmem5_WSTRB = 64'd0;

assign m_axi_gmem5_WUSER = 1'd0;

assign m_axi_gmem5_WVALID = 1'b0;

assign m_axi_gmem6_ARADDR = 64'd0;

assign m_axi_gmem6_ARBURST = 2'd0;

assign m_axi_gmem6_ARCACHE = 4'd0;

assign m_axi_gmem6_ARID = 1'd0;

assign m_axi_gmem6_ARLEN = 32'd0;

assign m_axi_gmem6_ARLOCK = 2'd0;

assign m_axi_gmem6_ARPROT = 3'd0;

assign m_axi_gmem6_ARQOS = 4'd0;

assign m_axi_gmem6_ARREGION = 4'd0;

assign m_axi_gmem6_ARSIZE = 3'd0;

assign m_axi_gmem6_ARUSER = 1'd0;

assign m_axi_gmem6_ARVALID = 1'b0;

assign m_axi_gmem6_AWADDR = 64'd0;

assign m_axi_gmem6_AWBURST = 2'd0;

assign m_axi_gmem6_AWCACHE = 4'd0;

assign m_axi_gmem6_AWID = 1'd0;

assign m_axi_gmem6_AWLEN = 32'd0;

assign m_axi_gmem6_AWLOCK = 2'd0;

assign m_axi_gmem6_AWPROT = 3'd0;

assign m_axi_gmem6_AWQOS = 4'd0;

assign m_axi_gmem6_AWREGION = 4'd0;

assign m_axi_gmem6_AWSIZE = 3'd0;

assign m_axi_gmem6_AWUSER = 1'd0;

assign m_axi_gmem6_AWVALID = 1'b0;

assign m_axi_gmem6_BREADY = 1'b0;

assign m_axi_gmem6_WDATA = 512'd0;

assign m_axi_gmem6_WID = 1'd0;

assign m_axi_gmem6_WLAST = 1'b0;

assign m_axi_gmem6_WSTRB = 64'd0;

assign m_axi_gmem6_WUSER = 1'd0;

assign m_axi_gmem6_WVALID = 1'b0;

assign m_axi_gmem7_ARADDR = 64'd0;

assign m_axi_gmem7_ARBURST = 2'd0;

assign m_axi_gmem7_ARCACHE = 4'd0;

assign m_axi_gmem7_ARID = 1'd0;

assign m_axi_gmem7_ARLEN = 32'd0;

assign m_axi_gmem7_ARLOCK = 2'd0;

assign m_axi_gmem7_ARPROT = 3'd0;

assign m_axi_gmem7_ARQOS = 4'd0;

assign m_axi_gmem7_ARREGION = 4'd0;

assign m_axi_gmem7_ARSIZE = 3'd0;

assign m_axi_gmem7_ARUSER = 1'd0;

assign m_axi_gmem7_ARVALID = 1'b0;

assign m_axi_gmem7_AWADDR = 64'd0;

assign m_axi_gmem7_AWBURST = 2'd0;

assign m_axi_gmem7_AWCACHE = 4'd0;

assign m_axi_gmem7_AWID = 1'd0;

assign m_axi_gmem7_AWLEN = 32'd0;

assign m_axi_gmem7_AWLOCK = 2'd0;

assign m_axi_gmem7_AWPROT = 3'd0;

assign m_axi_gmem7_AWQOS = 4'd0;

assign m_axi_gmem7_AWREGION = 4'd0;

assign m_axi_gmem7_AWSIZE = 3'd0;

assign m_axi_gmem7_AWUSER = 1'd0;

assign m_axi_gmem7_AWVALID = 1'b0;

assign m_axi_gmem7_BREADY = 1'b0;

assign m_axi_gmem7_WDATA = 512'd0;

assign m_axi_gmem7_WID = 1'd0;

assign m_axi_gmem7_WLAST = 1'b0;

assign m_axi_gmem7_WSTRB = 64'd0;

assign m_axi_gmem7_WUSER = 1'd0;

assign m_axi_gmem7_WVALID = 1'b0;

assign m_axi_gmem8_ARADDR = 64'd0;

assign m_axi_gmem8_ARBURST = 2'd0;

assign m_axi_gmem8_ARCACHE = 4'd0;

assign m_axi_gmem8_ARID = 1'd0;

assign m_axi_gmem8_ARLEN = 32'd0;

assign m_axi_gmem8_ARLOCK = 2'd0;

assign m_axi_gmem8_ARPROT = 3'd0;

assign m_axi_gmem8_ARQOS = 4'd0;

assign m_axi_gmem8_ARREGION = 4'd0;

assign m_axi_gmem8_ARSIZE = 3'd0;

assign m_axi_gmem8_ARUSER = 1'd0;

assign m_axi_gmem8_ARVALID = 1'b0;

assign m_axi_gmem8_AWADDR = 64'd0;

assign m_axi_gmem8_AWBURST = 2'd0;

assign m_axi_gmem8_AWCACHE = 4'd0;

assign m_axi_gmem8_AWID = 1'd0;

assign m_axi_gmem8_AWLEN = 32'd0;

assign m_axi_gmem8_AWLOCK = 2'd0;

assign m_axi_gmem8_AWPROT = 3'd0;

assign m_axi_gmem8_AWQOS = 4'd0;

assign m_axi_gmem8_AWREGION = 4'd0;

assign m_axi_gmem8_AWSIZE = 3'd0;

assign m_axi_gmem8_AWUSER = 1'd0;

assign m_axi_gmem8_AWVALID = 1'b0;

assign m_axi_gmem8_BREADY = 1'b0;

assign m_axi_gmem8_WDATA = 512'd0;

assign m_axi_gmem8_WID = 1'd0;

assign m_axi_gmem8_WLAST = 1'b0;

assign m_axi_gmem8_WSTRB = 64'd0;

assign m_axi_gmem8_WUSER = 1'd0;

assign m_axi_gmem8_WVALID = 1'b0;

assign s_PQ_codes_0_din = {{{{PQ_reg_multi_PE_0_V_reg_448}, {zext_ln174_fu_329_p1}}, {PQ_reg_0_cell_ID}}, {PQ_reg_0_valid_fu_293_p2}};

assign s_PQ_codes_1_din = {{{{PQ_reg_multi_PE_1_V_reg_453}, {zext_ln174_fu_329_p1}}, {PQ_reg_0_cell_ID}}, {PQ_reg_1_valid_fu_303_p2}};

assign s_PQ_codes_2_din = {{{{PQ_reg_multi_PE_2_V_reg_458}, {zext_ln174_fu_329_p1}}, {PQ_reg_0_cell_ID}}, {PQ_reg_2_valid_fu_313_p2}};

assign s_PQ_codes_3_din = {{{{PQ_reg_multi_PE_3_V_reg_463}, {zext_ln174_fu_329_p1}}, {PQ_reg_0_cell_ID}}, {PQ_reg_3_valid_fu_323_p2}};

assign zext_ln174_fu_329_p1 = entry_id_reg_431_pp0_iter1_reg;

endmodule //vadd_load_PQ_codes_Pipeline_VITIS_LOOP_131_3
